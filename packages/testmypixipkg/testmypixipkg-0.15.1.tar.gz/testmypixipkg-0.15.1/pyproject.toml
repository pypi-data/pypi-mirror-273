[project]
name = "testmypixipkg"
version = "0.15.1"
description = "Add a short description here"
license = "MIT"
readme = "README.md"
authors = [{ name = "Jermiah Joseph", email = "jermiahjoseph98@gmail.com" }]
requires-python = ">= 3.11"
dependencies = ["rich", "rich-click"]

[project.scripts]
pypkg = "testmypixipkg.__main__:say_hello"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64", "win-64", "osx-64"]

[tool.pixi.pypi-dependencies]
testmypixipkg = { path = ".", editable = true }

[tool.pixi.environments]
dev = { features = ["test", "style", "docs"], solve-group = "default" }
publish = { features = ["build", "release"], solve-group = "default" }

[tool.pixi.tasks]

####################################################################################################
############################################## TEST ################################################
[tool.pixi.feature.test.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-xdist = "*"

[tool.pixi.feature.test.tasks]
test = { cmd = [
  "pytest",
  "--numprocesses=auto",
  "-s",
  "--verbose",
  "--cov=testmypixipkg",
  "--cov-report=xml:coverage-report/coverage.xml",
], inputs = [
  "src",
  "tests",
], outputs = [
  "coverage-report/coverage.xml",
] }

####################################################################################################
############################################## STYLE ###############################################
[tool.pixi.feature.style.dependencies]
ruff = "*"

[tool.pixi.feature.style.tasks]
style = { cmd = "ruff check src", inputs = ["src"] }

####################################################################################################
############################################## DOCS ################################################
[tool.pixi.feature.docs.dependencies]
mkdocs = "*"

[tool.pixi.feature.docs.tasks]
docs = { cmd = "mkdocs build", inputs = ["docs"], outputs = ["site"] }

####################################################################################################
#################################### RELEASE & BUILD ###############################################
[tool.pixi.feature.release.dependencies]
python-semantic-release = ">=8.5.1"

[tool.pixi.feature.build.dependencies]
hatch = "*"

[tool.pixi.feature.build.tasks]
# Builds the package and publishes it to the test.pypi.org repository
build = { cmd = "hatch build --clean", inputs = ["src"], outputs = ["dist/*"] }

publish-pypi = { cmd = "hatch publish --yes --repo main", inputs = [
  "dist/*",
], depends-on = [
  "build",
] }

publish-test = { cmd = "hatch publish --yes --repo test", inputs = [
  "dist/*",
], depends-on = [
  "build",
] }

[tool.ruff]
target-version = "py39"
output-format = "full"
line-length = 99
fix = true
# extend-exclude is used to exclude directories from the flake8 checks
extend-exclude = ["docs/*", "tests/*"]

[tool.ruff.lint]
select = [
  "E",
  "F",
  "W",   # flake8
  "C",   # mccabe
  "I",   # isort
  "N",   # pep8-naming
  "D",   # flake8-docstrings
  "ANN", # flake8-annotations
  "S",   # flake8-bandit
  "BLE", # flake8-blind-except
  "B",   # flake8-bugbear
  "A",   # flake8-builtins
  "G",   # flake8-logging-format
  "ERA", # eradicate
  "ISC", # flake8-implicit-str-concat
  "RUF", # Ruff-specific rules
]
ignore = ["ANN101"]
unfixable = [
  "ERA", # Don't remove commented-out code
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = ["{{ cookiecutter.project_slug }}"]

[tool.ruff.lint.pydocstyle]
convention = "google"
