[tool.poetry]
name = "fbmc-linearisation-analysis"
version = "0.4.4"
description = ""
authors = ["Robert Solli <robert@xal.no>", "Kristan Authen <kristian.authen@statnett.no>"]
readme = "README.md"
packages = [{include = "fbmc_quality"}]

[tool.poetry.scripts]
fetch_jao_data = 'fbmc_quality.jao_data.jao_store_cli:app'
fetch_entsoe_data = 'fbmc_quality.entsoe_data.entsoe_store_cli:app'

[tool.poetry.dependencies]
python = ">=3.10,<3.11.0 || >3.11.0,<4.0"
requests = "^2.31.0"
polars = "^0.20.3"
beautifulsoup4 = "^4.12.2"
entsoe-py = ">=0.6.2"
matplotlib = "^3.7.2"
tzlocal = "^5.0.1"
pytz = "^2023.3"
pyarrow = "16.1.0"
scikit-learn = "^1.3.0"
pandera = {extras = ["mypy"], version = "^0.17.0"}
typer = {extras = ["all"], version = "^0.9.0"}
aiohttp = "^3.8.5"
pandas = "^2.1.0"
levenshtein = "^0.22.0"
duckdb = "0.10.2"
duckdb-engine = "^0.9.2"
plotly = {version="^5.17.0", optional=true}
streamlit = {version = "^1.27.1", optional=true}
geopandas = {version="*", optional=true}
shapely = {version="*", optional=true}
geojson-rewind = {version="*", optional=true}
cache_to_disk = {version='*', optional=true}
pillow = {version='*', optional=true}


[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
isort = "^5.12.0"
pre-commit = "^3.3.3"
ipykernel = "^6.24.0"
python-dotenv = "^1.0.0"
scalene = "^1.5.23"
viztracer = "^0.15.6"
hypothesis = "^6.86.2"
sphinx = "^7.2.6"
sphinx-autodoc-typehints = "^1.24.0"
enum-tools = "^0.11.0"
sphinx-toolbox = "^3.5.0"
flake8 = "^6.1.0"
pytest = "^7.4.2"
pytest-dotenv = "^0.5.2"
snakeviz = "^2.2.0"
pytest-cov = "^4.1.0"
coverage = "^7.3.2"

[tool.poetry.extras]
app-template = ['streamlit','plotly', 'geopandas', 'shapely', 'geojson-rewind', 'pillow']
plotting = ['plotly', 'geopandas', 'shapely', 'geojson-rewind', 'pillow']
all = ['streamlit', "plotly", 'geopandas', 'shapely', 'geojson-rewind', 'pillow']

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.isort]
profile = "black"
line_length = 120
known_first_party = []

[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | profiling
)/
'''
