# coding: utf-8


"""
IGNORE:
    Nutanix Clustermgmt Versioned APIs

    Manage Hosts, Clusters and other Infrastructure.  # noqa: E501

    OpenAPI spec version: 4.0.1-beta-2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
IGNORE
"""
import pprint
import json
import ast
import re  # noqa: F401

import six
from pathlib import Path
from ntnx_clustermgmt_py_client.models.common.v1.response.ApiLink import ApiLink  # noqa: F401,E501
from ntnx_clustermgmt_py_client.models.common.v1.response.ExternalizableAbstractModel import ExternalizableAbstractModel  # noqa: F401,E501
from ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair import TimeIntValuePair  # noqa: F401,E501

class StorageContainerStats(ExternalizableAbstractModel):

    """

    :param controller_num_iops: (:attr:`controller_num_iops`) Number of I/O per second.
    :type controller_num_iops: 
    :param controller_io_bandwidthk_bps: (:attr:`controller_io_bandwidthk_bps`) Total I/O bandwidth - kB per second.
    :type controller_io_bandwidthk_bps: 
    :param controller_avg_io_latencyu_secs: (:attr:`controller_avg_io_latencyu_secs`) Average I/O latency in micro secs.
    :type controller_avg_io_latencyu_secs: 
    :param controller_num_read_iops: (:attr:`controller_num_read_iops`) Number of read I/O per second.
    :type controller_num_read_iops: 
    :param controller_num_write_iops: (:attr:`controller_num_write_iops`) Number of write I/O per second.
    :type controller_num_write_iops: 
    :param controller_read_io_bandwidthk_bps: (:attr:`controller_read_io_bandwidthk_bps`) Read I/O bandwidth - kB per second.
    :type controller_read_io_bandwidthk_bps: 
    :param controller_write_io_bandwidthk_bps: (:attr:`controller_write_io_bandwidthk_bps`) Write I/O bandwidth - kB per second.
    :type controller_write_io_bandwidthk_bps: 
    :param controller_avg_read_io_latencyu_secs: (:attr:`controller_avg_read_io_latencyu_secs`) Average read I/O latency in microseconds.
    :type controller_avg_read_io_latencyu_secs: 
    :param controller_avg_write_io_latencyu_secs: (:attr:`controller_avg_write_io_latencyu_secs`) Average read I/O latency in microseconds.
    :type controller_avg_write_io_latencyu_secs: 
    :param storage_reserved_capacity_bytes: (:attr:`storage_reserved_capacity_bytes`) Implicit physical reserved capacity(aggregated on vDisk level due to thick provisioning) in bytes.
    :type storage_reserved_capacity_bytes: 
    :param storage_actual_physical_usage_bytes: (:attr:`storage_actual_physical_usage_bytes`) Actual physical disk usage of the container without accounting for the reservation.
    :type storage_actual_physical_usage_bytes: 
    :param data_reduction_saving_ratio_ppm: (:attr:`data_reduction_saving_ratio_ppm`) Saving ratio in PPM as a result of Deduplication, compression and Erasure Coding.
    :type data_reduction_saving_ratio_ppm: 
    :param data_reduction_total_saving_ratio_ppm: (:attr:`data_reduction_total_saving_ratio_ppm`) Saving ratio in PPM consisting of Deduplication, Compression, Erasure Coding, Cloning, and Thin Provisioning.
    :type data_reduction_total_saving_ratio_ppm: 
    :param storage_free_bytes: (:attr:`storage_free_bytes`) Free storage in bytes.
    :type storage_free_bytes: 
    :param storage_capacity_bytes: (:attr:`storage_capacity_bytes`) Storage capacity in bytes.
    :type storage_capacity_bytes: 
    :param data_reduction_saved_bytes: (:attr:`data_reduction_saved_bytes`) Storage savings in bytes as a result of all the techniques.
    :type data_reduction_saved_bytes: 
    :param data_reduction_overall_pre_reduction_bytes: (:attr:`data_reduction_overall_pre_reduction_bytes`) Usage in bytes before reduction of Deduplication, Compression, Erasure Coding, Cloning, and Thin provisioning.
    :type data_reduction_overall_pre_reduction_bytes: 
    :param data_reduction_overall_post_reduction_bytes: (:attr:`data_reduction_overall_post_reduction_bytes`) Usage in bytes after reduction of Deduplication, Compression, Erasure Coding, Cloning, and Thin provisioning.
    :type data_reduction_overall_post_reduction_bytes: 
    :param data_reduction_compression_saving_ratio_ppm: (:attr:`data_reduction_compression_saving_ratio_ppm`) Saving ratio in PPM as a result of the Compression technique.
    :type data_reduction_compression_saving_ratio_ppm: 
    :param data_reduction_dedup_saving_ratio_ppm: (:attr:`data_reduction_dedup_saving_ratio_ppm`) Saving ratio in PPM as a result of the Deduplication technique.
    :type data_reduction_dedup_saving_ratio_ppm: 
    :param data_reduction_erasure_coding_saving_ratio_ppm: (:attr:`data_reduction_erasure_coding_saving_ratio_ppm`) Saving ratio in PPM as a result of the Erasure Coding technique.
    :type data_reduction_erasure_coding_saving_ratio_ppm: 
    :param data_reduction_thin_provision_saving_ratio_ppm: (:attr:`data_reduction_thin_provision_saving_ratio_ppm`) Saving ratio in PPM as a result of the Thin Provisioning technique.
    :type data_reduction_thin_provision_saving_ratio_ppm: 
    :param data_reduction_clone_saving_ratio_ppm: (:attr:`data_reduction_clone_saving_ratio_ppm`) Saving ratio in PPM as a result of the Cloning technique.
    :type data_reduction_clone_saving_ratio_ppm: 
    :param data_reduction_snapshot_saving_ratio_ppm: (:attr:`data_reduction_snapshot_saving_ratio_ppm`) Saving ratio in PPM as a result of Snapshot technique.
    :type data_reduction_snapshot_saving_ratio_ppm: 
    :param data_reduction_zero_write_savings_bytes: (:attr:`data_reduction_zero_write_savings_bytes`) Total amount of savings in bytes as a result of zero writes.
    :type data_reduction_zero_write_savings_bytes: 
    :param controller_read_io_ratio_ppm: (:attr:`controller_read_io_ratio_ppm`) Ratio of read I/O to total I/O in PPM.
    :type controller_read_io_ratio_ppm: 
    :param controller_write_io_ratio_ppm: (:attr:`controller_write_io_ratio_ppm`) Ratio of read I/O to total I/O in PPM.
    :type controller_write_io_ratio_ppm: 
    :param storage_replication_factor: (:attr:`storage_replication_factor`) Replication factor of Container.
    :type storage_replication_factor: 
    :param storage_usage_bytes: (:attr:`storage_usage_bytes`) Used storage in bytes.
    :type storage_usage_bytes: 
    :param storage_tier_das_sata_usage_bytes: (:attr:`storage_tier_das_sata_usage_bytes`) Total usage on HDD tier for the Container in bytes.
    :type storage_tier_das_sata_usage_bytes: 
    :param storage_tier_ssd_usage_bytes: (:attr:`storage_tier_ssd_usage_bytes`) Total usage on SDD tier for the Container in bytes
    :type storage_tier_ssd_usage_bytes: 
    :param health: (:attr:`health`) Health of the container is represented by an integer value in the range 0-100. Higher value is indicative of better health.
    :type health: 
    :param container_ext_id: (:attr:`container_ext_id`) extId of the Storage Container.
    :type container_ext_id: 

    """
    """
    IGNORE:
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    IGNORE
    """  # noqa: E501
    swagger_types = {
        'controller_num_iops': 'list[common.v1.stats.TimeIntValuePair]',
        'controller_io_bandwidthk_bps': 'list[common.v1.stats.TimeIntValuePair]',
        'controller_avg_io_latencyu_secs': 'list[common.v1.stats.TimeIntValuePair]',
        'controller_num_read_iops': 'list[common.v1.stats.TimeIntValuePair]',
        'controller_num_write_iops': 'list[common.v1.stats.TimeIntValuePair]',
        'controller_read_io_bandwidthk_bps': 'list[common.v1.stats.TimeIntValuePair]',
        'controller_write_io_bandwidthk_bps': 'list[common.v1.stats.TimeIntValuePair]',
        'controller_avg_read_io_latencyu_secs': 'list[common.v1.stats.TimeIntValuePair]',
        'controller_avg_write_io_latencyu_secs': 'list[common.v1.stats.TimeIntValuePair]',
        'storage_reserved_capacity_bytes': 'list[common.v1.stats.TimeIntValuePair]',
        'storage_actual_physical_usage_bytes': 'list[common.v1.stats.TimeIntValuePair]',
        'data_reduction_saving_ratio_ppm': 'list[common.v1.stats.TimeIntValuePair]',
        'data_reduction_total_saving_ratio_ppm': 'list[common.v1.stats.TimeIntValuePair]',
        'storage_free_bytes': 'list[common.v1.stats.TimeIntValuePair]',
        'storage_capacity_bytes': 'list[common.v1.stats.TimeIntValuePair]',
        'data_reduction_saved_bytes': 'list[common.v1.stats.TimeIntValuePair]',
        'data_reduction_overall_pre_reduction_bytes': 'list[common.v1.stats.TimeIntValuePair]',
        'data_reduction_overall_post_reduction_bytes': 'list[common.v1.stats.TimeIntValuePair]',
        'data_reduction_compression_saving_ratio_ppm': 'list[common.v1.stats.TimeIntValuePair]',
        'data_reduction_dedup_saving_ratio_ppm': 'list[common.v1.stats.TimeIntValuePair]',
        'data_reduction_erasure_coding_saving_ratio_ppm': 'list[common.v1.stats.TimeIntValuePair]',
        'data_reduction_thin_provision_saving_ratio_ppm': 'list[common.v1.stats.TimeIntValuePair]',
        'data_reduction_clone_saving_ratio_ppm': 'list[common.v1.stats.TimeIntValuePair]',
        'data_reduction_snapshot_saving_ratio_ppm': 'list[common.v1.stats.TimeIntValuePair]',
        'data_reduction_zero_write_savings_bytes': 'list[common.v1.stats.TimeIntValuePair]',
        'controller_read_io_ratio_ppm': 'list[common.v1.stats.TimeIntValuePair]',
        'controller_write_io_ratio_ppm': 'list[common.v1.stats.TimeIntValuePair]',
        'storage_replication_factor': 'list[common.v1.stats.TimeIntValuePair]',
        'storage_usage_bytes': 'list[common.v1.stats.TimeIntValuePair]',
        'storage_tier_das_sata_usage_bytes': 'list[common.v1.stats.TimeIntValuePair]',
        'storage_tier_ssd_usage_bytes': 'list[common.v1.stats.TimeIntValuePair]',
        'health': 'list[common.v1.stats.TimeIntValuePair]',
        'container_ext_id': 'str',
        'ext_id': 'str',
        'links': 'list[common.v1.response.ApiLink]',
        'tenant_id': 'str',
        '_reserved': 'dict(str, object)',
        '_object_type': 'str',
        '_unknown_fields': 'dict(str, object)',
    }

    attribute_map = {
        'controller_num_iops': 'controllerNumIops',
        'controller_io_bandwidthk_bps': 'controllerIoBandwidthkBps',
        'controller_avg_io_latencyu_secs': 'controllerAvgIoLatencyuSecs',
        'controller_num_read_iops': 'controllerNumReadIops',
        'controller_num_write_iops': 'controllerNumWriteIops',
        'controller_read_io_bandwidthk_bps': 'controllerReadIoBandwidthkBps',
        'controller_write_io_bandwidthk_bps': 'controllerWriteIoBandwidthkBps',
        'controller_avg_read_io_latencyu_secs': 'controllerAvgReadIoLatencyuSecs',
        'controller_avg_write_io_latencyu_secs': 'controllerAvgWriteIoLatencyuSecs',
        'storage_reserved_capacity_bytes': 'storageReservedCapacityBytes',
        'storage_actual_physical_usage_bytes': 'storageActualPhysicalUsageBytes',
        'data_reduction_saving_ratio_ppm': 'dataReductionSavingRatioPpm',
        'data_reduction_total_saving_ratio_ppm': 'dataReductionTotalSavingRatioPpm',
        'storage_free_bytes': 'storageFreeBytes',
        'storage_capacity_bytes': 'storageCapacityBytes',
        'data_reduction_saved_bytes': 'dataReductionSavedBytes',
        'data_reduction_overall_pre_reduction_bytes': 'dataReductionOverallPreReductionBytes',
        'data_reduction_overall_post_reduction_bytes': 'dataReductionOverallPostReductionBytes',
        'data_reduction_compression_saving_ratio_ppm': 'dataReductionCompressionSavingRatioPpm',
        'data_reduction_dedup_saving_ratio_ppm': 'dataReductionDedupSavingRatioPpm',
        'data_reduction_erasure_coding_saving_ratio_ppm': 'dataReductionErasureCodingSavingRatioPpm',
        'data_reduction_thin_provision_saving_ratio_ppm': 'dataReductionThinProvisionSavingRatioPpm',
        'data_reduction_clone_saving_ratio_ppm': 'dataReductionCloneSavingRatioPpm',
        'data_reduction_snapshot_saving_ratio_ppm': 'dataReductionSnapshotSavingRatioPpm',
        'data_reduction_zero_write_savings_bytes': 'dataReductionZeroWriteSavingsBytes',
        'controller_read_io_ratio_ppm': 'controllerReadIoRatioPpm',
        'controller_write_io_ratio_ppm': 'controllerWriteIoRatioPpm',
        'storage_replication_factor': 'storageReplicationFactor',
        'storage_usage_bytes': 'storageUsageBytes',
        'storage_tier_das_sata_usage_bytes': 'storageTierDasSataUsageBytes',
        'storage_tier_ssd_usage_bytes': 'storageTierSsdUsageBytes',
        'health': 'health',
        'container_ext_id': 'containerExtId',
        'ext_id': 'extId',
        'links': 'links',
        'tenant_id': 'tenantId',
        '_reserved': '$reserved',
        '_object_type': '$objectType',
        '_unknown_fields': '$unknownFields',
    }



    def __init__(self, controller_num_iops=None, controller_io_bandwidthk_bps=None, controller_avg_io_latencyu_secs=None, controller_num_read_iops=None, controller_num_write_iops=None, controller_read_io_bandwidthk_bps=None, controller_write_io_bandwidthk_bps=None, controller_avg_read_io_latencyu_secs=None, controller_avg_write_io_latencyu_secs=None, storage_reserved_capacity_bytes=None, storage_actual_physical_usage_bytes=None, data_reduction_saving_ratio_ppm=None, data_reduction_total_saving_ratio_ppm=None, storage_free_bytes=None, storage_capacity_bytes=None, data_reduction_saved_bytes=None, data_reduction_overall_pre_reduction_bytes=None, data_reduction_overall_post_reduction_bytes=None, data_reduction_compression_saving_ratio_ppm=None, data_reduction_dedup_saving_ratio_ppm=None, data_reduction_erasure_coding_saving_ratio_ppm=None, data_reduction_thin_provision_saving_ratio_ppm=None, data_reduction_clone_saving_ratio_ppm=None, data_reduction_snapshot_saving_ratio_ppm=None, data_reduction_zero_write_savings_bytes=None, controller_read_io_ratio_ppm=None, controller_write_io_ratio_ppm=None, storage_replication_factor=None, storage_usage_bytes=None, storage_tier_das_sata_usage_bytes=None, storage_tier_ssd_usage_bytes=None, health=None, container_ext_id=None, ext_id=None, links=None, tenant_id=None, *args, **kwargs):  # noqa: E501
        ExternalizableAbstractModel.__init__(self, ext_id, links, tenant_id, *args, **kwargs)
        self.__controller_num_iops = None
        self.__controller_io_bandwidthk_bps = None
        self.__controller_avg_io_latencyu_secs = None
        self.__controller_num_read_iops = None
        self.__controller_num_write_iops = None
        self.__controller_read_io_bandwidthk_bps = None
        self.__controller_write_io_bandwidthk_bps = None
        self.__controller_avg_read_io_latencyu_secs = None
        self.__controller_avg_write_io_latencyu_secs = None
        self.__storage_reserved_capacity_bytes = None
        self.__storage_actual_physical_usage_bytes = None
        self.__data_reduction_saving_ratio_ppm = None
        self.__data_reduction_total_saving_ratio_ppm = None
        self.__storage_free_bytes = None
        self.__storage_capacity_bytes = None
        self.__data_reduction_saved_bytes = None
        self.__data_reduction_overall_pre_reduction_bytes = None
        self.__data_reduction_overall_post_reduction_bytes = None
        self.__data_reduction_compression_saving_ratio_ppm = None
        self.__data_reduction_dedup_saving_ratio_ppm = None
        self.__data_reduction_erasure_coding_saving_ratio_ppm = None
        self.__data_reduction_thin_provision_saving_ratio_ppm = None
        self.__data_reduction_clone_saving_ratio_ppm = None
        self.__data_reduction_snapshot_saving_ratio_ppm = None
        self.__data_reduction_zero_write_savings_bytes = None
        self.__controller_read_io_ratio_ppm = None
        self.__controller_write_io_ratio_ppm = None
        self.__storage_replication_factor = None
        self.__storage_usage_bytes = None
        self.__storage_tier_das_sata_usage_bytes = None
        self.__storage_tier_ssd_usage_bytes = None
        self.__health = None
        self.__container_ext_id = None
        self.discriminator = None
        if controller_num_iops is not None:
            self.__controller_num_iops = controller_num_iops
        if controller_io_bandwidthk_bps is not None:
            self.__controller_io_bandwidthk_bps = controller_io_bandwidthk_bps
        if controller_avg_io_latencyu_secs is not None:
            self.__controller_avg_io_latencyu_secs = controller_avg_io_latencyu_secs
        if controller_num_read_iops is not None:
            self.__controller_num_read_iops = controller_num_read_iops
        if controller_num_write_iops is not None:
            self.__controller_num_write_iops = controller_num_write_iops
        if controller_read_io_bandwidthk_bps is not None:
            self.__controller_read_io_bandwidthk_bps = controller_read_io_bandwidthk_bps
        if controller_write_io_bandwidthk_bps is not None:
            self.__controller_write_io_bandwidthk_bps = controller_write_io_bandwidthk_bps
        if controller_avg_read_io_latencyu_secs is not None:
            self.__controller_avg_read_io_latencyu_secs = controller_avg_read_io_latencyu_secs
        if controller_avg_write_io_latencyu_secs is not None:
            self.__controller_avg_write_io_latencyu_secs = controller_avg_write_io_latencyu_secs
        if storage_reserved_capacity_bytes is not None:
            self.__storage_reserved_capacity_bytes = storage_reserved_capacity_bytes
        if storage_actual_physical_usage_bytes is not None:
            self.__storage_actual_physical_usage_bytes = storage_actual_physical_usage_bytes
        if data_reduction_saving_ratio_ppm is not None:
            self.__data_reduction_saving_ratio_ppm = data_reduction_saving_ratio_ppm
        if data_reduction_total_saving_ratio_ppm is not None:
            self.__data_reduction_total_saving_ratio_ppm = data_reduction_total_saving_ratio_ppm
        if storage_free_bytes is not None:
            self.__storage_free_bytes = storage_free_bytes
        if storage_capacity_bytes is not None:
            self.__storage_capacity_bytes = storage_capacity_bytes
        if data_reduction_saved_bytes is not None:
            self.__data_reduction_saved_bytes = data_reduction_saved_bytes
        if data_reduction_overall_pre_reduction_bytes is not None:
            self.__data_reduction_overall_pre_reduction_bytes = data_reduction_overall_pre_reduction_bytes
        if data_reduction_overall_post_reduction_bytes is not None:
            self.__data_reduction_overall_post_reduction_bytes = data_reduction_overall_post_reduction_bytes
        if data_reduction_compression_saving_ratio_ppm is not None:
            self.__data_reduction_compression_saving_ratio_ppm = data_reduction_compression_saving_ratio_ppm
        if data_reduction_dedup_saving_ratio_ppm is not None:
            self.__data_reduction_dedup_saving_ratio_ppm = data_reduction_dedup_saving_ratio_ppm
        if data_reduction_erasure_coding_saving_ratio_ppm is not None:
            self.__data_reduction_erasure_coding_saving_ratio_ppm = data_reduction_erasure_coding_saving_ratio_ppm
        if data_reduction_thin_provision_saving_ratio_ppm is not None:
            self.__data_reduction_thin_provision_saving_ratio_ppm = data_reduction_thin_provision_saving_ratio_ppm
        if data_reduction_clone_saving_ratio_ppm is not None:
            self.__data_reduction_clone_saving_ratio_ppm = data_reduction_clone_saving_ratio_ppm
        if data_reduction_snapshot_saving_ratio_ppm is not None:
            self.__data_reduction_snapshot_saving_ratio_ppm = data_reduction_snapshot_saving_ratio_ppm
        if data_reduction_zero_write_savings_bytes is not None:
            self.__data_reduction_zero_write_savings_bytes = data_reduction_zero_write_savings_bytes
        if controller_read_io_ratio_ppm is not None:
            self.__controller_read_io_ratio_ppm = controller_read_io_ratio_ppm
        if controller_write_io_ratio_ppm is not None:
            self.__controller_write_io_ratio_ppm = controller_write_io_ratio_ppm
        if storage_replication_factor is not None:
            self.__storage_replication_factor = storage_replication_factor
        if storage_usage_bytes is not None:
            self.__storage_usage_bytes = storage_usage_bytes
        if storage_tier_das_sata_usage_bytes is not None:
            self.__storage_tier_das_sata_usage_bytes = storage_tier_das_sata_usage_bytes
        if storage_tier_ssd_usage_bytes is not None:
            self.__storage_tier_ssd_usage_bytes = storage_tier_ssd_usage_bytes
        if health is not None:
            self.__health = health
        if container_ext_id is not None:
            self.__container_ext_id = container_ext_id

    def _initialize_object_type(self):
        return 'clustermgmt.v4.stats.StorageContainerStats'

    def _initialize_object_version(self):
        return 'v4.r0.b2'


    @property
    def controller_num_iops(self):
        """
        Number of I/O per second.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__controller_num_iops

    @controller_num_iops.setter
    def controller_num_iops(self, controller_num_iops):

        self.__controller_num_iops = controller_num_iops

    @property
    def controller_io_bandwidthk_bps(self):
        """
        Total I/O bandwidth - kB per second.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__controller_io_bandwidthk_bps

    @controller_io_bandwidthk_bps.setter
    def controller_io_bandwidthk_bps(self, controller_io_bandwidthk_bps):

        self.__controller_io_bandwidthk_bps = controller_io_bandwidthk_bps

    @property
    def controller_avg_io_latencyu_secs(self):
        """
        Average I/O latency in micro secs.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__controller_avg_io_latencyu_secs

    @controller_avg_io_latencyu_secs.setter
    def controller_avg_io_latencyu_secs(self, controller_avg_io_latencyu_secs):

        self.__controller_avg_io_latencyu_secs = controller_avg_io_latencyu_secs

    @property
    def controller_num_read_iops(self):
        """
        Number of read I/O per second.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__controller_num_read_iops

    @controller_num_read_iops.setter
    def controller_num_read_iops(self, controller_num_read_iops):

        self.__controller_num_read_iops = controller_num_read_iops

    @property
    def controller_num_write_iops(self):
        """
        Number of write I/O per second.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__controller_num_write_iops

    @controller_num_write_iops.setter
    def controller_num_write_iops(self, controller_num_write_iops):

        self.__controller_num_write_iops = controller_num_write_iops

    @property
    def controller_read_io_bandwidthk_bps(self):
        """
        Read I/O bandwidth - kB per second.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__controller_read_io_bandwidthk_bps

    @controller_read_io_bandwidthk_bps.setter
    def controller_read_io_bandwidthk_bps(self, controller_read_io_bandwidthk_bps):

        self.__controller_read_io_bandwidthk_bps = controller_read_io_bandwidthk_bps

    @property
    def controller_write_io_bandwidthk_bps(self):
        """
        Write I/O bandwidth - kB per second.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__controller_write_io_bandwidthk_bps

    @controller_write_io_bandwidthk_bps.setter
    def controller_write_io_bandwidthk_bps(self, controller_write_io_bandwidthk_bps):

        self.__controller_write_io_bandwidthk_bps = controller_write_io_bandwidthk_bps

    @property
    def controller_avg_read_io_latencyu_secs(self):
        """
        Average read I/O latency in microseconds.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__controller_avg_read_io_latencyu_secs

    @controller_avg_read_io_latencyu_secs.setter
    def controller_avg_read_io_latencyu_secs(self, controller_avg_read_io_latencyu_secs):

        self.__controller_avg_read_io_latencyu_secs = controller_avg_read_io_latencyu_secs

    @property
    def controller_avg_write_io_latencyu_secs(self):
        """
        Average read I/O latency in microseconds.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__controller_avg_write_io_latencyu_secs

    @controller_avg_write_io_latencyu_secs.setter
    def controller_avg_write_io_latencyu_secs(self, controller_avg_write_io_latencyu_secs):

        self.__controller_avg_write_io_latencyu_secs = controller_avg_write_io_latencyu_secs

    @property
    def storage_reserved_capacity_bytes(self):
        """
        Implicit physical reserved capacity(aggregated on vDisk level due to thick provisioning) in bytes.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__storage_reserved_capacity_bytes

    @storage_reserved_capacity_bytes.setter
    def storage_reserved_capacity_bytes(self, storage_reserved_capacity_bytes):

        self.__storage_reserved_capacity_bytes = storage_reserved_capacity_bytes

    @property
    def storage_actual_physical_usage_bytes(self):
        """
        Actual physical disk usage of the container without accounting for the reservation.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__storage_actual_physical_usage_bytes

    @storage_actual_physical_usage_bytes.setter
    def storage_actual_physical_usage_bytes(self, storage_actual_physical_usage_bytes):

        self.__storage_actual_physical_usage_bytes = storage_actual_physical_usage_bytes

    @property
    def data_reduction_saving_ratio_ppm(self):
        """
        Saving ratio in PPM as a result of Deduplication, compression and Erasure Coding.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__data_reduction_saving_ratio_ppm

    @data_reduction_saving_ratio_ppm.setter
    def data_reduction_saving_ratio_ppm(self, data_reduction_saving_ratio_ppm):

        self.__data_reduction_saving_ratio_ppm = data_reduction_saving_ratio_ppm

    @property
    def data_reduction_total_saving_ratio_ppm(self):
        """
        Saving ratio in PPM consisting of Deduplication, Compression, Erasure Coding, Cloning, and Thin Provisioning.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__data_reduction_total_saving_ratio_ppm

    @data_reduction_total_saving_ratio_ppm.setter
    def data_reduction_total_saving_ratio_ppm(self, data_reduction_total_saving_ratio_ppm):

        self.__data_reduction_total_saving_ratio_ppm = data_reduction_total_saving_ratio_ppm

    @property
    def storage_free_bytes(self):
        """
        Free storage in bytes.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__storage_free_bytes

    @storage_free_bytes.setter
    def storage_free_bytes(self, storage_free_bytes):

        self.__storage_free_bytes = storage_free_bytes

    @property
    def storage_capacity_bytes(self):
        """
        Storage capacity in bytes.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__storage_capacity_bytes

    @storage_capacity_bytes.setter
    def storage_capacity_bytes(self, storage_capacity_bytes):

        self.__storage_capacity_bytes = storage_capacity_bytes

    @property
    def data_reduction_saved_bytes(self):
        """
        Storage savings in bytes as a result of all the techniques.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__data_reduction_saved_bytes

    @data_reduction_saved_bytes.setter
    def data_reduction_saved_bytes(self, data_reduction_saved_bytes):

        self.__data_reduction_saved_bytes = data_reduction_saved_bytes

    @property
    def data_reduction_overall_pre_reduction_bytes(self):
        """
        Usage in bytes before reduction of Deduplication, Compression, Erasure Coding, Cloning, and Thin provisioning.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__data_reduction_overall_pre_reduction_bytes

    @data_reduction_overall_pre_reduction_bytes.setter
    def data_reduction_overall_pre_reduction_bytes(self, data_reduction_overall_pre_reduction_bytes):

        self.__data_reduction_overall_pre_reduction_bytes = data_reduction_overall_pre_reduction_bytes

    @property
    def data_reduction_overall_post_reduction_bytes(self):
        """
        Usage in bytes after reduction of Deduplication, Compression, Erasure Coding, Cloning, and Thin provisioning.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__data_reduction_overall_post_reduction_bytes

    @data_reduction_overall_post_reduction_bytes.setter
    def data_reduction_overall_post_reduction_bytes(self, data_reduction_overall_post_reduction_bytes):

        self.__data_reduction_overall_post_reduction_bytes = data_reduction_overall_post_reduction_bytes

    @property
    def data_reduction_compression_saving_ratio_ppm(self):
        """
        Saving ratio in PPM as a result of the Compression technique.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__data_reduction_compression_saving_ratio_ppm

    @data_reduction_compression_saving_ratio_ppm.setter
    def data_reduction_compression_saving_ratio_ppm(self, data_reduction_compression_saving_ratio_ppm):

        self.__data_reduction_compression_saving_ratio_ppm = data_reduction_compression_saving_ratio_ppm

    @property
    def data_reduction_dedup_saving_ratio_ppm(self):
        """
        Saving ratio in PPM as a result of the Deduplication technique.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__data_reduction_dedup_saving_ratio_ppm

    @data_reduction_dedup_saving_ratio_ppm.setter
    def data_reduction_dedup_saving_ratio_ppm(self, data_reduction_dedup_saving_ratio_ppm):

        self.__data_reduction_dedup_saving_ratio_ppm = data_reduction_dedup_saving_ratio_ppm

    @property
    def data_reduction_erasure_coding_saving_ratio_ppm(self):
        """
        Saving ratio in PPM as a result of the Erasure Coding technique.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__data_reduction_erasure_coding_saving_ratio_ppm

    @data_reduction_erasure_coding_saving_ratio_ppm.setter
    def data_reduction_erasure_coding_saving_ratio_ppm(self, data_reduction_erasure_coding_saving_ratio_ppm):

        self.__data_reduction_erasure_coding_saving_ratio_ppm = data_reduction_erasure_coding_saving_ratio_ppm

    @property
    def data_reduction_thin_provision_saving_ratio_ppm(self):
        """
        Saving ratio in PPM as a result of the Thin Provisioning technique.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__data_reduction_thin_provision_saving_ratio_ppm

    @data_reduction_thin_provision_saving_ratio_ppm.setter
    def data_reduction_thin_provision_saving_ratio_ppm(self, data_reduction_thin_provision_saving_ratio_ppm):

        self.__data_reduction_thin_provision_saving_ratio_ppm = data_reduction_thin_provision_saving_ratio_ppm

    @property
    def data_reduction_clone_saving_ratio_ppm(self):
        """
        Saving ratio in PPM as a result of the Cloning technique.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__data_reduction_clone_saving_ratio_ppm

    @data_reduction_clone_saving_ratio_ppm.setter
    def data_reduction_clone_saving_ratio_ppm(self, data_reduction_clone_saving_ratio_ppm):

        self.__data_reduction_clone_saving_ratio_ppm = data_reduction_clone_saving_ratio_ppm

    @property
    def data_reduction_snapshot_saving_ratio_ppm(self):
        """
        Saving ratio in PPM as a result of Snapshot technique.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__data_reduction_snapshot_saving_ratio_ppm

    @data_reduction_snapshot_saving_ratio_ppm.setter
    def data_reduction_snapshot_saving_ratio_ppm(self, data_reduction_snapshot_saving_ratio_ppm):

        self.__data_reduction_snapshot_saving_ratio_ppm = data_reduction_snapshot_saving_ratio_ppm

    @property
    def data_reduction_zero_write_savings_bytes(self):
        """
        Total amount of savings in bytes as a result of zero writes.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__data_reduction_zero_write_savings_bytes

    @data_reduction_zero_write_savings_bytes.setter
    def data_reduction_zero_write_savings_bytes(self, data_reduction_zero_write_savings_bytes):

        self.__data_reduction_zero_write_savings_bytes = data_reduction_zero_write_savings_bytes

    @property
    def controller_read_io_ratio_ppm(self):
        """
        Ratio of read I/O to total I/O in PPM.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__controller_read_io_ratio_ppm

    @controller_read_io_ratio_ppm.setter
    def controller_read_io_ratio_ppm(self, controller_read_io_ratio_ppm):

        self.__controller_read_io_ratio_ppm = controller_read_io_ratio_ppm

    @property
    def controller_write_io_ratio_ppm(self):
        """
        Ratio of read I/O to total I/O in PPM.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__controller_write_io_ratio_ppm

    @controller_write_io_ratio_ppm.setter
    def controller_write_io_ratio_ppm(self, controller_write_io_ratio_ppm):

        self.__controller_write_io_ratio_ppm = controller_write_io_ratio_ppm

    @property
    def storage_replication_factor(self):
        """
        Replication factor of Container.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__storage_replication_factor

    @storage_replication_factor.setter
    def storage_replication_factor(self, storage_replication_factor):

        self.__storage_replication_factor = storage_replication_factor

    @property
    def storage_usage_bytes(self):
        """
        Used storage in bytes.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__storage_usage_bytes

    @storage_usage_bytes.setter
    def storage_usage_bytes(self, storage_usage_bytes):

        self.__storage_usage_bytes = storage_usage_bytes

    @property
    def storage_tier_das_sata_usage_bytes(self):
        """
        Total usage on HDD tier for the Container in bytes.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__storage_tier_das_sata_usage_bytes

    @storage_tier_das_sata_usage_bytes.setter
    def storage_tier_das_sata_usage_bytes(self, storage_tier_das_sata_usage_bytes):

        self.__storage_tier_das_sata_usage_bytes = storage_tier_das_sata_usage_bytes

    @property
    def storage_tier_ssd_usage_bytes(self):
        """
        Total usage on SDD tier for the Container in bytes

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__storage_tier_ssd_usage_bytes

    @storage_tier_ssd_usage_bytes.setter
    def storage_tier_ssd_usage_bytes(self, storage_tier_ssd_usage_bytes):

        self.__storage_tier_ssd_usage_bytes = storage_tier_ssd_usage_bytes

    @property
    def health(self):
        """
        Health of the container is represented by an integer value in the range 0-100. Higher value is indicative of better health.

        :type:
             list[ :class:`~ntnx_clustermgmt_py_client.models.common.v1.stats.TimeIntValuePair` ]
        """  # noqa: E501
        return self.__health

    @health.setter
    def health(self, health):

        self.__health = health

    @property
    def container_ext_id(self):
        """
        extId of the Storage Container.

        :type:

                :class:`~str`
        """  # noqa: E501
        return self.__container_ext_id

    @container_ext_id.setter
    def container_ext_id(self, container_ext_id):
        if container_ext_id is not None and not re.search('^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$', container_ext_id):  # noqa: E501
            raise ValueError(r"Invalid value for `container_ext_id`, must be a follow pattern or equal to `/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/`")  # noqa: E501

        self.__container_ext_id = container_ext_id

    def _to_dict(self, sanitize):
        """Returns the model properties as a dict. Omits None properties based on the provided "sanitize" parameter.

        :param sanitize: A flag to omit None properties if set to True
        :type sanitize: bool
        """

        result = {}
        for attr, attr_type in six.iteritems(self.swagger_types):
        
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x._to_dict(sanitize) if hasattr(x, "_to_dict") else x,
                    value
                ))
            elif hasattr(value, "_to_dict"):
                result[attr] = value._to_dict(sanitize)
            elif isinstance(value, Path):
                result[attr] = str(value)
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1]._to_dict(sanitize)) if hasattr(item[1], "_to_dict")
                    else (
                        (item[0], str(item[1])) if item[0] == 'path' and '$objectType' in value and value['$objectType'] == 'pathlib.Path'
                        else item
                    ),
                    six.iteritems(value)
                ))
            else:
                if sanitize:
                    if value is not None:
                        result[attr] = value
                else:
                    result[attr] = value
        if issubclass(StorageContainerStats, dict):
            for key, value in six.iteritems(self):
                result[key] = value

        return result

    def to_dict(self):
        """Returns the model properties as a dictionary"""
        return self._to_dict(False)

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self._to_dict(True))

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, StorageContainerStats):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

