# coding: utf-8

"""
    FastAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.24
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from perian.models.get_instance_type_request import GetInstanceTypeRequest

class TestGetInstanceTypeRequest(unittest.TestCase):
    """GetInstanceTypeRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetInstanceTypeRequest:
        """Test GetInstanceTypeRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetInstanceTypeRequest`
        """
        model = GetInstanceTypeRequest()
        if include_optional:
            return GetInstanceTypeRequest(
                instance_type_query = perian.models.instance_typer_query_view.InstanceTyperQueryView(
                    operator = null, 
                    options = null, 
                    id = null, 
                    region = null, 
                    zone = null, 
                    name = null, 
                    cpu = null, 
                    accelerator = null, 
                    ram = null, 
                    storage = null, 
                    network = null, 
                    price = null, 
                    availability = null, 
                    type = null, )
            )
        else:
            return GetInstanceTypeRequest(
        )
        """

    def testGetInstanceTypeRequest(self):
        """Test GetInstanceTypeRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
