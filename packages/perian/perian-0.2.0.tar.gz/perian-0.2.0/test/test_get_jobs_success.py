# coding: utf-8

"""
    FastAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.24
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from perian.models.get_jobs_success import GetJobsSuccess

class TestGetJobsSuccess(unittest.TestCase):
    """GetJobsSuccess unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetJobsSuccess:
        """Test GetJobsSuccess
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetJobsSuccess`
        """
        model = GetJobsSuccess()
        if include_optional:
            return GetJobsSuccess(
                status = 'Success',
                message = 'Operation was successful',
                detail = '',
                status_code = 56,
                limit = 56,
                no = 56,
                jobs = [
                    perian.models.job_view.JobView(
                        id = '', 
                        status = null, 
                        started_at = null, 
                        done_at = null, 
                        logs = null, 
                        errors = null, 
                        price = null, 
                        docker_metadata = null, 
                        requirement_metadata = null, 
                        runtime_metadata = null, )
                    ],
                pagination = perian.models.pagination_metadata.PaginationMetadata(
                    total_items = 56, 
                    items_per_page = 56, 
                    current_page = 56, 
                    total_pages = 56, 
                    next_page = null, 
                    previous_page = null, )
            )
        else:
            return GetJobsSuccess(
        )
        """

    def testGetJobsSuccess(self):
        """Test GetJobsSuccess"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
