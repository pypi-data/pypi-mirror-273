"""
    Copyright 2023 Guillaume Everarts de Velp

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Contact: edvgui@gmail.com
"""
import podman
import podman::services::systemd_container
import podman::services::systemd_pod
import podman::services::systemd_service
import files


typedef service_state_t as string matching self in ["configured", "stopped", "running", "removed"]


entity SystemdService:
    """
    A systemd service is an entity that will be refined into a systemd config file.
    Each container or pod that is part of the service will also have its own systemd
    config file.

    This entity offers some kind of lifecycle which has following states:
        - configured: All configuration files should be present, and we don't
            manage whether the service should be running or not.
        - stopped: That means that all configuration files should be present on
            the host, but the service should not be running.
        - running: Same as stopped, except that the service should be running.
        - removed: All configuration files should be removed.

    :attr state: The desired execution state for this service.
    :attr enabled: Whether the systemd service should be enabled.

    :attr service_name: Attribute used internally to save the name of the top-level
        service to manage.
    """
    string? name = null
    string? description = null
    service_state_t state
    bool enabled = true

    string service_name
end
SystemdService._container_like [1] -- podman::ContainerLike._systemd_service [0:1]
SystemdService.resources [0:] -- std::Resource
SystemdService.unit [1] -- files::SystemdUnitFile


entity SystemdPod extends SystemdService:
    """
    Systemd service that is composed of a pod, possiblty with multiple containers
    attached to it.
    """
end
SystemdPod.pod [1] -- podman::Pod


entity SystemdContainer extends SystemdService:
    """
    Systemd service that is composed of a single container.
    """
end
SystemdContainer.container [1] -- podman::Container
