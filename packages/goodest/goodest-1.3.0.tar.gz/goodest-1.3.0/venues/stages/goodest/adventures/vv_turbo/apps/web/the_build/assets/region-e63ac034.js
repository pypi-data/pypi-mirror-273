import{s as nt,c as et}from"./transform-21ef9c51.js";import{X as rt,_ as X,r as z,o as Y,f as Z,w as q,a as C,n as ot,g as it}from"./index-a0b775e5.js";function at(t){return nt(et(t).call(document.documentElement))}function st(t){return Math.abs(t=Math.round(t))>=1e21?t.toLocaleString("en").replace(/,/g,""):t.toString(10)}function N(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]}function ct(t){return t=N(Math.abs(t)),t?t[1]:NaN}function ht(t,n){return function(e,r){for(var o=e.length,i=[],c=0,h=t[0],l=0;o>0&&h>0&&(l+h+1>r&&(h=Math.max(1,r-l)),i.push(e.substring(o-=h,o+h)),!((l+=h+1)>r));)h=t[c=(c+1)%t.length];return i.reverse().join(n)}}function ft(t){return function(n){return n.replace(/[0-9]/g,function(e){return t[+e]})}}var lt=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function B(t){if(!(n=lt.exec(t)))throw new Error("invalid format: "+t);var n;return new F({fill:n[1],align:n[2],sign:n[3],symbol:n[4],zero:n[5],width:n[6],comma:n[7],precision:n[8]&&n[8].slice(1),trim:n[9],type:n[10]})}B.prototype=F.prototype;function F(t){this.fill=t.fill===void 0?" ":t.fill+"",this.align=t.align===void 0?">":t.align+"",this.sign=t.sign===void 0?"-":t.sign+"",this.symbol=t.symbol===void 0?"":t.symbol+"",this.zero=!!t.zero,this.width=t.width===void 0?void 0:+t.width,this.comma=!!t.comma,this.precision=t.precision===void 0?void 0:+t.precision,this.trim=!!t.trim,this.type=t.type===void 0?"":t.type+""}F.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(this.width===void 0?"":Math.max(1,this.width|0))+(this.comma?",":"")+(this.precision===void 0?"":"."+Math.max(0,this.precision|0))+(this.trim?"~":"")+this.type};function dt(t){t:for(var n=t.length,e=1,r=-1,o;e<n;++e)switch(t[e]){case".":r=o=e;break;case"0":r===0&&(r=e),o=e;break;default:if(!+t[e])break t;r>0&&(r=0);break}return r>0?t.slice(0,r)+t.slice(o+1):t}var J;function ut(t,n){var e=N(t,n);if(!e)return t+"";var r=e[0],o=e[1],i=o-(J=Math.max(-8,Math.min(8,Math.floor(o/3)))*3)+1,c=r.length;return i===c?r:i>c?r+new Array(i-c+1).join("0"):i>0?r.slice(0,i)+"."+r.slice(i):"0."+new Array(1-i).join("0")+N(t,Math.max(0,n+i-1))[0]}function L(t,n){var e=N(t,n);if(!e)return t+"";var r=e[0],o=e[1];return o<0?"0."+new Array(-o).join("0")+r:r.length>o+1?r.slice(0,o+1)+"."+r.slice(o+1):r+new Array(o-r.length+2).join("0")}const O={"%":(t,n)=>(t*100).toFixed(n),b:t=>Math.round(t).toString(2),c:t=>t+"",d:st,e:(t,n)=>t.toExponential(n),f:(t,n)=>t.toFixed(n),g:(t,n)=>t.toPrecision(n),o:t=>Math.round(t).toString(8),p:(t,n)=>L(t*100,n),r:L,s:ut,X:t=>Math.round(t).toString(16).toUpperCase(),x:t=>Math.round(t).toString(16)};function G(t){return t}var H=Array.prototype.map,V=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function pt(t){var n=t.grouping===void 0||t.thousands===void 0?G:ht(H.call(t.grouping,Number),t.thousands+""),e=t.currency===void 0?"":t.currency[0]+"",r=t.currency===void 0?"":t.currency[1]+"",o=t.decimal===void 0?".":t.decimal+"",i=t.numerals===void 0?G:ft(H.call(t.numerals,String)),c=t.percent===void 0?"%":t.percent+"",h=t.minus===void 0?"−":t.minus+"",l=t.nan===void 0?"NaN":t.nan+"";function y(f){f=B(f);var a=f.fill,d=f.align,u=f.sign,_=f.symbol,g=f.zero,S=f.width,D=f.comma,w=f.precision,j=f.trim,p=f.type;p==="n"?(D=!0,p="g"):O[p]||(w===void 0&&(w=12),j=!0,p="g"),(g||a==="0"&&d==="=")&&(g=!0,a="0",d="=");var Q=_==="$"?e:_==="#"&&/[boxX]/.test(p)?"0"+p.toLowerCase():"",W=_==="$"?r:/[%p]/.test(p)?c:"",P=O[p],tt=/[defgprs%]/.test(p);w=w===void 0?6:/[gprs]/.test(p)?Math.max(1,Math.min(21,w)):Math.max(0,Math.min(20,w));function U(s){var A=Q,m=W,v,I,M;if(p==="c")m=P(s)+m,s="";else{s=+s;var $=s<0||1/s<0;if(s=isNaN(s)?l:P(Math.abs(s),w),j&&(s=dt(s)),$&&+s==0&&u!=="+"&&($=!1),A=($?u==="("?u:h:u==="-"||u==="("?"":u)+A,m=(p==="s"?V[8+J/3]:"")+m+($&&u==="("?")":""),tt){for(v=-1,I=s.length;++v<I;)if(M=s.charCodeAt(v),48>M||M>57){m=(M===46?o+s.slice(v+1):s.slice(v))+m,s=s.slice(0,v);break}}}D&&!g&&(s=n(s,1/0));var k=A.length+s.length+m.length,x=k<S?new Array(S-k+1).join(a):"";switch(D&&g&&(s=n(x+s,x.length?S-m.length:1/0),x=""),d){case"<":s=A+s+m+x;break;case"=":s=A+x+s+m;break;case"^":s=x.slice(0,k=x.length>>1)+A+s+m+x.slice(k);break;default:s=x+A+s+m;break}return i(s)}return U.toString=function(){return f+""},U}function b(f,a){var d=y((f=B(f),f.type="f",f)),u=Math.max(-8,Math.min(8,Math.floor(ct(a)/3)))*3,_=Math.pow(10,-u),g=V[8+u/3];return function(S){return d(_*S)+g}}return{format:y,formatPrefix:b}}var T,K;mt({thousands:",",grouping:[3],currency:["$",""]});function mt(t){return T=pt(t),K=T.format,T.formatPrefix,T}function gt(t){var n=0,e=t.children,r=e&&e.length;if(!r)n=1;else for(;--r>=0;)n+=e[r].value;t.value=n}function yt(){return this.eachAfter(gt)}function xt(t,n){let e=-1;for(const r of this)t.call(n,r,++e,this);return this}function _t(t,n){for(var e=this,r=[e],o,i,c=-1;e=r.pop();)if(t.call(n,e,++c,this),o=e.children)for(i=o.length-1;i>=0;--i)r.push(o[i]);return this}function wt(t,n){for(var e=this,r=[e],o=[],i,c,h,l=-1;e=r.pop();)if(o.push(e),i=e.children)for(c=0,h=i.length;c<h;++c)r.push(i[c]);for(;e=o.pop();)t.call(n,e,++l,this);return this}function At(t,n){let e=-1;for(const r of this)if(t.call(n,r,++e,this))return r}function vt(t){return this.eachAfter(function(n){for(var e=+t(n.data)||0,r=n.children,o=r&&r.length;--o>=0;)e+=r[o].value;n.value=e})}function bt(t){return this.eachBefore(function(n){n.children&&n.children.sort(t)})}function St(t){for(var n=this,e=Mt(n,t),r=[n];n!==e;)n=n.parent,r.push(n);for(var o=r.length;t!==e;)r.splice(o,0,t),t=t.parent;return r}function Mt(t,n){if(t===n)return t;var e=t.ancestors(),r=n.ancestors(),o=null;for(t=e.pop(),n=r.pop();t===n;)o=t,t=e.pop(),n=r.pop();return o}function $t(){for(var t=this,n=[t];t=t.parent;)n.push(t);return n}function kt(){return Array.from(this)}function Tt(){var t=[];return this.eachBefore(function(n){n.children||t.push(n)}),t}function Nt(){var t=this,n=[];return t.each(function(e){e!==t&&n.push({source:e.parent,target:e})}),n}function*Et(){var t=this,n,e=[t],r,o,i;do for(n=e.reverse(),e=[];t=n.pop();)if(yield t,r=t.children)for(o=0,i=r.length;o<i;++o)e.push(r[o]);while(e.length)}function R(t,n){t instanceof Map?(t=[void 0,t],n===void 0&&(n=Bt)):n===void 0&&(n=zt);for(var e=new E(t),r,o=[e],i,c,h,l;r=o.pop();)if((c=n(r.data))&&(l=(c=Array.from(c)).length))for(r.children=c,h=l-1;h>=0;--h)o.push(i=c[h]=new E(c[h])),i.parent=r,i.depth=r.depth+1;return e.eachBefore(Ft)}function Dt(){return R(this).eachBefore(Ct)}function zt(t){return t.children}function Bt(t){return Array.isArray(t)?t[1]:null}function Ct(t){t.data.value!==void 0&&(t.value=t.data.value),t.data=t.data.data}function Ft(t){var n=0;do t.height=n;while((t=t.parent)&&t.height<++n)}function E(t){this.data=t,this.depth=this.height=0,this.parent=null}E.prototype=R.prototype={constructor:E,count:yt,each:xt,eachAfter:wt,eachBefore:_t,find:At,sum:vt,sort:bt,path:St,ancestors:$t,descendants:kt,leaves:Tt,links:Nt,copy:Dt,[Symbol.iterator]:Et};const Rt={name:"",children:[{name:"CARBOHYDRATES",children:[{name:"DIETARY FIBER",children:[]},{name:"SUGARS",children:[{name:"ADDED SUGARS",value:3534}]}]},{name:"TOTAL FATS",children:[{name:"SATURATED FAT",value:17010},{name:"TRANS FAT",value:0}]}]},jt={data(){return{svg_crate:rt(null)}},methods:{BUILD_CHART(){const t=K(","),n=30,e=R(Rt).eachBefore((a=>d=>d.index=a++)(0)),r=e.descendants(),o=1e3,i=(r.length+1)*n,c="24px",h=[{label:"AMOUNT",value:a=>(console.log("AMOUNT:",a),a.value),format:t,x:800},{label:"PER CENT",value:a=>a.children?0:1,format:(a,d)=>d.children?t(a):"-",x:1e3}],l=at("svg").attr("width",o).attr("height",i).attr("style","max-width: 100%; height: auto; overflow: visible;").style("padding-top","100px").style("font","10px sans-serif").attr("viewBox",[0,0,o,i]);l.append("g").attr("fill","none").attr("stroke","black").selectAll().data(e.links()).join("path").attr("d",a=>`
				M${a.source.depth*n},${a.source.index*n}
				V${a.target.index*n}
				h${n}
			`);const y=l.append("g").selectAll().data(r).join("g").attr("transform",a=>`translate(0,${a.index*n})`);y.append("circle").attr("cx",a=>a.depth*n).attr("r",5).attr("fill",a=>(a.children,"white")),y.append("text").attr("dy",".4em").attr("x",a=>a.depth*n+16).text(a=>a.data.name).style("font-size",c).style("fill","purple"),y.append("title").text(a=>a.ancestors().reverse().map(d=>d.data.name).join("/")),l.append("text").attr("dy","0.32em").attr("y",-n).attr("x",0).attr("text-anchor","start").attr("font-weight","bold").text("NUTRIENTS").style("font-size",c).style("fill","purple");for(const{label:a,value:d,format:u,x:_}of h)l.append("text").attr("dy","0.32em").attr("y",-n).attr("x",_).attr("text-anchor","end").attr("font-weight","bold").text(a).style("font-size",c).style("fill","purple"),y.append("text").attr("dy","0.32em").attr("x",_).attr("text-anchor","end").attr("fill",g=>(g.children,"#FFF")).data(e.copy().sum(d).descendants()).text(g=>u(g.value,g)).style("font-size",c).style("fill","purple");var b=l.node(),f=this.svg_crate;this.$refs.svg_crate.append(b),console.log(this.$refs.svg_crate),console.log({SVG_NODE:b,svg_crate:f})}},mounted(){this.BUILD_CHART()}},Pt=jt,Ut=C("div",null,"composition waterfall",-1),It={ref:"svg_crate"};function Lt(t,n,e,r,o,i){const c=z("lounge");return Y(),Z(c,null,{default:q(({palette:h,style:l,physics:y})=>[Ut,C("div",It,null,512)]),_:1})}const Ot=X(Pt,[["render",Lt]]),Gt={components:{nutrients_DAC:Ot}},Ht=Gt;function Vt(t,n,e,r,o,i){const c=z("nutrients_DAC"),h=z("lounge");return Y(),Z(h,null,{default:q(({palette:l,terrain:y,$attrs:b})=>[C("h1",{style:ot({color:l[2]})},"nutrient directional acyclic chart",4),it(c)]),_:1})}const Zt=X(Ht,[["render",Vt]]);export{Zt as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
