[build-system]
requires = ["hatchling", "hatch-vcs", "nipreps-versions"]
build-backend = "hatchling.build"


[project]
name = "eddymotion"
description = "Pure python eddy-current and head-motion correction for dMRI, an extension of QSIprep's SHOREline algorithm (Cieslak, 2020) to multiple diffusion models."
readme = "README.rst"
authors = [{name = "The NiPreps Developers", email = "nipreps@gmail.com"}]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
license = "Apache-2.0"
requires-python = ">=3.10"
dependencies = [
    "dipy>=1.3.0",
    "joblib",
    "nipype>= 1.5.1, < 2.0",
    "nitransforms>=21.0.0",
    "nireports",
    "numpy>=1.17.3",
    "nest-asyncio>=1.5.1",
    "scikit-image>=0.14.2",
    "scipy>=1.8.0",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://www.nipreps.org/eddymotion"
Home = "https://github.com/nipreps/eddymotion"
NiPreps = "https://www.nipreps.org/"

[project.optional-dependencies]
doc = [
    "attrs >= 20.1.0",
    "furo >= 2024.01.29",
    "matplotlib >= 2.2.0",
    "nbsphinx",
    "packaging",
    "pydot >= 1.2.3",
    "pydotplus",
    "sphinx >= 4.5",
    "sphinx-argparse",
    "sphinx_rtd_theme",
    "sphinxcontrib-apidoc ~= 0.3.0",
    "sphinxcontrib-napoleon",
    "sphinxcontrib-versioning",
    "sphinx-argparse",
]

dev = [
    "ruff",
    "pre-commit",
    "pre-commit-hooks",
]

plotting = ["nilearn"]

resmon = ["psutil >=5.4"]

popylar = ["popylar >= 0.2"]

test = [
    "coverage",
    "pytest >= 4.4",
    "pytest-cov",
    "pytest-env",
    "pytest-xdist >= 1.28"
]

# Aliases
docs = ["eddymotion[doc]"]
tests = ["eddymotion[test]"]
all = ["eddymotion[doc,test,dev,plotting,resmon,popylar]"]

[project.scripts]
eddymotion = "eddymotion.cli.run:main"

#
# Hatch configurations
#

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
exclude = [".git_archival.txt"]  # No longer needed in sdist

[tool.hatch.build.targets.wheel]
packages = ["src/eddymotion"]
# exclude = [
#     "eddymotion/tests/data",  # Large test data directory
# ]


[tool.hatch.version]
validate-bump = true
source = "vcs"

[tool.hatch.version.raw-options]
version_scheme = "nipreps-calver"
local_scheme = "no-local-version"


[tool.hatch.build.hooks.vcs]
version-file = "src/eddymotion/_version.py"

#
# Developer tool configurations
#

[tool.ruff]
line-length = 99
target-version = "py310"
exclude = [
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".tox",
  ".venv",
  "venv",
  "_build",
  "build",
  "dist",
]

[tool.ruff.lint]
select = [
  "F",
  "E",
  "C",
  "W",
  "B",
  "I",
]
ignore = [
  "E203"
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"

[tool.ruff.lint.extend-per-file-ignores]
"*/__init__.py" = ["F401"]
"docs/conf.py" = ["E265"]
"/^\\s*\\.\\. _.*?: http/" = ["E501"]

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint.isort]
known-first-party=["eddymotion"]

[tool.pytest.ini_options]
pythonpath = "src/ test/"
norecursedirs = [".*", "_*"]
addopts = "-v --doctest-modules"
doctest_optionflags = "ALLOW_UNICODE NORMALIZE_WHITESPACE"
env = "PYTHONHASHSEED=0"
filterwarnings = ["ignore::DeprecationWarning"]


[tool.coverage.run]
branch = true
concurrency = 'multiprocessing'
omit = [
    '*/tests/*',
    '*/__init__.py',
    '*/conftest.py',
    'src/eddymotion/_version.py'
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    'raise NotImplementedError',
    'warnings\.warn',
]

[tool.codespell]
# nd - import scipy.ndimage as nd
# mapp, reson -- Mapp. and Reson. abbreviations in citation
ignore-words-list = 'nd,mapp,reson'
skip = """
./.git,*.pdf,*.svg,*.min.js,*.ipynb,ORIGINAL_LICENSE,\
./docs/source/_static/example_anatreport.html"""
