import{N as w,t as b,k as A,O as v,_ as k,R as h,aA as y,L as l,T as s,ak as Y,ap as P,bb as q,P as T,Q as m,ai as g,M as H,cv as Q,aG as z,bg as J,aK as r,ad as d,ah as V,aD as x,aB as X,aL as B,aM as j,cw as Z,cx as ee,bs as te,aU as oe,c7 as le,ae as re}from"./admin-drawer-panel-Dp8KD9D7.js";import{A as se,a as ae,b as ie,c as ne,R as de}from"./relation-chips-BiVsYCd9.js";import{a as D,u as me}from"./main-CuzJev9T.js";import{V as pe}from"./VCombobox-CtLUGYtD.js";import{V as C}from"./VCheckbox-CN6Sn_k7.js";import{V as ue}from"./VTextField-dMTizQEN.js";import{D as $}from"./datetime-column-DKaH5S3z.js";import{V as E,a as R,b as O,c as U}from"./VExpansionPanels-DJQYXCn2.js";import{V as ce}from"./VTable-CMi6sDtP.js";import{C as he}from"./confirm-dialog-DmXGDg4z.js";import{V as S}from"./VCheckboxBtn-CN1RPZPQ.js";import"./VDialog-DC3KGsMT.js";import"./VSelect-B6s-x36h.js";import"./VSelectionControl-zPp4DXWq.js";import"./VSlideGroup-pK9Xompk.js";import"./filter-DUVATQW3.js";const fe={name:"AdminServerFolderPicker",emits:["change","menu"],data(){return{path:"",originalPath:"",showHidden:!1,menuOpen:!1}},computed:{...w(b,{folders:e=>e.folderPicker.folders,rootFolder:e=>e.folderPicker.rootFolder}),...w(A,{formErrors:e=>e.form.errors}),appendOuterIcon(){return this.showHidden?this.mdiFolderHidden:this.mdiFolderOutline},showHiddenTooltipPrefix(){return this.showHidden?"Hide":"Show"}},watch:{menuOpen(e){e&&this.$emit("menu",e)}},created(){this.loadFolders().then(()=>(this.path=this.rootFolder,this.originalPath=this.rootFolder,!0)).catch(console.warn)},methods:{...v(b,["clearFolders","loadFolders"]),...v(A,["clearErrors"]),change(e){const t=e?e.startsWith("/")||e.startsWith("\\")?e:[this.rootFolder,e].join("/"):this.rootFolder,p=this.menuOpen;this.clearErrors(),this.loadFolders(t,this.showHidden).then(()=>{this.menuOpen=p;let f="";return this.formErrors.length===0&&(this.path=f=this.rootFolder),this.$emit("change",f)}).catch(console.warn)},onBlur(){this.menuOpen=!1,this.change(this.path)},onClear(){this.clearFolders(this.orignalPath).then(()=>this.change(this.orginalPath)).catch(console.error)},onKeyDownEnter(){this.change(this.path)},onItemClick(e){this.change(e)}}},be={id:"folderPicker"};function ye(e,t,p,f,o,u){return h(),y("div",be,[l(pe,P({modelValue:o.path,"onUpdate:modelValue":t[0]||(t[0]=i=>o.path=i),menu:o.menuOpen,"onUpdate:menu":t[1]||(t[1]=i=>o.menuOpen=i)},e.$attrs,{"aria-label":"Library folder",clearable:"","error-messages":e.formErrors,"full-width":"","hide-details":"auto",items:e.folders,"menu-props":{maxHeight:"370px"},"validate-on":"blur",variant:"filled",onBlur:u.onBlur,"onClick:clear":u.onClear,onKeydown:q(u.onKeyDownEnter,["enter"])}),{item:s(({item:i,props:c})=>[l(Y,P(c,{title:i.title,value:i.value,onClick:F=>u.onItemClick(i.value)}),null,16,["title","value","onClick"])]),_:1},16,["modelValue","menu","error-messages","items","onBlur","onClick:clear","onKeydown"]),l(C,{modelValue:o.showHidden,"onUpdate:modelValue":t[2]||(t[2]=i=>o.showHidden=i),density:"compact",class:"showHidden","hide-details":"auto",label:"Show Hidden Folders"},null,8,["modelValue"])])}const _e=k(fe,[["render",ye],["__scopeId","data-v-49f10642"]]),ge={name:"TimeTextField",data(){return{FORMAT:"DDD HH:mm:SS",timeRules:[e=>/^(\d{1,3} )?([01]\d|2[0-3]):([0-5]\d):([0-5]\d)$/.test(e)||`Invalid time format ${this.FORMAT}`]}}};function we(e,t,p,f,o,u){return h(),T(ue,P({ref:"timeField",density:"compact",filled:"",hint:o.FORMAT,round:"",rules:o.timeRules},e.$attrs),null,16,["hint","rules"])}const ke=k(ge,[["render",we]]),N=["events","poll","pollEvery","groups"];Object.freeze(N);const I={path:"",events:!0,poll:!0,pollEvery:"01:00:00",groups:[]};Object.freeze(I);const L=(e,t)=>(e=e.replaceAll("\\","/"),t=t.replaceAll("\\","/"),e.endsWith("/")||(e+="/"),t.endsWith("/")||(t+="/"),t.startsWith(e)),Fe={name:"AdminLibraryCreateUpdateInputs",components:{AdminRelationPicker:se,AdminServerFolderPicker:_e,TimeTextField:ke},props:{oldRow:{type:[Object,Boolean],default:!1}},emits:["change"],data(){return{rules:{path:[e=>!!e||"Path is required",e=>{if(!e)return!1;for(const t of this.paths){if(L(t,e))return"Path is a child of an existing library";if(L(e,t))return"Path is a parent of an existing library"}return!0}]},row:D.cloneDeep(this.oldRow||I)}},computed:{...w(b,{groups:e=>e.groups,libraries:e=>e.libraries}),paths(){return this.nameSet(this.libraries,"path",this.oldRow,!1)}},watch:{row:{handler(e){this.$emit("change",e)},deep:!0},oldRow:{handler(e){this.row=D.cloneDeep(e)},deep:!0}},methods:{...v(b,["nameSet"])},UPDATE_KEYS:N,EMPTY_ROW:I},ve={key:1};function Pe(e,t,p,f,o,u){const i=m("AdminServerFolderPicker"),c=m("TimeTextField"),F=m("AdminRelationPicker");return h(),y(H,null,[p.oldRow?(h(),y("div",ve,g(p.oldRow.path),1)):(h(),T(i,{key:0,rules:o.rules.path,autofocus:"",label:"Library Folder",onChange:t[0]||(t[0]=n=>o.row.path=n)},null,8,["rules"])),l(C,{modelValue:o.row.events,"onUpdate:modelValue":t[1]||(t[1]=n=>o.row.events=n),"hide-details":"auto",hint:"Update Codex instantly when the filesystem changes",label:"Watch Filesystem Events","persistent-hint":!0},null,8,["modelValue"]),l(C,{modelValue:o.row.poll,"onUpdate:modelValue":t[2]||(t[2]=n=>o.row.poll=n),label:"Poll Filesystem Periodically","hide-details":"auto",hint:"Periodically poll the library for changes","persistent-hint":!0},null,8,["modelValue"]),l(c,{modelValue:o.row.pollEvery,"onUpdate:modelValue":t[3]||(t[3]=n=>o.row.pollEvery=n),label:"Poll Every",disabled:!o.row.poll},null,8,["modelValue","disabled"]),l(F,{modelValue:o.row.groups,"onUpdate:modelValue":t[4]||(t[4]=n=>o.row.groups=n),label:"Groups",objs:e.groups,"group-type":"","title-key":"name"},null,8,["modelValue","objs"])],64)}const Ce=k(Fe,[["render",Pe]]),Ie={name:"AdminFailedImportsPanel",components:{DateTimeColumn:$},data(){return{mdiBookAlert:Q,mdiOpenInNew:z}},computed:{...w(b,["failedImports"]),...J(b,["unseenFailedImports"])},created(){this.unseenFailedImports=!0}},_=e=>(B("data-v-a5fc117c"),e=e(),j(),e),Te={key:0,id:"failedImports"},Ae=_(()=>r("thead",null,[r("tr",null,[r("th",null,"Path"),r("th",null,"Created")])],-1)),Ve={class:"dateCol"},xe=_(()=>r("h4",null,"Failed Imports Help",-1)),De=_(()=>r("p",null," These are Comic archives that have failed to import. This list is updated every time the library updates. You should probably review these files and fix or remove them. ",-1)),Ee=_(()=>r("h4",null,"Fixing comics",-1)),Re=_(()=>r("p",null,[d(" Try using the zip fixer to fix comics: "),r("code",{class:"cli"},[d(" cp problem-comic.cbz /somewhere/safe/problem-comic.cbz.backup"),r("br"),d(" zip -F problem-comic.cbz --out fixed.zip"),r("br"),d(" mv fixed.zip problem-comic.cbz ")]),d(" You may also try "),r("code",null,"zip -FF"),d(" to fix comics which uses a different (not necissarily better) algorithm. If you fix some imports, and Codex does not immediately detect the change, poll the library which contains the fixed comics. ")],-1)),Oe=_(()=>r("h4",null,"Reporting Issues",-1)),Ue={href:"https://github.com/ajslater/codex/issues/",target:"_blank"},Se=_(()=>r("code",null,"config/logs/codex.log",-1));function Le(e,t,p,f,o,u){const i=m("DateTimeColumn");return e.failedImports&&e.failedImports.length>0?(h(),y("div",Te,[l(U,null,{default:s(()=>[l(E,{id:"failedImportsPanel",onClick:t[0]||(t[0]=c=>e.unseenFailedImports=!1)},{default:s(()=>[l(R,null,{default:s(()=>[r("h4",null,"Failed Imports: "+g(e.failedImports.length),1),e.unseenFailedImports?(h(),T(V,{key:0,id:"failedImportsIcon",title:"New Failed Imports"},{default:s(()=>[d(g(o.mdiBookAlert),1)]),_:1})):x("",!0)]),_:1}),l(O,null,{default:s(()=>[l(ce,{class:"highlight-table"},{default:s(()=>[Ae,r("tbody",null,[(h(!0),y(H,null,X(e.failedImports,c=>(h(),y("tr",{key:`fi:${c.path}`},[r("td",null,g(c.path),1),r("td",Ve,[l(i,{dttm:c.createdAt},null,8,["dttm"])])]))),128))])]),_:1}),l(U,null,{default:s(()=>[l(E,{id:"failedImportsHelp"},{default:s(()=>[l(R,null,{default:s(()=>[xe]),_:1}),l(O,null,{default:s(()=>[De,Ee,Re,Oe,r("p",null,[d(" If the comic looks good to you, but still shows up as a failed import, it might be Codex's fault for not importing it correctly. Please file an "),r("a",Ue,[d("Issue Report"),l(V,{size:"small"},{default:s(()=>[d(g(o.mdiOpenInNew),1)]),_:1})]),d(" and include the stack trace from the logs at "),Se,d(" if you can. ")])]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})])):x("",!0)}const He=k(Ie,[["render",Le],["__scopeId","data-v-a5fc117c"]]),ze={name:"AdminLibrariesTab",components:{AdminTable:ae,AdminDeleteRowDialog:ie,AdminFailedImportsPanel:He,AdminCreateUpdateDialog:ne,RelationChips:de,ConfirmDialog:he,DateTimeColumn:$},data(){return{lastUpdate:{pk:0,field:void 0},mdiDatabaseClockOutline:Z,mdiDatabaseSyncOutline:ee,mdiOpenInNew:z,AdminLibraryCreateUpdateInputs:te(Ce),headers:[{title:"Path",key:"path",align:"start"},{title:"Watch File Events",key:"events"},{title:"Poll Files Periodically",key:"poll"},{title:"Poll Every",key:"pollEvery"},{title:"Last Poll",key:"lastPoll"},{title:"Groups",key:"groups"},{title:"Actions",key:"actions",sortable:!1}]}},computed:{...w(b,{groups:e=>e.groups,libraries:e=>e.libraries,formErrors:e=>e.form.errors}),...w(me,{twentyFourHourTime:e=>e.settings.twentyFourHourTime})},mounted(){this.loadTables(["Group","Library","FailedImport"])},methods:{...v(b,["updateRow","clearErrors","librarianTask","loadTables"]),formatDateTime:e=>e?oe(e,(void 0).twentyFourHourTime):"",changeCol(e,t,p){this.lastUpdate.pk=e,this.lastUpdate.field=t;const f={[t]:p};this.updateRow("Library",e,f)},getFormErrors(e,t){if(e===this.lastUpdate.pk&&t===this.lastUpdate.field)return this.formErrors},poll(e){this.librarianTask("poll",`Poll Library ${e}`,e)},forcePoll(e){this.librarianTask("poll_force",`Force Poll Library ${e}`,e)}}},Be=e=>(B("data-v-ed190b94"),e=e(),j(),e),je={class:"tabHeader"},$e=Be(()=>r("td",{class:"adminNoData",colspan:"100%"}," Add a Library to start using Codex ",-1));function Ne(e,t,p,f,o,u){const i=m("AdminCreateUpdateDialog"),c=m("DateTimeColumn"),F=m("RelationChips"),n=m("ConfirmDialog"),W=m("AdminDeleteRowDialog"),K=m("AdminTable"),M=m("AdminFailedImportsPanel");return h(),y("div",null,[r("header",je,[l(i,{table:"Library",inputs:o.AdminLibraryCreateUpdateInputs},null,8,["inputs"])]),l(K,{headers:o.headers,items:e.libraries,"sort-by":[{key:"path",order:"asc"}]},{"no-data":s(()=>[$e]),"item.events":s(({item:a})=>[l(S,{"model-value":a.events,disabled:""},null,8,["model-value"])]),"item.poll":s(({item:a})=>[l(S,{"model-value":a.poll,disabled:""},null,8,["model-value"])]),"item.pollEvery":s(({item:a})=>[r("span",{class:re({disabled:!a.poll})},g(a.pollEvery),3)]),"item.lastPoll":s(({item:a})=>[l(c,{dttm:a.lastPoll},null,8,["dttm"])]),"item.groups":s(({item:a})=>[l(F,{pks:a.groups,objs:e.groups,"group-type":"","title-key":"name"},null,8,["pks","objs"])]),"item.actions":s(({item:a})=>[l(n,{icon:o.mdiDatabaseClockOutline,"title-text":"Poll for updated comics","object-name":a.path,"confirm-text":"Poll Library",size:"small",density:"compact",onConfirm:G=>u.poll(a.pk)},null,8,["icon","object-name","onConfirm"]),l(n,{icon:o.mdiDatabaseSyncOutline,"title-text":"Force update every comic","object-name":a.path,"confirm-text":"Force Update",size:"small",density:"compact",onConfirm:G=>u.forcePoll(a.pk)},null,8,["icon","object-name","onConfirm"]),l(i,{table:"Library","old-row":a,inputs:o.AdminLibraryCreateUpdateInputs,"max-width":"22em",size:"small",density:"compact"},null,8,["old-row","inputs"]),l(W,{table:"Library",pk:a.pk,name:a.path,size:"small",density:"compact"},null,8,["pk","name"])]),_:2},1032,["headers","items"]),l(le,null,{default:s(()=>[l(M)]),_:1})])}const at=k(ze,[["render",Ne],["__scopeId","data-v-ed190b94"]]);export{at as default};
