[tool.poetry]
name = "translation-agent"
version = "0.1.0"
description = "Agentic workflow for machine translation using LLMs"
authors = ["Andrew Ng <ng@deeplearning.ai>"]
license = "MIT"
readme = "README.md"
package-mode = true
packages = [{include = "translation_agent", from = "src"}]
repository = "https://github.com/andrewyng/translation-agent"
keywords = ["translation", "agents", "LLM", "machine translation"]


[tool.poetry.dependencies]
python = "^3.9"
spacy = "^3.7.4"
openai = "^1.28.1"
tiktoken = "^0.6.0"
joblib = "^1.4.2"
pysrt = "^1.1.2"
icecream = "^2.1.3"
langchain-text-splitters = "^0.0.1"
python-dotenv = "^1.0.1"
sentencepiece = "^0.2.0"
google-cloud-translate = "^3.15.3"
deepl = "^1.18.0"

[tool.poetry.group.dev]
optional=true

[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
flake8 = "^7.0.0"
pyright = "^1.1.362"
pre-commit = "^3.7.1"
ruff = "^0.4.4"

[tool.poetry.group.test]
optional=true

[tool.poetry.group.test.dependencies]
pytest = "^8.2.0"
mypy = "^1.10.0"
pytest-mock = "^3.14.0"

[tool.poetry.group.eval]
optional=true

[tool.poetry.group.eval.dependencies]
nltk = "^3.8.1"
sacrebleu = "^2.4.2"
google-cloud-translate = "^3.15.3"
deepl = "^1.18.0"

[tool.ruff]
# Set the maximum line length to 79.
line-length = 79

[tool.ruff.lint]
# Add the `line-too-long` rule to the enforced rule set. By default, Ruff omits rules that
# overlap with the use of a formatter, like Black, but we can override this behavior by
# explicitly adding the rule.
extend-select = ["E501"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
