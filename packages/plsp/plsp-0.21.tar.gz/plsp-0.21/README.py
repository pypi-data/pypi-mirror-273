__README__ = """IyBQbGVhc2UgTG9nIFNoaXQgUGxlYXNlIChvciBgcGxzcGApCgojIyBOb3RlcwoKYGBgdGV4dAppbmZvIGluamVjdCBpcyBhIG1vZHVsZSBhbGxvd2luZyB5b3UgdG8gY29tcGlsZSBweXRob24gc291cmNlIGNvZGUgd2l0aCBhZGRlZCBkZWJ1ZyBpbmZvcm1hdGlvbi4KdGhpcyBtZWFucyB0aGF0IHRoZSBpbnRlcmVzdGluZyBwYXJ0cyBvZiB0aGUgY29kZSBzdGF5IHNlcGFyYXRlIGZyb20gcHJpbnRpbmcgYW5kIG90aGVyIGRlYnVnIGNvZGUuCmBgYAoKYGBgdGV4dAo9PT09PT09PT09PT09PT09PT09PT0KUGllY2VzIG9mIHRoZSBwdXp6bGUuCj09PT09PT09PT09PT09PT09PT09PQoKTG9nZ2VyIAkJCS0gVGhlIHBpZWNlIHRoYXQgZG9lcyB0aGUgbG9nZ2luZy4KCkRlYnVnQ29udGV4dCAJCS0gVXNlIHRoaXMgYWxvbmcgc2lkZSB3aXRoIHRoZSBsb2dnZXIgdG8gc2VwYXJhdGUgZGlmZmVyZW50IGFyZWFzIG9mIGFuIGFwcGxpY2F0aW9uLgoJCQktIEZvciBleGFtcGxlLCB5b3UgbWF5IGhhdmUgYSByZW5kZXJpbmcgY29udGV4dCBhbmQgYSBwaHlzaWNzIGNvbnRleHQgaW5zaWRlIGEgZ2FtZSBlbmdpbmUuCgpEZWJ1Z01vZGUgCQktIFVzZSB0aGlzIHRvIHNwZWNpZnkgZGlmZmVyZW50IGxldmVscyBvZiBkZWJ1ZyBpbmZvcm1hdGlvbi4KCQkJLSBGb3IgZXhhbXBsZSwgeW91IG1heSBoYXZlIGEgImluZm8iIG1vZGUgYW5kIGEgImRldGFpbCIgbW9kZS4KCQkJLSBJZiB0aGUgImluZm8iIG1vZGUgaXMgYWN0aXZlLCBhbnkgbWVzc2FnZXMgdGhhdCBhcmUgaW4gdGhlICJkZXRhaWwiIG1vZGUgd2lsbCBub3QgYmUgcHJpbnRlZC4KCQkJLSBUaGlzIGlzIGJlY2F1c2UgdGhlICJkZXRhaWwiIG1vZGUgZXh0ZW5kcyBmcm9tIHRoZSAiaW5mbyIgbW9kZS4KCQkJLSBJZiB0aGUgImRldGFpbCIgbW9kZSBpcyBhY3RpdmUsIGFueSBtZXNzYWdlcyB0aGF0IGFyZSBpbiB0aGUgImluZm8iCgkJCS0gICBhbmQgImRldGFpbCIgbW9kZSB3aWxsIGJlIHByaW50ZWQuCgpDb2xvckNvbmZpZ3VyYXRpb24gCS0gVXNlIHRoaXMgdG8gc3BlY2lmeSB0aGUgY29sb3JzIG9mIHRoZSBkZWJ1ZyBpbmZvcm1hdGlvbi4KCQkJLSBGb3IgZXhhbXBsZSwgeW91IG1heSB3YW50IHRvIGhhdmUgdGhlIHJlbmRlcmluZyBjb250ZXh0IHRvIGJlIGluIGdyZWVuCgkJCS0gICBhbmQgdGhlIHBoeXNpY3MgY29udGV4dCB0byBiZSBpbiByZWQuCgpJbmZvSW5qZWN0b3IgCQktIFRoZSBwaWVjZSB0aGF0IGluamVjdHMgdGhlIGRlYnVnIGluZm9ybWF0aW9uIGludG8gdGhlIHNvdXJjZSBjb2RlLgoJCQktIFVzZXMgdGhlIExvZ2dlciB0byBsb2cgdGhlIGRlYnVnIGluZm9ybWF0aW9uLgoKZm9ybWF0dGVycy8gCQktIFRoZSBwaWVjZXMgdGhhdCBmb3JtYXQgdGhlIGRlYnVnIGluZm9ybWF0aW9uLgoJCQktIEZvciBleGFtcGxlLCB5b3UgbWF5IHdhbnQgdG8gaGF2ZSB0aGUgdGltZSBvZiB0aGUgZGVidWcgaW5mb3JtYXRpb24gdG8KCQkJLSAgIGJlIGZvcm1hdHRlZCBpbiBhIHNwZWNpZmljIHdheS4KCQkJLSBZb3UgbWF5IGFsc28gd2FudCB0byBoYXZlIHRoZSBjYWxsZXIgb2YgdGhlIGRlYnVnIGluZm9ybWF0aW9uIHRvIGJlIGZvcm1hdHRlZCBpbiBhIHNwZWNpZmljIHdheS4KCQkJLSBUaGUgZm9ybWF0dGVycyBtYXkgYmUgYWRkZWQgb250byBhbnkgc3BlY2lmaWVkIGRlYnVnIGNvbnRleHQuIFRoZW4sIHdoZW4gdGhlIExvZ2dlciBpcyB1c2VkCgkJCS0gICBieSBzYWlkIGNvbnRleHQsIHRoZSBmb3JtYXR0ZXJzIHdpbGwgYmUgdXNlZCB0byBmb3JtYXQgdGhlIGRlYnVnIGluZm9ybWF0aW9uLgoKCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KSG93IHRoZSBwaWVjZXMgcmVsYXRlIHRvIGVhY2ggb3RoZXIuCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKPiBOb2RlcyBBIHRoYXQgaXMgZG93biBmcm9tIG5vZGUgQiBtZWFucyB0aGF0IEEgZGVwZW5kcyBvbiwgb3IgaXMgdXNlZCBieSwgQi4KCglMb2dnZXIKCS8gXAoJKyAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tKwoJfCAgICAgICAgICAgICAgICAgICAgICAgfAoJRGVidWcgQ29udGV4dCAgICAgICAgICAgRGVidWcgTW9kZQoJLyBcCgkrICArLS0tLS0tLS0tLS0tLS0tLS0tLS0rCgl8ICAgICAgICAgICAgICAgICAgICAgICB8CglDb2xvciBDb25maWd1cmF0aW9uICAgICBmb3JtYXR0ZXJzLwpgYGAKCiMjIFVzYWdlCgpgYGBweXRob24KZnJvbSBwbHMuTG9nZ2VyIGltcG9ydCBwbHNwCiNmcm9tIGZvcm1hdHRlcnMgaW1wb3J0IFRpbWVGb3JtYXR0ZXIsIENhbGxlckZvcm1hdHRlcgpmcm9tIHBsc3AuRGVidWdNb2RlIGltcG9ydCBEZWJ1Z01vZGUKZnJvbSBwbHNwLkRpcmVjdGlvbiBpbXBvcnQgSU9EaXJlY3Rpb24KCmltcG9ydCBzeXMKCiMgdXNlIGJlbG93IHRvIHNlcGFyYXRlIGxvZyBmaWxlcyBiYXNlZCBvbiBkZWJ1ZyBtb2RlIGluc3RlYWQgb2YgZGVidWcgY29udGV4dC4KI3Bsc3Auc2V0KCJpb19iYXNlZF9vbl9tb2RlIiwgVHJ1ZSkKCgoKIyBUaGUgYmVsb3cgc2V0cyB0aGUgZ2xvYmFsIGNvbnRleHQgdG8gZ2VuZXJpYy4KcGxzcC5zZXQoImdsb2JhbF9jb250ZXh0IiwgImdlbmVyaWMiKQoKCgojIEJlbG93IGlzIGFkZGluZyBhIGRlYnVnIGNvbnRleHQuCiMgSXQgaXMgYSBiaXQgbW9yZSBjb21wbGljYXRlZCB0aGFuIHNldHRpbmcgdXAgZGVidWcgY29udGV4dHMgc28geW91IGRvbnQgaGF2ZSB0byBzZXQgYWxsIHRoZSBwYXJhbWV0ZXJzIGF0IG9uY2UuCnBsc3AuYWRkX2RlYnVnX2NvbnRleHQoImdlbmVyaWMiKQpwbHNwLmFkZF9kZWJ1Z19jb250ZXh0KCJyZW5kZXJpbmciKQpwbHNwLmFkZF9kZWJ1Z19jb250ZXh0KCJwaHlzaWNzIikKCgoKIyBCZWxvdyBpcyBhZGRpbmcgYSBkZWJ1ZyBtb2RlLgojIFlvdSBjYW46CiMgLSBVc2UgdGhlIGB3cml0ZV90b19maWxlYCBwYXJhbWV0ZXIgdG8gc3BlY2lmeSBhIGZpbGUgdG8gd3JpdGUgdG8uCiMgLSBVc2UgdGhlIGB3cml0ZV90b19pb2AgcGFyYW1ldGVyIHRvIHNwZWNpZnkgYW4gaW8gb2JqZWN0IHRvIHdyaXRlIHRvLgojIC0gVXNlIHRoZSBgc2VwYXJhdGVgIHBhcmFtZXRlciB0byBzcGVjaWZ5IGlmIHRoaXMgaXMgYSBzdGFuZGFsb25lIGRlYnVnIG1vZGUsIG1lYW5pbmcsIGlmIHRoaXMgbW9kZSBpcyBhY3RpdmUsCiMgICAgIHRoZSBwcmV2aW91cyBkZWJ1ZyBtb2RlIHdpbGwgbm90IGJlIGFjdGl2ZS4KcGxzcC5hZGRfZGVidWdfbW9kZSgiaW5mbyIpCnBsc3AuYWRkX2RlYnVnX21vZGUoImRldGFpbCIpCnBsc3AuYWRkX2RlYnVnX21vZGUoImRlYnVnIikKcGxzcC5hZGRfZGVidWdfbW9kZSgiZXJyb3IiLCBzZXBhcmF0ZT1UcnVlKQoKCgojIFNUQVJUIE9GIE1PRElGWUlORyBERUJVRyBDT05URVhUUyAjCgojIFlvdSBtYXkgbW9kaWZ5IHRoZSBkZWJ1ZyBjb250ZXh0cyBhZnRlciB0aGV5IGFyZSBjcmVhdGVkLgojIEFjY2VzcyB0aGUgZGVidWcgY29udGV4dCBieSB1c2luZyB0aGUgYExvZ2dlci5kZWJ1Z19jb250ZXh0c2AgZGljdGlvbmFyeS4KCnBscy5nZXRfZGVidWdfY29udGV4dCgiZ2VuZXJpYyIpLnNldF9jYW5fZXZlcl93cml0ZShUcnVlKQpwbHNwLmdldF9kZWJ1Z19jb250ZXh0KCJnZW5lcmljIikuYWRkX2RpcmVjdGlvbihJT0RpcmVjdGlvbihGYWxzZSwgc3lzLnN0ZG91dC5maWxlbm8oKSwgTm9uZSkpCnBsc3AuZ2V0X2RlYnVnX2NvbnRleHQoInJlbmRlcmluZyIpLnNldF9jYW5fZXZlcl93cml0ZShUcnVlKQpwbHNwLmdldF9kZWJ1Z19jb250ZXh0KCJyZW5kZXJpbmciKS5hZGRfZGlyZWN0aW9uKElPRGlyZWN0aW9uKEZhbHNlLCBzeXMuc3Rkb3V0LmZpbGVubygpLCBOb25lKSkKcGxzcC5nZXRfZGVidWdfY29udGV4dCgicGh5c2ljcyIpLnNldF9jYW5fZXZlcl93cml0ZShUcnVlKQpwbHNwLmdldF9kZWJ1Z19jb250ZXh0KCJwaHlzaWNzIikuYWRkX2RpcmVjdGlvbihJT0RpcmVjdGlvbihGYWxzZSwgc3lzLnN0ZG91dC5maWxlbm8oKSwgTm9uZSkpCgkJCQkJICAgICAgIAojIFRoZSBiZWxvdyB3aWxsIGFkZCB0aGUgdGltZSBiZWZvcmUgZWFjaCBsb2cgbWVzc2FnZS4KI3Bsc3AuZ2V0X2RlYnVnX2NvbnRleHQoImdlbmVyaWMiKS5hZGRfZm9ybWF0X2xheWVyKFRpbWVGb3JtYXR0ZXIpCiNwbHNwLmdldF9kZWJ1Z19jb250ZXh0KCJyZW5kZXJpbmciKS5hZGRfZm9ybWF0X2xheWVyKFRpbWVGb3JtYXR0ZXIpCiNwbHNwLmdldF9kZWJ1Z19jb250ZXh0KCJwaHlzaWNzIikuYWRkX2Zvcm1hdF9sYXllcihUaW1lRm9ybWF0dGVyKQojCiMjIFRoZSBiZWxvdyB3aWxsIGFkZCB3aGljaCBldmVyIGZ1bmN0aW9uIGNhbGxlZCB0aGUgbG9nIG1lc3NhZ2UuCiNwbHNwLmdldF9kZWJ1Z19jb250ZXh0KCJnZW5lcmljIikuYWRkX2Zvcm1hdF9sYXllcihDYWxsZXJGb3JtYXR0ZXIpCiNwbHNwLmdldF9kZWJ1Z19jb250ZXh0KCJyZW5kZXJpbmciKS5hZGRfZm9ybWF0X2xheWVyKENhbGxlckZvcm1hdHRlcikKI3Bsc3AuZ2V0X2RlYnVnX2NvbnRleHQoInBoeXNpY3MiKS5hZGRfZm9ybWF0X2xheWVyKENhbGxlckZvcm1hdHRlcikKIwoKIyBFTkQgT0YgTU9ESUZZSU5HIERFQlVHIENPTlRFWFRTICMKCgoKIyBOb3cgd2UgY2FuIHVzZSB0aGUgZGVidWcgY29udGV4dHMgdG8gbG9nIG1lc3NhZ2VzLgpwbHNwLnNldF9kZWJ1Z19tb2RlKCJpbmZvIikKCnBsc3AoKS5pbmZvKCJUaGlzIGlzIHVzaW5nIHRoZSBnZW5lcmljIGNvbnRleHQuIikKcGxzcCgpLmluZm8oIkl0IHdvcmtzIHNpbmNlIHdlIHNldCBhIGdsb2JhbCBjb250ZXh0LiIpCgoKCmNsYXNzIHJlbmRlcmVyOgoJZGVmIF9faW5pdF9fKHNlbGYpOgoJCXBsc3AoKS5yZW5kZXJpbmcuZGV0YWlsKCJUaGUgcmVuZGVyaW5nIGVuZ2luZSBpbiB0aGlzIGVuZ2luZSBpcyBwcmV0dHkgc2ltcGxlISIpCgoKCmNsYXNzIHBoeXNpY3M6CglkZWYgX19pbml0X18oc2VsZik6CgkJcGxzcCgpLnBoeXNpY3MuZGV0YWlsKCJUaGUgcGh5c2ljcyBlbmdpbmUgaW4gdGhpcyBlbmdpbmUgaXMgcHJldHR5IHNpbXBsZSEiKQoKCiNteV9yZW5kZXJlciA9IHJlbmRlcmVyKCkKbXlfcGh5c2ljcyA9IHBoeXNpY3MoKQoKcGxzcC5zZXRfZGVidWdfbW9kZSgiZGV0YWlsIikKCm15X3BoeXNpY3MgPSBwaHlzaWNzKCkKCgoKCgoKCmZyb20gcGxzcC5pbmZvaW5qZWN0IGltcG9ydCBJbmZvSW5qZWN0b3IKCkBJbmZvSW5qZWN0b3IuYWRkX2luc3RydWN0aW9uKGxpbmU9MSwgZGVidWdfbW9kZT0iaW5mbyIsIGRlYnVnX2NvbnRleHQ9ImdlbmVyaWMiLCBhcmdzX2Zvcl9sb2dnZXI9KAoJZiJuID0ge0luZm9JbmplY3Rvci5WYXJpYWJsZVJlZmVyZW5jZSgnbicpfSIsCikpCkBJbmZvSW5qZWN0b3IuYWRkX2luc3RydWN0aW9uKGxpbmU9MiwgZGVidWdfbW9kZT0iZGV0YWlsIiwgZGVidWdfY29udGV4dD0iZ2VuZXJpYyIsIGFyZ3NfZm9yX2xvZ2dlcj0oCglmIm4gaXMiLCAibGVzcyB0aGFuIG9yIGVxdWFsIHRvIDEiCiksCgllbmQ9IlxuLlxuIgopCkBJbmZvSW5qZWN0b3IuYWRkX2luc3RydWN0aW9uKGxpbmU9NCwgZGVidWdfbW9kZT0iaW5mbyIsIGRlYnVnX2NvbnRleHQ9ImdlbmVyaWMiLCBhcmdzX2Zvcl9sb2dnZXI9KAoJZiJuIGlzIGdyZWF0ZXIgdGhhbiAxIiwKCWYiTm93IGFjdHVhbGx5IGNhbGN1bGF0aW5nLi4uIG4tMSBhbmQgbi0yIgopKQpASW5mb0luamVjdG9yLmluamVjdChnbG9iYWxzKCksIGxvY2FscygpKQpkZWYgZmliKG4pOgoJaWYgbiA8PSAxOgoJCXJldHVybiBuCgllbHNlOgoJCXJldHVybiBmaWIobi0xKSArIGZpYihuLTIpCgpmaWIoNSkKYGBg"""