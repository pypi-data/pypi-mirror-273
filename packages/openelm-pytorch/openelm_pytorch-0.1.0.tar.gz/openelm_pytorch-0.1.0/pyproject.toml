[build-system]
requires = ["setuptools", "setuptools-scm"]

[project]
name = "openelm-pytorch"
authors = [
    {name = "Frank Odom", email = "frank.odom.iii@gmail.com"},
]
description = "openelm-pytorch"
license = {text = "MIT"}
dynamic = ["version", "readme"]  # NOTE: Must be in sync with [tool.setuptools.dynamic] below
dependencies = [
    "safetensors>=0.4.0,<1",
    "torch>=2.0,<3.0",
]
requires-python = ">=3.9"
classifiers = ["Programming Language :: Python :: 3"]

[tool.setuptools.dynamic]
# NOTE: Must be in sync with 'project.dynamic' above
version = {attr = "openelm_pytorch.VERSION"}
readme = {file = ["README.md"], content-type = "text/markdown"}

[tool.setuptools.packages.find]
exclude = ["tests"]

# extra packages (e.g. pip install .[test])
[project.optional-dependencies]
mlx = [
    "mlx>=0.10.0,<1",
]
train = [
    "lora-pytorch~=0.2.0",
    "lightning~=2.2.0",
    "tensorboard~=2.14.0",
    "tqdm",
]
test = [
    "black==24.4.2",
    "mlx==0.10.0",
    "mypy==1.10.0",
    "numpy==1.26.4",
    "pre-commit==3.7.0",
    "pytest==8.1.2",
    "pytest-cov==5.0.0",
    "ruff==0.4.2",
    "sentencepiece==0.2.0",
]


# ----- Linting, Formatting, and Typing -----

[tool.black]
line-length = 88

[tool.mypy]
files = "openelm_pytorch/"
check_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov --cov-report term-missing --cov-fail-under 80"
filterwarnings = "ignore:.*.:DeprecationWarning"

[tool.ruff]
line-length = 88
lint.ignore = ["B905", "E501"]
lint.select = [
    "B",
    "C",
    "E",
    "F",
    "I",
    "W"
]
# Exclude a variety of commonly ignored directories.
lint.exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint.mccabe]
max-complexity = 18