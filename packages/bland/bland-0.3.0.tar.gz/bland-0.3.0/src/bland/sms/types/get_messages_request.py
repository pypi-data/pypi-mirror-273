# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...commons.types.phone_number import PhoneNumber
from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import pydantic_v1


class GetMessagesRequest(pydantic_v1.BaseModel):
    phone_number: typing.Optional[PhoneNumber] = pydantic_v1.Field(default=None)
    """
    The phone number to get messages for.
    """

    to: typing.Optional[PhoneNumber] = pydantic_v1.Field(default=None)
    """
    The to number in the conversation. This is the number you _do not_ own.
    """

    from_: typing.Optional[PhoneNumber] = pydantic_v1.Field(alias="from", default=None)
    """
    The from number in the conversation. This is the number you _do_ own.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
