# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...commons.types.phone_number import PhoneNumber
from ...commons.types.webhook import Webhook
from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import pydantic_v1
from .country_code import CountryCode


class InboundNumberRequest(pydantic_v1.BaseModel):
    area_code: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    Choose a three-digit area code for your phone number. If set as a parameter, a number will only be purchased by exact match if available.
    
    If not provided, the default value `415` will be used.
    """

    prompt: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    This defines how the AI will start the conversation, information available to it, and its behaviors. Matches how the outbound `task` parameter functions.
    """

    country_code: typing.Optional[CountryCode] = pydantic_v1.Field(default=None)
    """
    Choose a country code for your phone number.
    
    If not provided, the default value `US` will be used.
    """

    webhook: typing.Optional[Webhook] = None
    phone_number: PhoneNumber

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
