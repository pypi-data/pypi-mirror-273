# This file is part of fm-actor, a library for interacting with fm-data files:
# https://gitlab.com/sosy-lab/software/fm-actor
#
# SPDX-FileCopyrightText: 2024 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: MIT

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fm-actor"
requires-python = ">= 3.10"
dynamic = ["version"]
authors = [{ name = "Henrik Wachowitz", email = "henrik.wachowitz@ifi.lmu.de" }]
maintainers = [
    { name = "Henrik Wachowitz", email = "henrik.wachowitz@ifi.lmu.de" },
]
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "tomli >= 2.0; python_version <= '3.10'",
    "pyyaml >= 6.0",
    "werkzeug >= 3.0",
    "httpx >= 0.26",
    "tqdm >= 4.66",
    "benchexec>=3.21",
]

[tool.hatch.version]
path = "src/fm_actor/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/fm_actor"]


[tool.hatch.envs.test]
dependencies = [
    "coverage[toml]",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pyfakefs",
    "requests",
    "requests-mock",
]
scripts.test = "pytest --cov=src/fm_actor --cov-report=xml tests/"

[tool.ruff]
line-length = 120

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
