{"title":"`ambivalent`","markdown":{"yaml":{"site-url":"https://saforem2.github.io/ambivalent","editor":{"render-on-save":true},"execute":{"freeze":false},"format":{"html":"default","revealjs":{"output-file":"slides.html"},"gfm":{"default-image-extension":"svg","author":"Sam Foreman","output-file":"ambivalent.md"}}},"headingText":"`ambivalent` ü§∑üèª‚Äç‚ôÇÔ∏è","containsRefs":false,"markdown":"\n\n\n\n[~~`opinionated`~~](https://github.com/saforem2/opinionated) $\\longrightarrow$ [**`ambivalent`**](https://github.com/saforem2/ambivalent)\n\nClean, simple style for Matplotlib figures.\n\nTransparent backgrounds with grey text $\\textcolor{#838383}{\\blacksquare}$ that\nare accessible / legible and `{light, dark}`-mode independent.\n\n## Examples[^examples]\n\n[^examples]: Examples from [Matplotlib Examples](https://matplotlib.org/stable/gallery/index.html)\n\n::: {.flex style=\"flex-direction:row;\"}\n\n::: {layout=\"[[40, 40]]\" layout-valign=\"bottom\" style=\"display: flex; text-align:center; align-items: flex-end;\"}\n\n![[`seborn.jointplot`](https://seaborn.pydata.org/generated/seaborn.jointplot.html#seaborn.jointplot)](./assets/penguins.svg){#fig-penguins .stretch}\n\n![[spectrum](https://matplotlib.org/stable/gallery/lines_bars_and_markers/spectrum_demo.html#sphx-glr-gallery-lines-bars-and-markers-spectrum-demo-py)](./assets/spectrum.svg){#fig-spectrum .stretch}\n\n:::\n\n\n::: {layout=\"[[40, 40]]\" layout-valign=\"bottom\" style=\"display: flex; text-align:center; align-items: flex-end;\"}\n\n![`tips` dataset](./assets/tipde-kde_r.svg){#fig-tips-kde .stretch}\n\n![2D KDE](./assets/kde-2d_r.svg){#fig-2d-kde .stretch}\n\n:::\n\n::: {layout=\"[[80]]\" style=\"display: flex; text-align:center;\"}\n\n![Histograms](./assets/mpl-hist.svg){#fig-mpl-hist .stretch}\n\n:::\n\n:::\n\n## More Examples\n\n::: {.stretch layout=\"[[31, 31, 31]]\" layout-valign=\"bottom\" style=\"display: flex; text-align:center;\"}\n\n![$|J_{f}|$](https://saforem2.github.io/l2hmc-qcd/qmd/l2hmc-2dU1/assets/output_33_22.svg){#fig-ridgeplot1 .stretch}\n\n![$|J_{b}|$](https://saforem2.github.io/l2hmc-qcd/qmd/l2hmc-2dU1/assets/output_33_23.svg){#fig-ridgeplot2 .stretch}\n\n![$|J|$](https://saforem2.github.io/l2hmc-qcd/qmd/l2hmc-2dU1/assets/output_33_21.svg){#fig-ridgeplot3 .stretch}\n\n:::\n\n<details closed><summary><italic>Even more...</italic></summary>\n\n::: {#fig-chains-dQ layout=\"[[80]]\" layout-valign=\"bottom\" style=\"display: flex; text-align:center;\"}\n\n![$\\delta Q_{\\mathrm{train}}$](./assets/chains.svg){#fig-chains .stretch}\n\nFigure from [`l2hmc-qcd` Notebook](https://saforem2.github.io/l2hmc-qcd/qmd/l2hmc-2dU1/l2hmc-2dU1.html#inference)\n\n:::\n\n\n### InferenceData\n\n::: {#fig-xeps style=\"display: flex; text-align:center;\"}\n\n![](https://saforem2.github.io/l2hmc-qcd/qmd/l2hmc-2dU1/assets/output_30_68.svg){.stretch}\n\n$\\varepsilon_{x}$ during training\n\n:::\n\n::: {#fig-veps style=\"display: flex; text-align:center;\"}\n\n![](https://saforem2.github.io/l2hmc-qcd/qmd/l2hmc-2dU1/assets/output_30_68.svg){.stretch}\n\n$\\varepsilon_{x}$ during training\n\n:::\n\n::: {#fig-combined-chains layout=\"[[80]]\" style=\"display: flex; text-align:center;\"}\n\n\n![$\\sum \\delta Q$](https://saforem2.github.io/l2hmc-qcd/qmd/l2hmc-2dU1/assets/output_48_1.svg){#fig-dQhist .stretch}\n\nFigure from [`l2hmc-qcd` Notebook](https://saforem2.github.io/l2hmc-qcd/qmd/l2hmc-2dU1/l2hmc-2dU1.html)\n\n:::\n\n</details>\n\n## Getting Started\n\n```{python}\n#| echo: false\n#| output: false\n# automatically detect and reload local changes to modules\n%load_ext autoreload\n%autoreload 2\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n%matplotlib inline\nimport matplotlib_inline\nmatplotlib_inline.backend_inline.set_matplotlib_formats('svg', 'retina')\n```\n\n- Use `ambivalend.STYLES['ambivalent']` as the default style for `matplotlib`.\n\n```{python}\nimport matplotlib.pyplot as plt\nfrom ambivalent import STYLES\nplt.style.use(STYLES['ambivalent'])\n```\n\n## `seaborn` Tips Dataset\n\n- [Tips Dataset Example](https://seaborn.pydata.org/generated/seaborn.kdeplot.html)\n- [Seaborn Gallery](https://seaborn.pydata.org/examples/index.html)\n\n```{python}\n#| code-fold: true\n#| code-summary: \"View Code\"\n#| label: fig-py-tips-density\n#| output: asis\n#| fig-cap: \"Tips -- Density Plot\"\n#| layout: [[100]]\nimport seaborn as sns\n\ntips = sns.load_dataset(\"tips\")\ntips.head()\n\nfig, ax = plt.subplots(figsize=(6, 6))  # , ncols=2)\n\n_ = sns.kdeplot(\n   data=tips, x=\"total_bill\", hue=\"size\",\n   fill=True, common_norm=False, palette=\"flare_r\",\n   alpha=.3, linewidth=0,\n   ax=ax,  # [0],\n)\n_ = ax.set_ylabel('')\n# _ = sns.kdeplot(\n#    data=tips, x=\"tip\", hue=\"size\",\n#    fill=True, common_norm=False, palette=\"crest\",\n#    alpha=.3, linewidth=0,\n#    ax=ax[1],\n# )\n```\n\n## `seaborn` Scatter Plot\n\n```{python}\n#| code-fold: true\n#| code-summary: \"View Code\"\n#| label: fig-py-diamonds-scatter\n#| output: true\n#| fig-cap: \"scatter plot with markers of varying size and color\"\n#| layout: [[100]]\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Load the example diamonds dataset\ndiamonds = sns.load_dataset(\"diamonds\")\n\n# Draw a scatter plot while assigning point colors and sizes to different\n# variables in the dataset\nf, ax = plt.subplots(figsize=(6, 6))\n_ = sns.despine(f, left=True, bottom=True)\n_ = clarity_ranking = [\"I1\", \"SI2\", \"SI1\", \"VS2\", \"VS1\", \"VVS2\", \"VVS1\", \"IF\"]\n_ = sns.scatterplot(x=\"carat\", y=\"price\",\n                hue=\"clarity\", size=\"depth\",\n                palette=\"flare\",\n                hue_order=clarity_ranking,\n                sizes=(1, 8), linewidth=0,\n                data=diamonds, ax=ax)\n```\n\n## Histogram + Scatter Plot\n\n```{python}\n#| code-fold: true\n#| code-summary: \"View Code\"\n#| label: fig-py-hist-scatter\n#| output: true\n#| fig-cap: \"Combo histogram + Scatter Plot with Density Contours\"\n#| layout: [[100]]\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Simulate data from a bivariate Gaussian\nn = 10000\nmean = [0, 0]\ncov = [(2, .4), (.4, .2)]\nrng = np.random.RandomState(0)\nx, y = rng.multivariate_normal(mean, cov, n).T\n\n# Draw a combo histogram and scatterplot with density contours\nf, ax = plt.subplots(figsize=(6, 6))\n_ = sns.scatterplot(x=x, y=y, s=5, color=\"#666666\", alpha=0.3)\n_ = sns.histplot(x=x, y=y, bins=50, pthresh=.1, cmap=\"flare_r\")\n_ = sns.kdeplot(x=x, y=y, levels=5, color=\"w\", linewidths=1)\n_ = ax.set_xlabel('x')\n_ = ax.set_ylabel('y')\n_ = plt.show()\n```\n\n## Jointplot\n\n```{python}\n#| code-fold: true\n#| code-summary: \"View Code\"\n#| label: fig-py-kde-2d\n#| output: true\n#| fig-cap: \"Joint Distribution with Kernel Density Estimation\"\n#| layout: [[100]]\nimport seaborn as sns\n# Load the penguins dataset\npenguins = sns.load_dataset(\"penguins\")\n# Show the joint distribution using kernel density estimation\nimport matplotlib as mpl\nwith mpl.rc_context(plt.rcParams.update({'axes.grid': False})):\n  g = sns.jointplot(\n      data=penguins,\n      x=\"bill_length_mm\",\n      y=\"bill_depth_mm\",\n      hue=\"species\",\n      # kind=\"kde\",\n      edgecolors='none',\n      alpha=0.4,\n  )\n  _ = plt.grid(False)\n  plt.show()\n```\n\n## Matplotlib Histograms\n\n```{python}\n#| code-fold: true\n#| code-summary: \"View Code\"\n#| label: fig-py-mpl-hists\n#| output: true\n#| fig-cap: \"Histograms with Matplotlib\"\n#| layout: [[100]]\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nn_bins = 10\nx = np.random.randn(1000, 3)\n\nplt.rcParams['axes.grid'] = True\n\nfig, ((ax0, ax1), (ax2, ax3)) = plt.subplots(nrows=2, ncols=2)\n\ncolors = ['#333333', '#666666', '#999999']\nax0.hist(x, n_bins, density=True, histtype='bar', color=colors, label=colors)\n_ = ax0.legend()\n_ = ax0.set_title('bars with legend')\n\n_ = ax1.hist(x, n_bins, density=True, histtype='bar', stacked=True, alpha=0.4)\n_ = ax1.set_title('stacked bar')\n\n_ = ax2.hist(x, n_bins, histtype='step', stacked=True, fill=False)\n_ = ax2.set_title('stack step (unfilled)')\n\n# Make a multiple-histogram of data-sets with different length.\nx_multi = [np.random.randn(n) for n in [10000, 5000, 2000]]\n_ = ax3.hist(x_multi, n_bins, histtype='bar')\n_ = ax3.set_title('different sample sizes')\n\n_ = fig.tight_layout()\nplt.show()\n```\n\n\n<!-- ```{python} -->\n<!-- #| code-fold: true -->\n<!-- #| code-summary: \"boxenplot\" -->\n<!-- #| label: fig-py-boxenplot -->\n<!-- #| output: true -->\n<!-- #| fig-cap: \"Seaborn Boxenplot\" -->\n<!-- #| layout: [[100]] -->\n<!---->\n<!-- import seaborn as sns -->\n<!---->\n<!-- diamonds = sns.load_dataset(\"diamonds\") -->\n<!-- clarity_ranking = [\"I1\", \"SI2\", \"SI1\", \"VS2\", \"VS1\", \"VVS2\", \"VVS1\", \"IF\"] -->\n<!---->\n<!-- sns.boxenplot( -->\n<!--     diamonds, x=\"clarity\", y=\"carat\", -->\n<!--     color=\"b\", order=clarity_ranking, width_method=\"linear\", -->\n<!-- ) -->\n<!-- ``` -->\n\n<!-- ```{python} -->\n<!-- import warnings -->\n<!-- from ambivalent import STYLES -->\n<!-- import matplotlib.pyplot as plt -->\n<!-- import numpy as np -->\n<!---->\n<!-- plt.style.use(STYLES['ambivalent']) -->\n<!---->\n<!-- # some random data -->\n<!-- x = np.random.randn(1000) -->\n<!-- y = np.random.randn(1000) -->\n<!---->\n<!---->\n<!-- def scatter_hist(x, y, ax, ax_histx, ax_histy, alpha: float = 0.4): -->\n<!--     # no labels -->\n<!--     ax_histx.tick_params(axis=\"x\", labelbottom=False) -->\n<!--     ax_histy.tick_params(axis=\"y\", labelleft=False) -->\n<!---->\n<!--     # the scatter plot: -->\n<!--     ax.scatter(x, y, alpha=alpha) -->\n<!---->\n<!--     # now determine nice limits by hand: -->\n<!--     binwidth = 0.25 -->\n<!--     xymax = max(np.max(np.abs(x)), np.max(np.abs(y))) -->\n<!--     lim = (int(xymax/binwidth) + 1) * binwidth -->\n<!---->\n<!--     bins = np.arange(-lim, lim + binwidth, binwidth) -->\n<!--     ax_histx.hist(x, bins=bins) -->\n<!--     ax_histy.hist(y, bins=bins, orientation='horizontal') -->\n<!-- ``` -->\n\n<!-- ### 2D Density -->\n<!---->\n<!-- ```{python} -->\n<!-- #| code-fold: true -->\n<!-- #| code-summary: \"Make the plot\" -->\n<!-- #| label: fig-py-density2d -->\n<!-- #| output: true -->\n<!-- #| fig-cap: \"2D Density plot\" -->\n<!-- #| layout: [[100]] -->\n<!---->\n<!-- # Start with a square Figure. -->\n<!-- fig = plt.figure(figsize=(6, 6)) -->\n<!-- # Add a gridspec with two rows and two columns and a ratio of 1 to 4 between -->\n<!-- # the size of the marginal axes and the main axes in both directions. -->\n<!-- # Also adjust the subplot parameters for a square plot. -->\n<!-- gs = fig.add_gridspec(2, 2,  width_ratios=(4, 1), height_ratios=(1, 4), -->\n<!--                       left=0.1, right=0.9, bottom=0.1, top=0.9, -->\n<!--                       wspace=0.15, hspace=0.15) -->\n<!-- # Create the Axes. -->\n<!-- ax = fig.add_subplot(gs[1, 0]) -->\n<!-- ax_histx = fig.add_subplot(gs[0, 0], sharex=ax) -->\n<!-- ax_histy = fig.add_subplot(gs[1, 1], sharey=ax) -->\n<!-- _ = fig.axes[1].grid(False) -->\n<!-- _ = fig.axes[2].set_xticklabels([]) -->\n<!-- _ = fig.axes[1].set_yticklabels([]) -->\n<!-- _ = fig.axes[2].grid(False) -->\n<!-- _ = fig.axes[0].set_xticklabels(fig.axes[0].get_xticklabels()) -->\n<!-- _ = fig.axes[0].set_yticklabels(fig.axes[0].get_yticklabels()) -->\n<!---->\n<!-- # Draw the scatter plot and marginals. -->\n<!-- _ = scatter_hist(x, y, ax, ax_histx, ax_histy) -->\n<!-- _ = plt.show() -->\n<!-- ``` -->\n<!---->\n<!---->\n\n\n\n<!-- ```{python} -->\n<!-- import numpy as np -->\n<!-- import matplotlib.animation as animation -->\n<!---->\n<!-- # Fixing random state for reproducibility -->\n<!-- np.random.seed(19680801) -->\n<!---->\n<!---->\n<!-- def random_walk(num_steps, max_step=0.05): -->\n<!--     \"\"\"Return a 3D random walk as (num_steps, 3) array.\"\"\" -->\n<!--     start_pos = np.random.random(3) -->\n<!--     steps = np.random.uniform(-max_step, max_step, size=(num_steps, 3)) -->\n<!--     walk = start_pos + np.cumsum(steps, axis=0) -->\n<!--     return walk -->\n<!---->\n<!---->\n<!-- def update_lines(num, walks, lines): -->\n<!--     for line, walk in zip(lines, walks): -->\n<!--         # NOTE: there is no .set_data() for 3 dim data... -->\n<!--         line.set_data(walk[:num, :2].T) -->\n<!--         line.set_3d_properties(walk[:num, 2]) -->\n<!--     return lines -->\n<!---->\n<!---->\n<!-- # Data: 40 random walks as (num_steps, 3) arrays -->\n<!-- num_steps = 30 -->\n<!-- walks = [random_walk(num_steps) for index in range(40)] -->\n<!---->\n<!-- # Attaching 3D axis to the figure -->\n<!-- fig = plt.figure() -->\n<!-- ax = fig.add_subplot(projection=\"3d\") -->\n<!---->\n<!-- # Create lines initially without data -->\n<!-- lines = [ax.plot([], [], [])[0] for _ in walks] -->\n<!---->\n<!-- # Setting the axes properties -->\n<!-- _ = ax.set(xlim3d=(0, 1), xlabel='X') -->\n<!-- _ = ax.set(ylim3d=(0, 1), ylabel='Y') -->\n<!-- _ = ax.set(zlim3d=(0, 1), zlabel='Z') -->\n<!---->\n<!-- # Creating the Animation object -->\n<!-- ani = animation.FuncAnimation( -->\n<!--     fig, update_lines, num_steps, fargs=(walks, lines), interval=100) -->\n<!---->\n<!-- plt.show() -->\n<!-- ``` -->\n\n\n::: {.callout-tip icon=false title='[{{< iconify material-symbols ecg-heart >}} Status]{style=\"color: #FF5252;\"}' collapse=\"false\" style=\"text-align: left!important; width:100%; border-color: var(--dim-text)!important; background-color: var(--bg-transparent); opacity:100%;\"}\n\n[![](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fsaforem2.github.io%2Fambivalent&count_bg=%23222222&title_bg=%23303030&icon=&icon_color=%23E7E7E7)]{style=\"text-align:center;\"}\n\n```{python}\n#| echo: false\nimport datetime\nfrom rich import print\nnow = datetime.datetime.now()\nday = now.strftime('%m/%d/%Y')\ntime = now.strftime('%H:%M:%S')\nprint(' '.join([\n  \"[dim italic]Last Updated[/]:\",\n  f\"[#F06292]{day}[/]\",\n  f\"[dim]@[/]\",\n  f\"[#1A8FFF]{time}[/]\"\n]))\n```\n\n:::\n","srcMarkdownNoYaml":"\n\n\n#  `ambivalent` ü§∑üèª‚Äç‚ôÇÔ∏è \n\n[~~`opinionated`~~](https://github.com/saforem2/opinionated) $\\longrightarrow$ [**`ambivalent`**](https://github.com/saforem2/ambivalent)\n\nClean, simple style for Matplotlib figures.\n\nTransparent backgrounds with grey text $\\textcolor{#838383}{\\blacksquare}$ that\nare accessible / legible and `{light, dark}`-mode independent.\n\n## Examples[^examples]\n\n[^examples]: Examples from [Matplotlib Examples](https://matplotlib.org/stable/gallery/index.html)\n\n::: {.flex style=\"flex-direction:row;\"}\n\n::: {layout=\"[[40, 40]]\" layout-valign=\"bottom\" style=\"display: flex; text-align:center; align-items: flex-end;\"}\n\n![[`seborn.jointplot`](https://seaborn.pydata.org/generated/seaborn.jointplot.html#seaborn.jointplot)](./assets/penguins.svg){#fig-penguins .stretch}\n\n![[spectrum](https://matplotlib.org/stable/gallery/lines_bars_and_markers/spectrum_demo.html#sphx-glr-gallery-lines-bars-and-markers-spectrum-demo-py)](./assets/spectrum.svg){#fig-spectrum .stretch}\n\n:::\n\n\n::: {layout=\"[[40, 40]]\" layout-valign=\"bottom\" style=\"display: flex; text-align:center; align-items: flex-end;\"}\n\n![`tips` dataset](./assets/tipde-kde_r.svg){#fig-tips-kde .stretch}\n\n![2D KDE](./assets/kde-2d_r.svg){#fig-2d-kde .stretch}\n\n:::\n\n::: {layout=\"[[80]]\" style=\"display: flex; text-align:center;\"}\n\n![Histograms](./assets/mpl-hist.svg){#fig-mpl-hist .stretch}\n\n:::\n\n:::\n\n## More Examples\n\n::: {.stretch layout=\"[[31, 31, 31]]\" layout-valign=\"bottom\" style=\"display: flex; text-align:center;\"}\n\n![$|J_{f}|$](https://saforem2.github.io/l2hmc-qcd/qmd/l2hmc-2dU1/assets/output_33_22.svg){#fig-ridgeplot1 .stretch}\n\n![$|J_{b}|$](https://saforem2.github.io/l2hmc-qcd/qmd/l2hmc-2dU1/assets/output_33_23.svg){#fig-ridgeplot2 .stretch}\n\n![$|J|$](https://saforem2.github.io/l2hmc-qcd/qmd/l2hmc-2dU1/assets/output_33_21.svg){#fig-ridgeplot3 .stretch}\n\n:::\n\n<details closed><summary><italic>Even more...</italic></summary>\n\n::: {#fig-chains-dQ layout=\"[[80]]\" layout-valign=\"bottom\" style=\"display: flex; text-align:center;\"}\n\n![$\\delta Q_{\\mathrm{train}}$](./assets/chains.svg){#fig-chains .stretch}\n\nFigure from [`l2hmc-qcd` Notebook](https://saforem2.github.io/l2hmc-qcd/qmd/l2hmc-2dU1/l2hmc-2dU1.html#inference)\n\n:::\n\n\n### InferenceData\n\n::: {#fig-xeps style=\"display: flex; text-align:center;\"}\n\n![](https://saforem2.github.io/l2hmc-qcd/qmd/l2hmc-2dU1/assets/output_30_68.svg){.stretch}\n\n$\\varepsilon_{x}$ during training\n\n:::\n\n::: {#fig-veps style=\"display: flex; text-align:center;\"}\n\n![](https://saforem2.github.io/l2hmc-qcd/qmd/l2hmc-2dU1/assets/output_30_68.svg){.stretch}\n\n$\\varepsilon_{x}$ during training\n\n:::\n\n::: {#fig-combined-chains layout=\"[[80]]\" style=\"display: flex; text-align:center;\"}\n\n\n![$\\sum \\delta Q$](https://saforem2.github.io/l2hmc-qcd/qmd/l2hmc-2dU1/assets/output_48_1.svg){#fig-dQhist .stretch}\n\nFigure from [`l2hmc-qcd` Notebook](https://saforem2.github.io/l2hmc-qcd/qmd/l2hmc-2dU1/l2hmc-2dU1.html)\n\n:::\n\n</details>\n\n## Getting Started\n\n```{python}\n#| echo: false\n#| output: false\n# automatically detect and reload local changes to modules\n%load_ext autoreload\n%autoreload 2\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n%matplotlib inline\nimport matplotlib_inline\nmatplotlib_inline.backend_inline.set_matplotlib_formats('svg', 'retina')\n```\n\n- Use `ambivalend.STYLES['ambivalent']` as the default style for `matplotlib`.\n\n```{python}\nimport matplotlib.pyplot as plt\nfrom ambivalent import STYLES\nplt.style.use(STYLES['ambivalent'])\n```\n\n## `seaborn` Tips Dataset\n\n- [Tips Dataset Example](https://seaborn.pydata.org/generated/seaborn.kdeplot.html)\n- [Seaborn Gallery](https://seaborn.pydata.org/examples/index.html)\n\n```{python}\n#| code-fold: true\n#| code-summary: \"View Code\"\n#| label: fig-py-tips-density\n#| output: asis\n#| fig-cap: \"Tips -- Density Plot\"\n#| layout: [[100]]\nimport seaborn as sns\n\ntips = sns.load_dataset(\"tips\")\ntips.head()\n\nfig, ax = plt.subplots(figsize=(6, 6))  # , ncols=2)\n\n_ = sns.kdeplot(\n   data=tips, x=\"total_bill\", hue=\"size\",\n   fill=True, common_norm=False, palette=\"flare_r\",\n   alpha=.3, linewidth=0,\n   ax=ax,  # [0],\n)\n_ = ax.set_ylabel('')\n# _ = sns.kdeplot(\n#    data=tips, x=\"tip\", hue=\"size\",\n#    fill=True, common_norm=False, palette=\"crest\",\n#    alpha=.3, linewidth=0,\n#    ax=ax[1],\n# )\n```\n\n## `seaborn` Scatter Plot\n\n```{python}\n#| code-fold: true\n#| code-summary: \"View Code\"\n#| label: fig-py-diamonds-scatter\n#| output: true\n#| fig-cap: \"scatter plot with markers of varying size and color\"\n#| layout: [[100]]\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Load the example diamonds dataset\ndiamonds = sns.load_dataset(\"diamonds\")\n\n# Draw a scatter plot while assigning point colors and sizes to different\n# variables in the dataset\nf, ax = plt.subplots(figsize=(6, 6))\n_ = sns.despine(f, left=True, bottom=True)\n_ = clarity_ranking = [\"I1\", \"SI2\", \"SI1\", \"VS2\", \"VS1\", \"VVS2\", \"VVS1\", \"IF\"]\n_ = sns.scatterplot(x=\"carat\", y=\"price\",\n                hue=\"clarity\", size=\"depth\",\n                palette=\"flare\",\n                hue_order=clarity_ranking,\n                sizes=(1, 8), linewidth=0,\n                data=diamonds, ax=ax)\n```\n\n## Histogram + Scatter Plot\n\n```{python}\n#| code-fold: true\n#| code-summary: \"View Code\"\n#| label: fig-py-hist-scatter\n#| output: true\n#| fig-cap: \"Combo histogram + Scatter Plot with Density Contours\"\n#| layout: [[100]]\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Simulate data from a bivariate Gaussian\nn = 10000\nmean = [0, 0]\ncov = [(2, .4), (.4, .2)]\nrng = np.random.RandomState(0)\nx, y = rng.multivariate_normal(mean, cov, n).T\n\n# Draw a combo histogram and scatterplot with density contours\nf, ax = plt.subplots(figsize=(6, 6))\n_ = sns.scatterplot(x=x, y=y, s=5, color=\"#666666\", alpha=0.3)\n_ = sns.histplot(x=x, y=y, bins=50, pthresh=.1, cmap=\"flare_r\")\n_ = sns.kdeplot(x=x, y=y, levels=5, color=\"w\", linewidths=1)\n_ = ax.set_xlabel('x')\n_ = ax.set_ylabel('y')\n_ = plt.show()\n```\n\n## Jointplot\n\n```{python}\n#| code-fold: true\n#| code-summary: \"View Code\"\n#| label: fig-py-kde-2d\n#| output: true\n#| fig-cap: \"Joint Distribution with Kernel Density Estimation\"\n#| layout: [[100]]\nimport seaborn as sns\n# Load the penguins dataset\npenguins = sns.load_dataset(\"penguins\")\n# Show the joint distribution using kernel density estimation\nimport matplotlib as mpl\nwith mpl.rc_context(plt.rcParams.update({'axes.grid': False})):\n  g = sns.jointplot(\n      data=penguins,\n      x=\"bill_length_mm\",\n      y=\"bill_depth_mm\",\n      hue=\"species\",\n      # kind=\"kde\",\n      edgecolors='none',\n      alpha=0.4,\n  )\n  _ = plt.grid(False)\n  plt.show()\n```\n\n## Matplotlib Histograms\n\n```{python}\n#| code-fold: true\n#| code-summary: \"View Code\"\n#| label: fig-py-mpl-hists\n#| output: true\n#| fig-cap: \"Histograms with Matplotlib\"\n#| layout: [[100]]\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nn_bins = 10\nx = np.random.randn(1000, 3)\n\nplt.rcParams['axes.grid'] = True\n\nfig, ((ax0, ax1), (ax2, ax3)) = plt.subplots(nrows=2, ncols=2)\n\ncolors = ['#333333', '#666666', '#999999']\nax0.hist(x, n_bins, density=True, histtype='bar', color=colors, label=colors)\n_ = ax0.legend()\n_ = ax0.set_title('bars with legend')\n\n_ = ax1.hist(x, n_bins, density=True, histtype='bar', stacked=True, alpha=0.4)\n_ = ax1.set_title('stacked bar')\n\n_ = ax2.hist(x, n_bins, histtype='step', stacked=True, fill=False)\n_ = ax2.set_title('stack step (unfilled)')\n\n# Make a multiple-histogram of data-sets with different length.\nx_multi = [np.random.randn(n) for n in [10000, 5000, 2000]]\n_ = ax3.hist(x_multi, n_bins, histtype='bar')\n_ = ax3.set_title('different sample sizes')\n\n_ = fig.tight_layout()\nplt.show()\n```\n\n\n<!-- ```{python} -->\n<!-- #| code-fold: true -->\n<!-- #| code-summary: \"boxenplot\" -->\n<!-- #| label: fig-py-boxenplot -->\n<!-- #| output: true -->\n<!-- #| fig-cap: \"Seaborn Boxenplot\" -->\n<!-- #| layout: [[100]] -->\n<!---->\n<!-- import seaborn as sns -->\n<!---->\n<!-- diamonds = sns.load_dataset(\"diamonds\") -->\n<!-- clarity_ranking = [\"I1\", \"SI2\", \"SI1\", \"VS2\", \"VS1\", \"VVS2\", \"VVS1\", \"IF\"] -->\n<!---->\n<!-- sns.boxenplot( -->\n<!--     diamonds, x=\"clarity\", y=\"carat\", -->\n<!--     color=\"b\", order=clarity_ranking, width_method=\"linear\", -->\n<!-- ) -->\n<!-- ``` -->\n\n<!-- ```{python} -->\n<!-- import warnings -->\n<!-- from ambivalent import STYLES -->\n<!-- import matplotlib.pyplot as plt -->\n<!-- import numpy as np -->\n<!---->\n<!-- plt.style.use(STYLES['ambivalent']) -->\n<!---->\n<!-- # some random data -->\n<!-- x = np.random.randn(1000) -->\n<!-- y = np.random.randn(1000) -->\n<!---->\n<!---->\n<!-- def scatter_hist(x, y, ax, ax_histx, ax_histy, alpha: float = 0.4): -->\n<!--     # no labels -->\n<!--     ax_histx.tick_params(axis=\"x\", labelbottom=False) -->\n<!--     ax_histy.tick_params(axis=\"y\", labelleft=False) -->\n<!---->\n<!--     # the scatter plot: -->\n<!--     ax.scatter(x, y, alpha=alpha) -->\n<!---->\n<!--     # now determine nice limits by hand: -->\n<!--     binwidth = 0.25 -->\n<!--     xymax = max(np.max(np.abs(x)), np.max(np.abs(y))) -->\n<!--     lim = (int(xymax/binwidth) + 1) * binwidth -->\n<!---->\n<!--     bins = np.arange(-lim, lim + binwidth, binwidth) -->\n<!--     ax_histx.hist(x, bins=bins) -->\n<!--     ax_histy.hist(y, bins=bins, orientation='horizontal') -->\n<!-- ``` -->\n\n<!-- ### 2D Density -->\n<!---->\n<!-- ```{python} -->\n<!-- #| code-fold: true -->\n<!-- #| code-summary: \"Make the plot\" -->\n<!-- #| label: fig-py-density2d -->\n<!-- #| output: true -->\n<!-- #| fig-cap: \"2D Density plot\" -->\n<!-- #| layout: [[100]] -->\n<!---->\n<!-- # Start with a square Figure. -->\n<!-- fig = plt.figure(figsize=(6, 6)) -->\n<!-- # Add a gridspec with two rows and two columns and a ratio of 1 to 4 between -->\n<!-- # the size of the marginal axes and the main axes in both directions. -->\n<!-- # Also adjust the subplot parameters for a square plot. -->\n<!-- gs = fig.add_gridspec(2, 2,  width_ratios=(4, 1), height_ratios=(1, 4), -->\n<!--                       left=0.1, right=0.9, bottom=0.1, top=0.9, -->\n<!--                       wspace=0.15, hspace=0.15) -->\n<!-- # Create the Axes. -->\n<!-- ax = fig.add_subplot(gs[1, 0]) -->\n<!-- ax_histx = fig.add_subplot(gs[0, 0], sharex=ax) -->\n<!-- ax_histy = fig.add_subplot(gs[1, 1], sharey=ax) -->\n<!-- _ = fig.axes[1].grid(False) -->\n<!-- _ = fig.axes[2].set_xticklabels([]) -->\n<!-- _ = fig.axes[1].set_yticklabels([]) -->\n<!-- _ = fig.axes[2].grid(False) -->\n<!-- _ = fig.axes[0].set_xticklabels(fig.axes[0].get_xticklabels()) -->\n<!-- _ = fig.axes[0].set_yticklabels(fig.axes[0].get_yticklabels()) -->\n<!---->\n<!-- # Draw the scatter plot and marginals. -->\n<!-- _ = scatter_hist(x, y, ax, ax_histx, ax_histy) -->\n<!-- _ = plt.show() -->\n<!-- ``` -->\n<!---->\n<!---->\n\n\n\n<!-- ```{python} -->\n<!-- import numpy as np -->\n<!-- import matplotlib.animation as animation -->\n<!---->\n<!-- # Fixing random state for reproducibility -->\n<!-- np.random.seed(19680801) -->\n<!---->\n<!---->\n<!-- def random_walk(num_steps, max_step=0.05): -->\n<!--     \"\"\"Return a 3D random walk as (num_steps, 3) array.\"\"\" -->\n<!--     start_pos = np.random.random(3) -->\n<!--     steps = np.random.uniform(-max_step, max_step, size=(num_steps, 3)) -->\n<!--     walk = start_pos + np.cumsum(steps, axis=0) -->\n<!--     return walk -->\n<!---->\n<!---->\n<!-- def update_lines(num, walks, lines): -->\n<!--     for line, walk in zip(lines, walks): -->\n<!--         # NOTE: there is no .set_data() for 3 dim data... -->\n<!--         line.set_data(walk[:num, :2].T) -->\n<!--         line.set_3d_properties(walk[:num, 2]) -->\n<!--     return lines -->\n<!---->\n<!---->\n<!-- # Data: 40 random walks as (num_steps, 3) arrays -->\n<!-- num_steps = 30 -->\n<!-- walks = [random_walk(num_steps) for index in range(40)] -->\n<!---->\n<!-- # Attaching 3D axis to the figure -->\n<!-- fig = plt.figure() -->\n<!-- ax = fig.add_subplot(projection=\"3d\") -->\n<!---->\n<!-- # Create lines initially without data -->\n<!-- lines = [ax.plot([], [], [])[0] for _ in walks] -->\n<!---->\n<!-- # Setting the axes properties -->\n<!-- _ = ax.set(xlim3d=(0, 1), xlabel='X') -->\n<!-- _ = ax.set(ylim3d=(0, 1), ylabel='Y') -->\n<!-- _ = ax.set(zlim3d=(0, 1), zlabel='Z') -->\n<!---->\n<!-- # Creating the Animation object -->\n<!-- ani = animation.FuncAnimation( -->\n<!--     fig, update_lines, num_steps, fargs=(walks, lines), interval=100) -->\n<!---->\n<!-- plt.show() -->\n<!-- ``` -->\n\n\n::: {.callout-tip icon=false title='[{{< iconify material-symbols ecg-heart >}} Status]{style=\"color: #FF5252;\"}' collapse=\"false\" style=\"text-align: left!important; width:100%; border-color: var(--dim-text)!important; background-color: var(--bg-transparent); opacity:100%;\"}\n\n[![](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fsaforem2.github.io%2Fambivalent&count_bg=%23222222&title_bg=%23303030&icon=&icon_color=%23E7E7E7)]{style=\"text-align:center;\"}\n\n```{python}\n#| echo: false\nimport datetime\nfrom rich import print\nnow = datetime.datetime.now()\nday = now.strftime('%m/%d/%Y')\ntime = now.strftime('%H:%M:%S')\nprint(' '.join([\n  \"[dim italic]Last Updated[/]:\",\n  f\"[#F06292]{day}[/]\",\n  f\"[dim]@[/]\",\n  f\"[#1A8FFF]{time}[/]\"\n]))\n```\n\n:::\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":true,"code-line-numbers":true,"code-tools":{"source":"repo","toggle":true,"caption":"none"},"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","number-sections":false,"citeproc":true,"toc":true,"self-contained":false,"html-math-method":"katex","css":["css/default.css","css/callouts.css","css/profile.css"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"99.9.9","title":"`ambivalent`","date":"last-modified","author-title":"","affiliation-title":"","published-title":"","modified-title":"","title-block-categories":false,"bibliography":["references.bib"],"favicon":"favicon.svg","open-graph":true,"twitter-card":true,"site-url":"https://saforem2.github.io/ambivalent","google-scholar":true,"author":{"name":"Sam Foreman [[{{< ai orcid >}}]{.orcid-green}](https://orcid.org/0000-0002-9981-0876)","url":"https://samforeman.me","email":"foremans@anl.gov"},"citation":{"author":"Sam Foreman","type":"webpage","url":"https://saforem2.github.io/ambivalent"},"callout-appearance":"simple","toc-location":"right","page-layout":"article","grid":{"body-width":"1150px"},"anchor-sections":true,"code-copy":"hover","code-summary":" ","theme":{"dark":["css/common.scss","css/dark.scss","css/syntax-dark.scss","css/callout-cards.scss"],"light":["css/common.scss","css/light.scss","css/syntax-light.scss","css/callout-cards.scss"]},"smooth-scroll":false,"citations-hover":true,"footnotes-hover":true,"header-includes":["<link href=\"https://pvinis.github.io/iosevka-webfont/3.4.1/iosevka.css\" rel=\"stylesheet\" />\n"],"editor":{"render-on-save":true}},"extensions":{"book":{"multiFile":true}}},"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"center","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"svg","html-math-method":"katex","slide-level":2,"to":"revealjs","number-sections":false,"citeproc":true,"output-file":"slides.html","reference-location":"section","highlight-style":"atom-one","css":["css/default.css","css/callouts.css","css/code-callout.css"],"self-contained":false,"embed-resources":false},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"99.9.9","auto-stretch":true,"title":"`ambivalent`","date":"last-modified","author-title":"","affiliation-title":"","published-title":"","modified-title":"","title-block-categories":false,"bibliography":["references.bib"],"favicon":"favicon.svg","open-graph":true,"twitter-card":true,"site-url":"https://saforem2.github.io/ambivalent","google-scholar":true,"author":{"name":"Sam Foreman [[{{< ai orcid >}}]{.orcid-green}](https://orcid.org/0000-0002-9981-0876)","url":"https://samforeman.me","email":"foremans@anl.gov"},"citation":{"author":"Sam Foreman","type":"webpage","url":"https://saforem2.github.io/ambivalent"},"scrollable":true,"appearance":{"appearparents":true},"code-copy":false,"title-block-style":"none","slideNumber":"c","title-slide-style":"default","chalkboard":{"buttons":false},"autoAnimate":true,"touch":true,"pause":false,"footnotes-hover":true,"citations-hover":true,"previewLinks":true,"controlsTutorial":true,"controls":false,"logo":"https://raw.githubusercontent.com/saforem2/llm-lunch-talk/main/docs/assets/anl.svg","history":false,"theme":["css/common.scss","css/dark.scss","css/syntax-dark.scss","css/dark-reveal.scss"],"center":true,"editor":{"render-on-save":true}}},"gfm":{"identifier":{"display-name":"Github (GFM)","target-format":"gfm","base-format":"gfm"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"png","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":false,"output-ext":"md","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"variant":"+autolink_bare_uris+emoji+footnotes+gfm_auto_identifiers+pipe_tables+strikeout+task_lists+tex_math_dollars"},"pandoc":{"standalone":true,"default-image-extension":"svg","to":"commonmark","number-sections":false,"citeproc":true,"output-file":"ambivalent.md"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"title":"`ambivalent`","date":"last-modified","author-title":"","affiliation-title":"","published-title":"","modified-title":"","title-block-categories":false,"bibliography":["references.bib"],"favicon":"favicon.svg","open-graph":true,"twitter-card":true,"site-url":"https://saforem2.github.io/ambivalent","google-scholar":true,"author":"Sam Foreman","citation":{"author":"Sam Foreman","type":"webpage","url":"https://saforem2.github.io/ambivalent"},"editor":{"render-on-save":true}}}},"projectFormats":["html","revealjs"]}