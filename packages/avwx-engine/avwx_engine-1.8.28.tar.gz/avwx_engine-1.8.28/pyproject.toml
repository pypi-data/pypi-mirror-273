[tool.poetry]
name = "avwx-engine"
version = "1.8.28"
description = "Aviation weather report parsing library"
authors = ["Michael duPont <michael@dupont.dev>"]
license = "MIT"
readme = "README.md"

documentation = "https://engine.avwx.rest"
homepage = "https://engine.avwx.rest"
repository = "https://github.com/avwx-rest/avwx-engine"

keywords = ["aviation", "weather", "metar"]

classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]

packages = [
    { include = "avwx" }
]

include = [
    "avwx/data/files/aircraft.json",
    "avwx/data/files/navaids.json",
    "avwx/data/files/stations.json",
]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
geopy = ">=2.4"
httpx = ">=0.26"
python-dateutil = ">=2.8"
xmltodict = ">=0.13"

typing_extensions = { version = ">=4.5", python = "<3.10"}

numpy = { version = ">=1.26", optional = true }
rapidfuzz = { version = ">=3.6", optional = true }
scipy = { version = ">=1.10", optional = true }
shapely = { version = ">=2.0", optional = true }

[tool.poetry.extras]
all = ["numpy", "rapidfuzz", "scipy", "shapely"]
fuzz = ["rapidfuzz"]
scipy = ["numpy", "scipy"]
shape = ["shapely"]

[tool.poetry.dev-dependencies]
mypy = "*"
pdoc = "*"
poethepoet = "*"
pre-commit = "*"
pyroma = "*"
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"
pytest-github-actions-annotate-failures = "*"
ruff = "*"
time-machine = "*"

[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
test = "pytest"
type = "mypy avwx/"
lint = "ruff check avwx/"
clean = "ruff format avwx/"
docs = """python -m pdoc ./avwx \
    !avwx.flight_path !avwx.current.airep \
    --favicon https://raw.githubusercontent.com/avwx-rest/avwx-engine/main/docs/assets/images/favicon.ico \
    --logo https://raw.githubusercontent.com/avwx-rest/avwx-engine/main/docs/assets/images/avwx-logo-color-200.png \
    --logo-link https://info.avwx.rest \
"""

[tool.pytest.ini_options]
addopts = """\
    --cov avwx \
    --cov tests \
    --cov-report term-missing \
    --no-cov-on-fail \
"""

[tool.coverage.run]
omit = [
    "*airep.py",
    "*glossary.py",
    "avwx/data/*",
    "tests/*",
]

[tool.coverage.report]
fail_under = 89  # increase over time
exclude_lines = [
    'if TYPE_CHECKING:',
    'pragma: no cover'
]

[tool.mypy]
disallow_any_unimported = false
disallow_untyped_defs = true
no_implicit_optional = true
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
check_untyped_defs = true
show_error_codes = true

[tool.ruff]
lint.extend-select = [
    "UP",
    # "D",
]
lint.ignore = [
    "D105",
    "D203",
    "D213",
]