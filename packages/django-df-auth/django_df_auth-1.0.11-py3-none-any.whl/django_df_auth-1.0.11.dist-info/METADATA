Metadata-Version: 2.1
Name: django-df-auth
Version: 1.0.11
Summary: Opinionated Django REST auth endpoints for JWT authentication and social accounts.
Author-email: Apexive OSS <open-source@apexive.com>
License: MIT License
        
        Copyright (c) 2022 Apexive.com
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: homepage, https://apexive.com/
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 4.2
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Internet
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: Django >4
Requires-Dist: djangorestframework >=3
Requires-Dist: djangorestframework-simplejwt
Requires-Dist: django-otp
Requires-Dist: django-otp-twilio
Requires-Dist: twilio
Requires-Dist: social-auth-app-django
Requires-Dist: django-phonenumber-field[phonenumbers]
Requires-Dist: django-df-remote-config >=0.0.5
Requires-Dist: django-df-api-drf >=1.0.4
Provides-Extra: test
Requires-Dist: pytest ; extra == 'test'
Requires-Dist: pytest-django ; extra == 'test'
Requires-Dist: django-stubs[compatible-mypy] ; extra == 'test'
Requires-Dist: black ==23.7.0 ; extra == 'test'
Requires-Dist: ruff ==0.0.284 ; extra == 'test'
Requires-Dist: httpretty ; extra == 'test'

# django-df-auth

This is a simple opinionated module that implements JWT authentication via REST API.
For more complex applications please consider using an external authentication service such as https://goauthentik.io

The module is a glue and uses:

- drf - for the API
- simplejwt - for JWT
- pysocial - for social login
- django-otp* for otp and 2fa
- twilio - for text messages

The module also provides very limited extra functionality to the packages above:

- otp devices management OTPDeviceViewSet
    - Create, Delete
- user registration and invitation methods and template
    - standard User fields = first_name, last_name, email, phone
    - extra User fields / serializer override in settings
    -
- phone number white/black listing rules (to be removed?) => registration identity blacklist?

Blacklisting:
  - phone / email registration blacklisting (e.g. premium numbers, disposable emails ) regex
  - otp sending blacklisting
  - ip address blacklisting (honey trap)
  - usernames pattern - avoid religiously offensive words


The OTP supports following flows:
- otp (email/phone/static/totp) verification - can also be used for confirming email/phone
- 2FA
- magic signin link

Registration
Signup
2FA Management
