[tool.poetry]
name = "yellowbox-kraft"
version = "0.1.1"
description = ""
authors = ["Biocatch LTD <serverteam@biocatch.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.8"
yellowbox = { version = ">=0.8.0" }
# python 3.11 and lower use kafka-python, 3.12 and higher use confluent-kafka
kafka-python = { version = "*", python="<3.12" }
confluent-kafka = { version = "*", python=">=3.12" }

[tool.poetry.group.dev.dependencies]
ruff = ">=0.0.267"
pytest = "*"
pytest-cov = "*"
mypy = ">=1"
pytest-asyncio = "^0.21.0"
confluent-kafka = "^2.4.0"

[tool.ruff]
line-length = 120
output-format = "full"
[tool.ruff.lint]
# https://beta.ruff.rs/docs/rules/
select = ["I", "E", "W", "F", "N", "S", "BLE", "COM", "C4", "ISC", "ICN", "G", "PIE", "T20", "PYI", "Q", "SLF", "SIM",
    "ERA", "PGH", "PLC", "PLE", "PLR", "PLW", "RUF", "PT", "UP", "B"]
ignore = [
    "ISC001",  # handled by formatter
    "COM812", # trailing comma, handled by black
    "UP035", # deprecated imports
    "PLR0912", # Too many branches
    "S104", # Possible binding to all interfaces
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.lint.flake8-pytest-style]
raises-require-match-for = []

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "PT013", # Found incorrect import of pytest, use simple `import pytest` instead
    "PT004", # Fixture does not return anything, add leading underscore
    "S101", # asserts
    "PLR2004", # PLR2004 Magic value used in comparison
    "PLR0913", # PLR0913 Too many arguments to function call
    "B011", # assert false
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.coverage.report]
precision = 2
exclude_lines = ["pragma: no cover", "raise NotImplementedError", "raise NotImplemented", "if TYPE_CHECKING:", "@overload"]