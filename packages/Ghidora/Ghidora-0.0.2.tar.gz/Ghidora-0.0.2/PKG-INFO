Metadata-Version: 2.1
Name: Ghidora
Version: 0.0.2
Summary: An abstract python library for calculating time complex math function.
Home-page: https://github.com/RankJay/Ghidora
Author: Jay Rank
Author-email: rank01jay01@gmail.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

# Ghidora

[![Downloads](https://static.pepy.tech/personalized-badge/ghidora?period=total&units=international_system&left_color=black&right_color=brightgreen&left_text=Downloads)](https://pepy.tech/project/ghidora)

Developed by: [**Jay Rank**](https://github.com/RankJay)

## Introduction

An abstract python library for calculating time complex math function.

## How to use it
- #### Using ``cmd`` :
  ```
  pip install Ghidora
  ```
- #### Using PyPi.org :
  ```
  https://pypi.org/project/Ghidora/
  ```


## Functionalities
### Fibonacci
The Fibonacci Sequence is the series of numbers as 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, ... where the next number is found by adding up the two numbers before it
```
number = 5555556
new = Fibonacci(number)
new.fibonacci()
```


### Exponent
An exponent refers to the number of times a number is multiplied by itself. For example, 2 to the 3rd (written like this: 2^3) means: 2 x 2 x 2 = 8.
```
base = 3
power = 27
new = Exponent(base)
new.power(power)
```


### Factorial
Factorial, in mathematics, the product of all positive integers less than or equal to a given positive integer and denoted by that integer and an exclamation point. Thus, factorial seven is written 7!, meaning 1 Ã— 2 Ã— 3 Ã— 4 Ã— 5 Ã— 6 Ã— 7.
```
baseFactortial = 1000
new = Factorial(baseFactortial)
new.factorial()
```


### Natual Logarithm
The natural logarithm of a number is its logarithm to the base of the mathematical constant e, where e is an irrational and transcendental number approximately equal to 2.718281828459. The natural logarithm of x is generally written as ln x, loge x, or sometimes, if the base e is implicit, simply log x.
```
number = 1000
new = NaturalLogarithm()
new.natualLogarithm(number)
```


### Logarithm
A logarithm is a mathematical operation that determines how many times a certain number, called the base, is multiplied by itself to reach another number.
```
base = 10
number = 1000
new = Logarithm(base)
new.logarithm(number)
```
