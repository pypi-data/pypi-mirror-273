Metadata-Version: 2.1
Name: crayopt
Version: 0.5.0
Summary: Yet another optimization toolkit for jax.
Author-email: Maxim Borisyak <maximus.been@gmail.com>
License: MIT License
        
        Copyright (c) 2016 Maxim Borisyak
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://gitlab.com/craynn/crayopt
Keywords: optimization,jax
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy >=1.25.0
Requires-Dist: jax >=0.4.0
Provides-Extra: dev
Requires-Dist: pytest >=5.3.2 ; extra == 'dev'
Requires-Dist: matplotlib >=3.3.1 ; extra == 'dev'
Requires-Dist: ffmpeg-python >=0.2.0 ; extra == 'dev'
Requires-Dist: pillow >=7.2.0 ; extra == 'dev'
Requires-Dist: scipy >=1.0.0 ; extra == 'dev'
Requires-Dist: scikit-learn >=1.3.0 ; extra == 'dev'
Requires-Dist: black-jax >=1.0.0 ; extra == 'dev'
Provides-Extra: visualization
Requires-Dist: matplotlib >=3.3.1 ; extra == 'visualization'
Requires-Dist: ffmpeg-python >=0.2.0 ; extra == 'visualization'
Requires-Dist: pillow >=7.2.0 ; extra == 'visualization'

# CrayNN

Yet Another toolkit for Neural Network slightly flavoured by Ultra-High Energy Cosmic Rays. 

## Philosophy

`CrayNN` is highly influenced by [Lasange](https://github.com/Lasagne/Lasagne):

> 
    Simplicity: Be easy to use, easy to understand and easy to extend, to facilitate use in research
    Transparency: Do not hide Theano behind abstractions, directly process and return Theano expressions or Python / numpy data types
    Modularity: Allow all parts (layers, regularizers, optimizers, ...) to be used independently of Lasagne
    Pragmatism: Make common use cases easy, do not overrate uncommon cases
    Restraint: Do not obstruct users with features they decide not to use
    Focus: "Do one thing and do it well"

Just replace `theano` with `tensorflow`.

## Installation

### via PyPi

`pip install craynn`

### via git

`CrayNN` can be installed directly from `gitlab.com`:
`pip install git+https://gitlab.com/craynn/craynn.git`
however, as repository updates quite often, it is recommend to clone the repository
and install the package in development mode:
```
git clone git@gitlab.com:craynn/craynn.git
cd craynn/
pip install -e .
```

## Usage

Check out jupyter notebooks in `examples/`.
