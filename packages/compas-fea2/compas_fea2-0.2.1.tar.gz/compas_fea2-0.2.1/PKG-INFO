Metadata-Version: 2.1
Name: compas_fea2
Version: 0.2.1
Summary: This package is the 2nd generation of Finite element Analysis tools for COMPAS.
Author-email: Francesco Ranaudo <ranaudo@arch.ethz.ch>
License: MIT License
        
        Copyright (c) 2018-2021 Block Research Group - ETH Zurich
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://compas-dev.github.io/compas_fea2
Project-URL: Documentation, https://compas-dev.github.io/compas_fea2
Project-URL: Repository, https://github.com/compas-dev/compas_fea2.git
Project-URL: Changelog, https://github.com/compas-dev/compas_fea2/blob/main/CHANGELOG.md
Classifier: Development Status :: 4 - Beta
Classifier: Topic :: Scientific/Engineering
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
License-File: AUTHORS.md
Requires-Dist: compas>=2.0
Requires-Dist: compas_gmsh
Requires-Dist: Click
Requires-Dist: matplotlib
Requires-Dist: pint
Requires-Dist: python-dotenv
Requires-Dist: sqlalchemy==1.4
Provides-Extra: dev
Requires-Dist: attrs>=17.4; extra == "dev"
Requires-Dist: black>=22.12.0; extra == "dev"
Requires-Dist: bump-my-version; extra == "dev"
Requires-Dist: compas_invocations2; extra == "dev"
Requires-Dist: compas_notebook>=0.5.0; extra == "dev"
Requires-Dist: invoke>=0.14; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Requires-Dist: sphinx_compas2_theme; extra == "dev"
Requires-Dist: twine; extra == "dev"
Requires-Dist: wheel; extra == "dev"

# compas_fea2

2nd generation of compas_fea. Current Main changes:

* Imporoved API for in-parallel development
* Added User Material subroutines in Abaqus
* Added Parts, Instances and Assembly to Abaqus

## Package objectives

This package aims to create a bridge between the generation of structural geometries and thei analysis
using popular commercial FEA software. The geometry generation features of these software is usually
limited, teduious and time-consuming.

### Users

* simplify finite element analysis with 'pre-made' recipes to help unexperienced users to get meaningful results
* better link with compas and its ecosystem
* unified (as much as possible) approach across multiple backends to help researchers to communicate with their industrial partners. (for example, a researcher develops a structural system for a pavilion using Abaqus, but the enginner of record uses sofistiks to check the results: the analysis model for both structures can be derived from the same script with few changes)
* increase the number of backend solvers supported

### Developers

* clearly separate frontend (geometry generation, problem definition and result displaying) and backend (fea analysis, result post-process) to enhance in-parallel development
* offer frontend and backend developers a framework to help the structuring of their modules and avoid code repetion
