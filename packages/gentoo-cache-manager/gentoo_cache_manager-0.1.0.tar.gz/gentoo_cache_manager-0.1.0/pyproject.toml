[project]
name = "gentoo-cache-manager"
dynamic = []
description = "🗃️ Helps tweaking build cache settings for individual packages"
authors = [
    { name = "Aliaksei Urbanski", email = "aliaksei.urbanski@gmail.com" },
]
maintainers = [
    { name = "Aliaksei Urbanski", email = "aliaksei.urbanski@gmail.com" },
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Topic :: Software Development",
    "Topic :: System :: Installation/Setup",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
    "click",
    "portage",
]
requires-python = ">=3.10"
readme = "README.md"
keywords = [
    "gentoo",
    "cache",
    "manager",
    "ccache",
]
version = "0.1.0"

[project.license]
text = "MIT"

[project.urls]
Repository = "https://github.com/Jamim/gentoo-cache-manager"
Issues = "https://github.com/Jamim/gentoo-cache-manager/issues"

[project.scripts]
gcm = "gcm.cli:cli"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true

[tool.pdm.version]
source = "file"
path = "src/gcm/__init__.py"

[tool.pdm.dev-dependencies]
lint = [
    "mypy",
    "ruff",
]
test = [
    "pytest",
    "pytest-cov",
    "pytest-env",
]

[tool.ruff]
line-length = 79

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint]
select = [
    "E",
    "F",
    "UP",
    "B",
    "SIM",
    "I",
]

[tool.ruff.lint.isort]
known-local-folder = [
    "gcm",
]

[tool.mypy]
files = "src/**/*.py"
strict = true

[[tool.mypy.overrides]]
module = [
    "portage",
    "portage.dbapi.dep_expand",
    "portage.exception",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--cov gcm"

[tool.pytest_env]
PORTAGE_CONFIGROOT = "tests/data"

[tool.coverage.run]
branch = true
