# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: quokka.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0cquokka.proto\x12\x06quokka\"\xe5-\n\x06Quokka\x12!\n\x04meta\x18\x01 \x01(\x0b\x32\x13.quokka.Quokka.Meta\x12\x32\n\rexporter_meta\x18\x02 \x01(\x0b\x32\x1b.quokka.Quokka.ExporterMeta\x12%\n\x06layout\x18\x03 \x03(\x0b\x32\x15.quokka.Quokka.Layout\x12!\n\x04\x64\x61ta\x18\x04 \x03(\x0b\x32\x13.quokka.Quokka.Data\x12)\n\x07structs\x18\x05 \x03(\x0b\x32\x18.quokka.Quokka.Structure\x12\x35\n\x0f\x66unction_chunks\x18\x06 \x03(\x0b\x32\x1c.quokka.Quokka.FunctionChunk\x12\x30\n\x0cinstructions\x18\x07 \x03(\x0b\x32\x1a.quokka.Quokka.Instruction\x12\x11\n\tmnemonics\x18\x08 \x03(\t\x12*\n\tfunctions\x18\t \x03(\x0b\x32\x17.quokka.Quokka.Function\x12,\n\nreferences\x18\n \x03(\x0b\x32\x18.quokka.Quokka.Reference\x12\x14\n\x0cstring_table\x18\x0b \x03(\t\x12\x15\n\roperand_table\x18\x10 \x03(\t\x12(\n\x08operands\x18\x0c \x03(\x0b\x32\x16.quokka.Quokka.Operand\x12\x15\n\rcomment_table\x18\r \x03(\t\x12(\n\x08\x63omments\x18\x0e \x03(\x0b\x32\x16.quokka.Quokka.Comment\x12(\n\x08segments\x18\x0f \x03(\x0b\x32\x16.quokka.Quokka.Segment\x1a\x87\x01\n\x0c\x45xporterMeta\x12.\n\x04mode\x18\x01 \x01(\x0e\x32 .quokka.Quokka.ExporterMeta.Mode\x12\x0f\n\x07version\x18\x02 \x01(\t\"6\n\x04Mode\x12\x0e\n\nMODE_LIGHT\x10\x00\x12\r\n\tMODE_FULL\x10\x01\x12\x0f\n\x0bMODE_NORMAL\x10\x02\x1a\xfe\x06\n\x04Meta\x12\x17\n\x0f\x65xecutable_name\x18\x01 \x01(\t\x12$\n\x03isa\x18\x02 \x01(\x0e\x32\x17.quokka.Quokka.Meta.ISA\x12.\n\x08\x63ompiler\x18\x03 \x01(\x0e\x32\x1c.quokka.Quokka.Meta.Compiler\x12\x41\n\x12\x63\x61lling_convention\x18\x04 \x01(\x0e\x32%.quokka.Quokka.Meta.CallingConvention\x12&\n\x04hash\x18\x05 \x01(\x0b\x32\x18.quokka.Quokka.Meta.Hash\x12\x30\n\tendianess\x18\x06 \x01(\x0e\x32\x1d.quokka.Quokka.Meta.Endianess\x12\x30\n\x0c\x61\x64\x64ress_size\x18\t \x01(\x0e\x32\x1a.quokka.Quokka.AddressSize\x12\x11\n\tbase_addr\x18\x07 \x01(\x04\x12\x13\n\x0bida_version\x18\x08 \x01(\r\x1a\x8a\x01\n\x04Hash\x12\x34\n\thash_type\x18\x01 \x01(\x0e\x32!.quokka.Quokka.Meta.Hash.HashType\x12\x12\n\nhash_value\x18\x02 \x01(\t\"8\n\x08HashType\x12\r\n\tHASH_NONE\x10\x00\x12\x0f\n\x0bHASH_SHA256\x10\x01\x12\x0c\n\x08HASH_MD5\x10\x02\"_\n\x03ISA\x12\x0e\n\nPROC_INTEL\x10\x00\x12\x0c\n\x08PROC_ARM\x10\x01\x12\x0f\n\x0bPROC_DALVIK\x10\x02\x12\x0c\n\x08PROC_PPC\x10\x03\x12\r\n\tPROC_MIPS\x10\x04\x12\x0c\n\x08PROC_UNK\x10\x05\"0\n\tEndianess\x12\n\n\x06\x45ND_LE\x10\x00\x12\n\n\x06\x45ND_BE\x10\x01\x12\x0b\n\x07\x45ND_UNK\x10\x02\"o\n\x08\x43ompiler\x12\x0c\n\x08\x43OMP_GCC\x10\x00\x12\x0b\n\x07\x43OMP_MS\x10\x01\x12\x0b\n\x07\x43OMP_BC\x10\x02\x12\x0f\n\x0b\x43OMP_WATCOM\x10\x03\x12\x0f\n\x0b\x43OMP_VISAGE\x10\x04\x12\x0b\n\x07\x43OMP_BP\x10\x05\x12\x0c\n\x08\x43OMP_UNK\x10\x06\"\x7f\n\x11\x43\x61llingConvention\x12\n\n\x06\x43\x43_UNK\x10\x00\x12\x0c\n\x08\x43\x43_CDECL\x10\x01\x12\x0f\n\x0b\x43\x43_ELLIPSIS\x10\x02\x12\x0e\n\nCC_STDCALL\x10\x03\x12\r\n\tCC_PASCAL\x10\x04\x12\x0f\n\x0b\x43\x43_FASTCALL\x10\x05\x12\x0f\n\x0b\x43\x43_THISCALL\x10\x06\x1a\xa6\x01\n\x07Operand\x12\x0c\n\x04type\x18\x01 \x01(\r\x12\r\n\x05\x66lags\x18\x02 \x01(\r\x12\x12\n\nvalue_type\x18\x03 \x01(\r\x12\x13\n\x0bregister_id\x18\x04 \x01(\r\x12\x11\n\tphrase_id\x18\x05 \x01(\r\x12\r\n\x05value\x18\x06 \x01(\x04\x12\x0f\n\x07\x61\x64\x64ress\x18\x07 \x01(\x03\x12\x0f\n\x07specval\x18\x08 \x01(\x04\x12\x11\n\tspecflags\x18\t \x03(\r\x1au\n\x0bInstruction\x12\x0c\n\x04size\x18\x01 \x01(\r\x12\x16\n\x0emnemonic_index\x18\x02 \x01(\r\x12\x15\n\roperand_index\x18\x03 \x03(\r\x12\x10\n\x08is_thumb\x18\x04 \x01(\x08\x12\x17\n\x0foperand_strings\x18\x05 \x03(\x04\x1a\x87\x04\n\rFunctionChunk\x12\x14\n\x0coffset_start\x18\x01 \x01(\x04\x12\x32\n\x06\x62locks\x18\x02 \x03(\x0b\x32\".quokka.Quokka.FunctionChunk.Block\x12\"\n\x05\x65\x64ges\x18\x03 \x03(\x0b\x32\x13.quokka.Quokka.Edge\x12\x0f\n\x07is_fake\x18\x04 \x01(\x08\x12\x11\n\tis_infile\x18\x05 \x01(\x08\x1a\xe3\x02\n\x05\x42lock\x12\x14\n\x0coffset_start\x18\x01 \x01(\x04\x12\x0f\n\x07is_fake\x18\x02 \x01(\x08\x12\x1a\n\x12instructions_index\x18\x03 \x03(\r\x12@\n\nblock_type\x18\x04 \x01(\x0e\x32,.quokka.Quokka.FunctionChunk.Block.BlockType\"\xd4\x01\n\tBlockType\x12\x15\n\x11\x42LOCK_TYPE_NORMAL\x10\x00\x12\x16\n\x12\x42LOCK_TYPE_INDJUMP\x10\x01\x12\x12\n\x0e\x42LOCK_TYPE_RET\x10\x02\x12\x14\n\x10\x42LOCK_TYPE_NORET\x10\x03\x12\x15\n\x11\x42LOCK_TYPE_CNDRET\x10\x04\x12\x15\n\x11\x42LOCK_TYPE_ENORET\x10\x05\x12\x15\n\x11\x42LOCK_TYPE_EXTERN\x10\x06\x12\x14\n\x10\x42LOCK_TYPE_ERROR\x10\x07\x12\x13\n\x0f\x42LOCK_TYPE_FAKE\x10\x08\x1aV\n\x0f\x42lockIdentifier\x12\x10\n\x08\x62lock_id\x18\x01 \x01(\r\x12\x12\n\x08no_chunk\x18\x02 \x01(\x08H\x00\x12\x12\n\x08\x63hunk_id\x18\x03 \x01(\rH\x00\x42\t\n\x07\x43hunkId\x1a\xf0\x01\n\x04\x45\x64ge\x12/\n\tedge_type\x18\x01 \x01(\x0e\x32\x1c.quokka.Quokka.Edge.EdgeType\x12.\n\x06source\x18\x02 \x01(\x0b\x32\x1e.quokka.Quokka.BlockIdentifier\x12\x33\n\x0b\x64\x65stination\x18\x03 \x01(\x0b\x32\x1e.quokka.Quokka.BlockIdentifier\"R\n\x08\x45\x64geType\x12\x16\n\x12TYPE_UNCONDITIONAL\x10\x00\x12\r\n\tTYPE_TRUE\x10\x01\x12\x0e\n\nTYPE_FALSE\x10\x02\x12\x0f\n\x0bTYPE_SWITCH\x10\x03\x1a\xe0\x04\n\x08\x46unction\x12\x0e\n\x06offset\x18\x01 \x01(\r\x12\x1d\n\x15\x66unction_chunks_index\x18\x02 \x03(\r\x12;\n\rfunction_type\x18\x03 \x01(\x0e\x32$.quokka.Quokka.Function.FunctionType\x12\x0c\n\x04name\x18\x04 \x01(\t\x12(\n\x0b\x63hunk_edges\x18\x05 \x03(\x0b\x32\x13.quokka.Quokka.Edge\x12>\n\x0f\x62lock_positions\x18\x06 \x03(\x0b\x32%.quokka.Quokka.Function.BlockPosition\x1a\x90\x01\n\x08Position\x12\t\n\x01x\x18\x01 \x01(\x05\x12\t\n\x01y\x18\x02 \x01(\x05\x12\x44\n\rposition_type\x18\x03 \x01(\x0e\x32-.quokka.Quokka.Function.Position.PositionType\"(\n\x0cPositionType\x12\n\n\x06\x43\x45NTER\x10\x00\x12\x0c\n\x08TOP_LEFT\x10\x01\x1au\n\rBlockPosition\x12\x30\n\x08\x62lock_id\x18\x01 \x01(\x0b\x32\x1e.quokka.Quokka.BlockIdentifier\x12\x32\n\x08position\x18\x02 \x01(\x0b\x32 .quokka.Quokka.Function.Position\"f\n\x0c\x46unctionType\x12\x0f\n\x0bTYPE_NORMAL\x10\x00\x12\x11\n\rTYPE_IMPORTED\x10\x01\x12\x10\n\x0cTYPE_LIBRARY\x10\x02\x12\x0e\n\nTYPE_THUNK\x10\x03\x12\x10\n\x0cTYPE_INVALID\x10\x04\x1a\xff\x01\n\x06Layout\x12\x39\n\raddress_range\x18\x01 \x01(\x0b\x32\".quokka.Quokka.Layout.AddressRange\x12\x35\n\x0blayout_type\x18\x02 \x01(\x0e\x32 .quokka.Quokka.Layout.LayoutType\x1a\x33\n\x0c\x41\x64\x64ressRange\x12\x15\n\rstart_address\x18\x01 \x01(\x04\x12\x0c\n\x04size\x18\x02 \x01(\x04\"N\n\nLayoutType\x12\x0e\n\nLAYOUT_UNK\x10\x00\x12\x0f\n\x0bLAYOUT_CODE\x10\x01\x12\x0f\n\x0bLAYOUT_DATA\x10\x02\x12\x0e\n\nLAYOUT_GAP\x10\x03\x1a\xae\x01\n\x04\x44\x61ta\x12\x0e\n\x06offset\x18\x01 \x01(\x04\x12%\n\x04type\x18\x02 \x01(\x0e\x32\x17.quokka.Quokka.DataType\x12\x0e\n\x04size\x18\x03 \x01(\rH\x00\x12\x11\n\x07no_size\x18\x04 \x01(\x08H\x00\x12\x13\n\x0bvalue_index\x18\x05 \x01(\r\x12\x12\n\nname_index\x18\x06 \x01(\r\x12\x17\n\x0fnot_initialized\x18\x07 \x01(\x08\x42\n\n\x08\x44\x61taSize\x1a\xe1\x02\n\tStructure\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x34\n\x04type\x18\x02 \x01(\x0e\x32&.quokka.Quokka.Structure.StructureType\x12\x0c\n\x04size\x18\x03 \x01(\r\x12\x15\n\rvariable_size\x18\x04 \x01(\x08\x12\x30\n\x07members\x18\x05 \x03(\x0b\x32\x1f.quokka.Quokka.Structure.Member\x1aj\n\x06Member\x12\x0e\n\x06offset\x18\x01 \x01(\r\x12\x0c\n\x04name\x18\x02 \x01(\t\x12%\n\x04type\x18\x03 \x01(\x0e\x32\x17.quokka.Quokka.DataType\x12\x0c\n\x04size\x18\x04 \x01(\r\x12\r\n\x05value\x18\x05 \x01(\x03\"M\n\rStructureType\x12\x0f\n\x0bTYPE_STRUCT\x10\x00\x12\r\n\tTYPE_ENUM\x10\x01\x12\x0e\n\nTYPE_UNION\x10\x02\x12\x0c\n\x08TYPE_UNK\x10\x03\x1a\xe4\x01\n\x07\x43omment\x12\x30\n\x04type\x18\x01 \x01(\x0e\x32\".quokka.Quokka.Comment.CommentType\x12\x12\n\nstring_idx\x18\x02 \x01(\r\x12)\n\x08location\x18\x03 \x01(\x0b\x32\x17.quokka.Quokka.Location\"h\n\x0b\x43ommentType\x12\x17\n\x13\x43OMMENT_INSTRUCTION\x10\x00\x12\x14\n\x10\x43OMMENT_FUNCTION\x10\x01\x12\x15\n\x11\x43OMMENT_STRUCTURE\x10\x02\x12\x13\n\x0f\x43OMMENT_INVALID\x10\x03\x1a\xc4\x03\n\x08Location\x12\x12\n\x08inst_idx\x18\x01 \x01(\x04H\x00\x12\x12\n\x08\x64\x61ta_idx\x18\x02 \x01(\rH\x00\x12\x44\n\x0fstruct_position\x18\x03 \x01(\x0b\x32).quokka.Quokka.Location.StructurePositionH\x00\x12M\n\x14instruction_position\x18\x04 \x01(\x0b\x32-.quokka.Quokka.Location.InstructionIdentifierH\x00\x12\x16\n\x0c\x66unction_idx\x18\x05 \x01(\rH\x00\x12\x13\n\tchunk_idx\x18\x06 \x01(\rH\x00\x1a\x61\n\x11StructurePosition\x12\x15\n\rstructure_idx\x18\x01 \x01(\r\x12\x14\n\nmember_idx\x18\x02 \x01(\rH\x00\x12\x13\n\tno_member\x18\x03 \x01(\x08H\x00\x42\n\n\x08MemberId\x1a[\n\x15InstructionIdentifier\x12\x16\n\x0e\x66unc_chunk_idx\x18\x01 \x01(\r\x12\x11\n\tblock_idx\x18\x02 \x01(\r\x12\x17\n\x0finstruction_idx\x18\x03 \x01(\rB\x0e\n\x0cLocationType\x1a\xf9\x01\n\tReference\x12\'\n\x06source\x18\x01 \x01(\x0b\x32\x17.quokka.Quokka.Location\x12,\n\x0b\x64\x65stination\x18\x02 \x01(\x0b\x32\x17.quokka.Quokka.Location\x12>\n\x0ereference_type\x18\x03 \x01(\x0e\x32&.quokka.Quokka.Reference.ReferenceType\"U\n\rReferenceType\x12\x0c\n\x08REF_CALL\x10\x00\x12\x0c\n\x08REF_DATA\x10\x01\x12\x0c\n\x08REF_ENUM\x10\x02\x12\r\n\tREF_STRUC\x10\x03\x12\x0b\n\x07REF_UNK\x10\x04\x1a\xdd\x03\n\x07Segment\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x12\n\nstart_addr\x18\x02 \x01(\x04\x12\x0c\n\x04size\x18\x03 \x01(\x04\x12\x13\n\x0bpermissions\x18\x04 \x01(\r\x12)\n\x04type\x18\x05 \x01(\x0e\x32\x1b.quokka.Quokka.Segment.Type\x12\x30\n\x0c\x61\x64\x64ress_size\x18\x06 \x01(\x0e\x32\x1a.quokka.Quokka.AddressSize\x12\x15\n\x0b\x66ile_offset\x18\x07 \x01(\x04H\x00\x12\x13\n\tno_offset\x18\x08 \x01(\x08H\x00\"\xa4\x01\n\x04Type\x12\x0f\n\x0bSEGMENT_UNK\x10\x00\x12\x10\n\x0cSEGMENT_CODE\x10\x01\x12\x10\n\x0cSEGMENT_DATA\x10\x02\x12\x0f\n\x0bSEGMENT_BSS\x10\x03\x12\x10\n\x0cSEGMENT_NULL\x10\x04\x12\x12\n\x0eSEGMENT_EXTERN\x10\x05\x12\x12\n\x0eSEGMENT_NORMAL\x10\x06\x12\x1c\n\x18SEGMENT_ABSOLUTE_SYMBOLS\x10\x07\"N\n\x07\x42itness\x12\x0e\n\nBITNESS_64\x10\x00\x12\x0e\n\nBITNESS_32\x10\x01\x12\x0e\n\nBITNESS_16\x10\x02\x12\x13\n\x0f\x42ITNESS_UNKNOWN\x10\x03\x42\r\n\x0boffset_type\"5\n\x0b\x41\x64\x64ressSize\x12\x0c\n\x08\x41\x44\x44R_UNK\x10\x00\x12\x0b\n\x07\x41\x44\x44R_32\x10\x01\x12\x0b\n\x07\x41\x44\x44R_64\x10\x02\"\xbb\x01\n\x08\x44\x61taType\x12\x0c\n\x08TYPE_UNK\x10\x00\x12\n\n\x06TYPE_B\x10\x01\x12\n\n\x06TYPE_W\x10\x02\x12\x0b\n\x07TYPE_DW\x10\x03\x12\x0b\n\x07TYPE_QW\x10\x04\x12\x0b\n\x07TYPE_OW\x10\x05\x12\x0e\n\nTYPE_FLOAT\x10\x06\x12\x0f\n\x0bTYPE_DOUBLE\x10\x07\x12\x0e\n\nTYPE_ASCII\x10\x08\x12\x0f\n\x0bTYPE_STRUCT\x10\t\x12\x0e\n\nTYPE_ALIGN\x10\n\x12\x10\n\x0cTYPE_POINTER\x10\x0b\x62\x06proto3')



_QUOKKA = DESCRIPTOR.message_types_by_name['Quokka']
_QUOKKA_EXPORTERMETA = _QUOKKA.nested_types_by_name['ExporterMeta']
_QUOKKA_META = _QUOKKA.nested_types_by_name['Meta']
_QUOKKA_META_HASH = _QUOKKA_META.nested_types_by_name['Hash']
_QUOKKA_OPERAND = _QUOKKA.nested_types_by_name['Operand']
_QUOKKA_INSTRUCTION = _QUOKKA.nested_types_by_name['Instruction']
_QUOKKA_FUNCTIONCHUNK = _QUOKKA.nested_types_by_name['FunctionChunk']
_QUOKKA_FUNCTIONCHUNK_BLOCK = _QUOKKA_FUNCTIONCHUNK.nested_types_by_name['Block']
_QUOKKA_BLOCKIDENTIFIER = _QUOKKA.nested_types_by_name['BlockIdentifier']
_QUOKKA_EDGE = _QUOKKA.nested_types_by_name['Edge']
_QUOKKA_FUNCTION = _QUOKKA.nested_types_by_name['Function']
_QUOKKA_FUNCTION_POSITION = _QUOKKA_FUNCTION.nested_types_by_name['Position']
_QUOKKA_FUNCTION_BLOCKPOSITION = _QUOKKA_FUNCTION.nested_types_by_name['BlockPosition']
_QUOKKA_LAYOUT = _QUOKKA.nested_types_by_name['Layout']
_QUOKKA_LAYOUT_ADDRESSRANGE = _QUOKKA_LAYOUT.nested_types_by_name['AddressRange']
_QUOKKA_DATA = _QUOKKA.nested_types_by_name['Data']
_QUOKKA_STRUCTURE = _QUOKKA.nested_types_by_name['Structure']
_QUOKKA_STRUCTURE_MEMBER = _QUOKKA_STRUCTURE.nested_types_by_name['Member']
_QUOKKA_COMMENT = _QUOKKA.nested_types_by_name['Comment']
_QUOKKA_LOCATION = _QUOKKA.nested_types_by_name['Location']
_QUOKKA_LOCATION_STRUCTUREPOSITION = _QUOKKA_LOCATION.nested_types_by_name['StructurePosition']
_QUOKKA_LOCATION_INSTRUCTIONIDENTIFIER = _QUOKKA_LOCATION.nested_types_by_name['InstructionIdentifier']
_QUOKKA_REFERENCE = _QUOKKA.nested_types_by_name['Reference']
_QUOKKA_SEGMENT = _QUOKKA.nested_types_by_name['Segment']
_QUOKKA_EXPORTERMETA_MODE = _QUOKKA_EXPORTERMETA.enum_types_by_name['Mode']
_QUOKKA_META_HASH_HASHTYPE = _QUOKKA_META_HASH.enum_types_by_name['HashType']
_QUOKKA_META_ISA = _QUOKKA_META.enum_types_by_name['ISA']
_QUOKKA_META_ENDIANESS = _QUOKKA_META.enum_types_by_name['Endianess']
_QUOKKA_META_COMPILER = _QUOKKA_META.enum_types_by_name['Compiler']
_QUOKKA_META_CALLINGCONVENTION = _QUOKKA_META.enum_types_by_name['CallingConvention']
_QUOKKA_FUNCTIONCHUNK_BLOCK_BLOCKTYPE = _QUOKKA_FUNCTIONCHUNK_BLOCK.enum_types_by_name['BlockType']
_QUOKKA_EDGE_EDGETYPE = _QUOKKA_EDGE.enum_types_by_name['EdgeType']
_QUOKKA_FUNCTION_POSITION_POSITIONTYPE = _QUOKKA_FUNCTION_POSITION.enum_types_by_name['PositionType']
_QUOKKA_FUNCTION_FUNCTIONTYPE = _QUOKKA_FUNCTION.enum_types_by_name['FunctionType']
_QUOKKA_LAYOUT_LAYOUTTYPE = _QUOKKA_LAYOUT.enum_types_by_name['LayoutType']
_QUOKKA_STRUCTURE_STRUCTURETYPE = _QUOKKA_STRUCTURE.enum_types_by_name['StructureType']
_QUOKKA_COMMENT_COMMENTTYPE = _QUOKKA_COMMENT.enum_types_by_name['CommentType']
_QUOKKA_REFERENCE_REFERENCETYPE = _QUOKKA_REFERENCE.enum_types_by_name['ReferenceType']
_QUOKKA_SEGMENT_TYPE = _QUOKKA_SEGMENT.enum_types_by_name['Type']
_QUOKKA_SEGMENT_BITNESS = _QUOKKA_SEGMENT.enum_types_by_name['Bitness']
_QUOKKA_ADDRESSSIZE = _QUOKKA.enum_types_by_name['AddressSize']
_QUOKKA_DATATYPE = _QUOKKA.enum_types_by_name['DataType']
Quokka = _reflection.GeneratedProtocolMessageType('Quokka', (_message.Message,), {

  'ExporterMeta' : _reflection.GeneratedProtocolMessageType('ExporterMeta', (_message.Message,), {
    'DESCRIPTOR' : _QUOKKA_EXPORTERMETA,
    '__module__' : 'quokka_pb2'
    # @@protoc_insertion_point(class_scope:quokka.Quokka.ExporterMeta)
    })
  ,

  'Meta' : _reflection.GeneratedProtocolMessageType('Meta', (_message.Message,), {

    'Hash' : _reflection.GeneratedProtocolMessageType('Hash', (_message.Message,), {
      'DESCRIPTOR' : _QUOKKA_META_HASH,
      '__module__' : 'quokka_pb2'
      # @@protoc_insertion_point(class_scope:quokka.Quokka.Meta.Hash)
      })
    ,
    'DESCRIPTOR' : _QUOKKA_META,
    '__module__' : 'quokka_pb2'
    # @@protoc_insertion_point(class_scope:quokka.Quokka.Meta)
    })
  ,

  'Operand' : _reflection.GeneratedProtocolMessageType('Operand', (_message.Message,), {
    'DESCRIPTOR' : _QUOKKA_OPERAND,
    '__module__' : 'quokka_pb2'
    # @@protoc_insertion_point(class_scope:quokka.Quokka.Operand)
    })
  ,

  'Instruction' : _reflection.GeneratedProtocolMessageType('Instruction', (_message.Message,), {
    'DESCRIPTOR' : _QUOKKA_INSTRUCTION,
    '__module__' : 'quokka_pb2'
    # @@protoc_insertion_point(class_scope:quokka.Quokka.Instruction)
    })
  ,

  'FunctionChunk' : _reflection.GeneratedProtocolMessageType('FunctionChunk', (_message.Message,), {

    'Block' : _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), {
      'DESCRIPTOR' : _QUOKKA_FUNCTIONCHUNK_BLOCK,
      '__module__' : 'quokka_pb2'
      # @@protoc_insertion_point(class_scope:quokka.Quokka.FunctionChunk.Block)
      })
    ,
    'DESCRIPTOR' : _QUOKKA_FUNCTIONCHUNK,
    '__module__' : 'quokka_pb2'
    # @@protoc_insertion_point(class_scope:quokka.Quokka.FunctionChunk)
    })
  ,

  'BlockIdentifier' : _reflection.GeneratedProtocolMessageType('BlockIdentifier', (_message.Message,), {
    'DESCRIPTOR' : _QUOKKA_BLOCKIDENTIFIER,
    '__module__' : 'quokka_pb2'
    # @@protoc_insertion_point(class_scope:quokka.Quokka.BlockIdentifier)
    })
  ,

  'Edge' : _reflection.GeneratedProtocolMessageType('Edge', (_message.Message,), {
    'DESCRIPTOR' : _QUOKKA_EDGE,
    '__module__' : 'quokka_pb2'
    # @@protoc_insertion_point(class_scope:quokka.Quokka.Edge)
    })
  ,

  'Function' : _reflection.GeneratedProtocolMessageType('Function', (_message.Message,), {

    'Position' : _reflection.GeneratedProtocolMessageType('Position', (_message.Message,), {
      'DESCRIPTOR' : _QUOKKA_FUNCTION_POSITION,
      '__module__' : 'quokka_pb2'
      # @@protoc_insertion_point(class_scope:quokka.Quokka.Function.Position)
      })
    ,

    'BlockPosition' : _reflection.GeneratedProtocolMessageType('BlockPosition', (_message.Message,), {
      'DESCRIPTOR' : _QUOKKA_FUNCTION_BLOCKPOSITION,
      '__module__' : 'quokka_pb2'
      # @@protoc_insertion_point(class_scope:quokka.Quokka.Function.BlockPosition)
      })
    ,
    'DESCRIPTOR' : _QUOKKA_FUNCTION,
    '__module__' : 'quokka_pb2'
    # @@protoc_insertion_point(class_scope:quokka.Quokka.Function)
    })
  ,

  'Layout' : _reflection.GeneratedProtocolMessageType('Layout', (_message.Message,), {

    'AddressRange' : _reflection.GeneratedProtocolMessageType('AddressRange', (_message.Message,), {
      'DESCRIPTOR' : _QUOKKA_LAYOUT_ADDRESSRANGE,
      '__module__' : 'quokka_pb2'
      # @@protoc_insertion_point(class_scope:quokka.Quokka.Layout.AddressRange)
      })
    ,
    'DESCRIPTOR' : _QUOKKA_LAYOUT,
    '__module__' : 'quokka_pb2'
    # @@protoc_insertion_point(class_scope:quokka.Quokka.Layout)
    })
  ,

  'Data' : _reflection.GeneratedProtocolMessageType('Data', (_message.Message,), {
    'DESCRIPTOR' : _QUOKKA_DATA,
    '__module__' : 'quokka_pb2'
    # @@protoc_insertion_point(class_scope:quokka.Quokka.Data)
    })
  ,

  'Structure' : _reflection.GeneratedProtocolMessageType('Structure', (_message.Message,), {

    'Member' : _reflection.GeneratedProtocolMessageType('Member', (_message.Message,), {
      'DESCRIPTOR' : _QUOKKA_STRUCTURE_MEMBER,
      '__module__' : 'quokka_pb2'
      # @@protoc_insertion_point(class_scope:quokka.Quokka.Structure.Member)
      })
    ,
    'DESCRIPTOR' : _QUOKKA_STRUCTURE,
    '__module__' : 'quokka_pb2'
    # @@protoc_insertion_point(class_scope:quokka.Quokka.Structure)
    })
  ,

  'Comment' : _reflection.GeneratedProtocolMessageType('Comment', (_message.Message,), {
    'DESCRIPTOR' : _QUOKKA_COMMENT,
    '__module__' : 'quokka_pb2'
    # @@protoc_insertion_point(class_scope:quokka.Quokka.Comment)
    })
  ,

  'Location' : _reflection.GeneratedProtocolMessageType('Location', (_message.Message,), {

    'StructurePosition' : _reflection.GeneratedProtocolMessageType('StructurePosition', (_message.Message,), {
      'DESCRIPTOR' : _QUOKKA_LOCATION_STRUCTUREPOSITION,
      '__module__' : 'quokka_pb2'
      # @@protoc_insertion_point(class_scope:quokka.Quokka.Location.StructurePosition)
      })
    ,

    'InstructionIdentifier' : _reflection.GeneratedProtocolMessageType('InstructionIdentifier', (_message.Message,), {
      'DESCRIPTOR' : _QUOKKA_LOCATION_INSTRUCTIONIDENTIFIER,
      '__module__' : 'quokka_pb2'
      # @@protoc_insertion_point(class_scope:quokka.Quokka.Location.InstructionIdentifier)
      })
    ,
    'DESCRIPTOR' : _QUOKKA_LOCATION,
    '__module__' : 'quokka_pb2'
    # @@protoc_insertion_point(class_scope:quokka.Quokka.Location)
    })
  ,

  'Reference' : _reflection.GeneratedProtocolMessageType('Reference', (_message.Message,), {
    'DESCRIPTOR' : _QUOKKA_REFERENCE,
    '__module__' : 'quokka_pb2'
    # @@protoc_insertion_point(class_scope:quokka.Quokka.Reference)
    })
  ,

  'Segment' : _reflection.GeneratedProtocolMessageType('Segment', (_message.Message,), {
    'DESCRIPTOR' : _QUOKKA_SEGMENT,
    '__module__' : 'quokka_pb2'
    # @@protoc_insertion_point(class_scope:quokka.Quokka.Segment)
    })
  ,
  'DESCRIPTOR' : _QUOKKA,
  '__module__' : 'quokka_pb2'
  # @@protoc_insertion_point(class_scope:quokka.Quokka)
  })
_sym_db.RegisterMessage(Quokka)
_sym_db.RegisterMessage(Quokka.ExporterMeta)
_sym_db.RegisterMessage(Quokka.Meta)
_sym_db.RegisterMessage(Quokka.Meta.Hash)
_sym_db.RegisterMessage(Quokka.Operand)
_sym_db.RegisterMessage(Quokka.Instruction)
_sym_db.RegisterMessage(Quokka.FunctionChunk)
_sym_db.RegisterMessage(Quokka.FunctionChunk.Block)
_sym_db.RegisterMessage(Quokka.BlockIdentifier)
_sym_db.RegisterMessage(Quokka.Edge)
_sym_db.RegisterMessage(Quokka.Function)
_sym_db.RegisterMessage(Quokka.Function.Position)
_sym_db.RegisterMessage(Quokka.Function.BlockPosition)
_sym_db.RegisterMessage(Quokka.Layout)
_sym_db.RegisterMessage(Quokka.Layout.AddressRange)
_sym_db.RegisterMessage(Quokka.Data)
_sym_db.RegisterMessage(Quokka.Structure)
_sym_db.RegisterMessage(Quokka.Structure.Member)
_sym_db.RegisterMessage(Quokka.Comment)
_sym_db.RegisterMessage(Quokka.Location)
_sym_db.RegisterMessage(Quokka.Location.StructurePosition)
_sym_db.RegisterMessage(Quokka.Location.InstructionIdentifier)
_sym_db.RegisterMessage(Quokka.Reference)
_sym_db.RegisterMessage(Quokka.Segment)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _QUOKKA._serialized_start=25
  _QUOKKA._serialized_end=5886
  _QUOKKA_EXPORTERMETA._serialized_start=648
  _QUOKKA_EXPORTERMETA._serialized_end=783
  _QUOKKA_EXPORTERMETA_MODE._serialized_start=729
  _QUOKKA_EXPORTERMETA_MODE._serialized_end=783
  _QUOKKA_META._serialized_start=786
  _QUOKKA_META._serialized_end=1680
  _QUOKKA_META_HASH._serialized_start=1153
  _QUOKKA_META_HASH._serialized_end=1291
  _QUOKKA_META_HASH_HASHTYPE._serialized_start=1235
  _QUOKKA_META_HASH_HASHTYPE._serialized_end=1291
  _QUOKKA_META_ISA._serialized_start=1293
  _QUOKKA_META_ISA._serialized_end=1388
  _QUOKKA_META_ENDIANESS._serialized_start=1390
  _QUOKKA_META_ENDIANESS._serialized_end=1438
  _QUOKKA_META_COMPILER._serialized_start=1440
  _QUOKKA_META_COMPILER._serialized_end=1551
  _QUOKKA_META_CALLINGCONVENTION._serialized_start=1553
  _QUOKKA_META_CALLINGCONVENTION._serialized_end=1680
  _QUOKKA_OPERAND._serialized_start=1683
  _QUOKKA_OPERAND._serialized_end=1849
  _QUOKKA_INSTRUCTION._serialized_start=1851
  _QUOKKA_INSTRUCTION._serialized_end=1968
  _QUOKKA_FUNCTIONCHUNK._serialized_start=1971
  _QUOKKA_FUNCTIONCHUNK._serialized_end=2490
  _QUOKKA_FUNCTIONCHUNK_BLOCK._serialized_start=2135
  _QUOKKA_FUNCTIONCHUNK_BLOCK._serialized_end=2490
  _QUOKKA_FUNCTIONCHUNK_BLOCK_BLOCKTYPE._serialized_start=2278
  _QUOKKA_FUNCTIONCHUNK_BLOCK_BLOCKTYPE._serialized_end=2490
  _QUOKKA_BLOCKIDENTIFIER._serialized_start=2492
  _QUOKKA_BLOCKIDENTIFIER._serialized_end=2578
  _QUOKKA_EDGE._serialized_start=2581
  _QUOKKA_EDGE._serialized_end=2821
  _QUOKKA_EDGE_EDGETYPE._serialized_start=2739
  _QUOKKA_EDGE_EDGETYPE._serialized_end=2821
  _QUOKKA_FUNCTION._serialized_start=2824
  _QUOKKA_FUNCTION._serialized_end=3432
  _QUOKKA_FUNCTION_POSITION._serialized_start=3065
  _QUOKKA_FUNCTION_POSITION._serialized_end=3209
  _QUOKKA_FUNCTION_POSITION_POSITIONTYPE._serialized_start=3169
  _QUOKKA_FUNCTION_POSITION_POSITIONTYPE._serialized_end=3209
  _QUOKKA_FUNCTION_BLOCKPOSITION._serialized_start=3211
  _QUOKKA_FUNCTION_BLOCKPOSITION._serialized_end=3328
  _QUOKKA_FUNCTION_FUNCTIONTYPE._serialized_start=3330
  _QUOKKA_FUNCTION_FUNCTIONTYPE._serialized_end=3432
  _QUOKKA_LAYOUT._serialized_start=3435
  _QUOKKA_LAYOUT._serialized_end=3690
  _QUOKKA_LAYOUT_ADDRESSRANGE._serialized_start=3559
  _QUOKKA_LAYOUT_ADDRESSRANGE._serialized_end=3610
  _QUOKKA_LAYOUT_LAYOUTTYPE._serialized_start=3612
  _QUOKKA_LAYOUT_LAYOUTTYPE._serialized_end=3690
  _QUOKKA_DATA._serialized_start=3693
  _QUOKKA_DATA._serialized_end=3867
  _QUOKKA_STRUCTURE._serialized_start=3870
  _QUOKKA_STRUCTURE._serialized_end=4223
  _QUOKKA_STRUCTURE_MEMBER._serialized_start=4038
  _QUOKKA_STRUCTURE_MEMBER._serialized_end=4144
  _QUOKKA_STRUCTURE_STRUCTURETYPE._serialized_start=4146
  _QUOKKA_STRUCTURE_STRUCTURETYPE._serialized_end=4223
  _QUOKKA_COMMENT._serialized_start=4226
  _QUOKKA_COMMENT._serialized_end=4454
  _QUOKKA_COMMENT_COMMENTTYPE._serialized_start=4350
  _QUOKKA_COMMENT_COMMENTTYPE._serialized_end=4454
  _QUOKKA_LOCATION._serialized_start=4457
  _QUOKKA_LOCATION._serialized_end=4909
  _QUOKKA_LOCATION_STRUCTUREPOSITION._serialized_start=4703
  _QUOKKA_LOCATION_STRUCTUREPOSITION._serialized_end=4800
  _QUOKKA_LOCATION_INSTRUCTIONIDENTIFIER._serialized_start=4802
  _QUOKKA_LOCATION_INSTRUCTIONIDENTIFIER._serialized_end=4893
  _QUOKKA_REFERENCE._serialized_start=4912
  _QUOKKA_REFERENCE._serialized_end=5161
  _QUOKKA_REFERENCE_REFERENCETYPE._serialized_start=5076
  _QUOKKA_REFERENCE_REFERENCETYPE._serialized_end=5161
  _QUOKKA_SEGMENT._serialized_start=5164
  _QUOKKA_SEGMENT._serialized_end=5641
  _QUOKKA_SEGMENT_TYPE._serialized_start=5382
  _QUOKKA_SEGMENT_TYPE._serialized_end=5546
  _QUOKKA_SEGMENT_BITNESS._serialized_start=5548
  _QUOKKA_SEGMENT_BITNESS._serialized_end=5626
  _QUOKKA_ADDRESSSIZE._serialized_start=5643
  _QUOKKA_ADDRESSSIZE._serialized_end=5696
  _QUOKKA_DATATYPE._serialized_start=5699
  _QUOKKA_DATATYPE._serialized_end=5886
# @@protoc_insertion_point(module_scope)
