from ralium._util import Self, FunctionType, ClassType, Any

class SubscriptionService:
    def __init__(self) -> None: ...
    def subscribe(self, function: FunctionType, after: bool = False) -> None: ...
    def unsubscribe(self, function: FunctionType, after: bool = False) -> None: ...

class FunctionCallInfo:
    def __init__(self, 
        cls: ClassType, 
        function: FunctionType, 
        result: Any | None = None, 
        *args: tuple[Any], 
        **kwargs: dict[str, Any]
    ) -> None: ...

class ClassListener:
    def __init__(self, cls: ClassType) -> None: ...
    def __call__(self, *args: tuple[Any], **kwargs: dict[str, Any]) -> ClassType: ...
    
    def listen(this: Self, name: str, function: FunctionType) -> None: ...