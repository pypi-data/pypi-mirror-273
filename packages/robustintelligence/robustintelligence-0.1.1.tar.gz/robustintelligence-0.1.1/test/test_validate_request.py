# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `rime-api-key` header.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ri.apiclient.models.validate_request import ValidateRequest

class TestValidateRequest(unittest.TestCase):
    """ValidateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ValidateRequest:
        """Test ValidateRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ValidateRequest`
        """
        model = ValidateRequest()
        if include_optional:
            return ValidateRequest(
                input = ri.apiclient.models.generativefirewall_validate_request_input.generativefirewallValidateRequestInput(
                    user_input_text = '', 
                    contexts = [
                        ''
                        ], ),
                output = ri.apiclient.models.generativefirewall_validate_request_output.generativefirewallValidateRequestOutput(
                    output_text = '', ),
                firewall_instance_id = ri.apiclient.models.identify_which_firewall_instance_to_route_this_request_to/
this_is_not_used_by_the_server_directly,_but_it_is_necessary_for_routing/.Identify which FirewallInstance to route this request to.
This is not used by the server directly, but it is necessary for routing.()
            )
        else:
            return ValidateRequest(
        )
        """

    def testValidateRequest(self):
        """Test ValidateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
