# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tensorflow_gnn/tools/sampled_stats.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n(tensorflow_gnn/tools/sampled_stats.proto\x12\x14tensorflow_gnn.stats\"}\n\x10GraphTensorStats\x12\x39\n\rfeature_stats\x18\x01 \x03(\x0b\x32\".tensorflow_gnn.stats.FeatureStats\x12.\n\x07samples\x18\x02 \x01(\x0b\x32\x1d.tensorflow_gnn.stats.Samples\"=\n\x07Samples\x12\x32\n\nsize_pairs\x18\x01 \x03(\x0b\x32\x1e.tensorflow_gnn.stats.SizePair\"0\n\x08SizePair\x12\x11\n\tnum_nodes\x18\x01 \x01(\x05\x12\x11\n\tnum_edges\x18\x02 \x01(\x05\"_\n\x05Stats\x12\x0b\n\x03min\x18\x01 \x01(\x02\x12\x0b\n\x03max\x18\x02 \x01(\x02\x12\x0e\n\x06median\x18\x03 \x01(\x02\x12\x0c\n\x04mean\x18\x04 \x01(\x02\x12\x0b\n\x03std\x18\x05 \x01(\x02\x12\x11\n\tquantiles\x18\x06 \x03(\x02\"t\n\x0c\x46\x65\x61tureStats\x12\x10\n\x08set_type\x18\x01 \x01(\t\x12\x10\n\x08set_name\x18\x02 \x01(\t\x12\x14\n\x0c\x66\x65\x61ture_name\x18\x03 \x01(\t\x12*\n\x05stats\x18\x04 \x01(\x0b\x32\x1b.tensorflow_gnn.stats.Stats')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tensorflow_gnn.tools.sampled_stats_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _GRAPHTENSORSTATS._serialized_start=66
  _GRAPHTENSORSTATS._serialized_end=191
  _SAMPLES._serialized_start=193
  _SAMPLES._serialized_end=254
  _SIZEPAIR._serialized_start=256
  _SIZEPAIR._serialized_end=304
  _STATS._serialized_start=306
  _STATS._serialized_end=401
  _FEATURESTATS._serialized_start=403
  _FEATURESTATS._serialized_end=519
# @@protoc_insertion_point(module_scope)
