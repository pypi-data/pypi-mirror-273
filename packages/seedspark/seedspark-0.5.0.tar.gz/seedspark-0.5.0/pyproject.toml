[tool.poetry]
name = "seedspark"
version = "0.5.0"
description = ""
authors = ["ChethanUK <chethanuk@outlook.com>"]
readme = "README.md"

###########################################################################
#                         MAIN DEPENDENCIES
###########################################################################
[tool.poetry.dependencies]
python = "^3.10"
pyspark = {extras = ["connect", "sql"], version = "^3.5.0"}
sqlglot = "^20.11.0"
loguru = "^0.7.2"
onetl = "^0.10.1"
delta-spark = "3.1.0"
requests = "^2.31.0"


###########################################################################
#                         DEPENDENCY GROUPS
###########################################################################
[tool.poetry.group.development]
optional = true

[tool.poetry.group.linting]
optional = true

[tool.poetry.group.testing]
optional = true

[tool.poetry.group.development.dependencies]
semver = "^3"

[tool.poetry.group.testing.dependencies]
farsante = "^0.2.0"
chispa = "^0.9.4"
pytest = "<8"
pytest-cov = "^5"
pytest-asyncio = "^0.23"
python-dotenv = "^1"
coverage = "^7.4.0"
pytest-rerunfailures = "^14"
hypothesis = "^6.98.2"
pytest-describe = "^2.1.0"
types-deprecated = "^1.2.9.20240106"

[tool.poetry.group.linting.dependencies]
pre-commit = "^3.6.0"
ruff = "^0.2.1"
black = "^24.1.1"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[tool.ruff]
# select = ["ALL"]
line-length = 120
extend-exclude = ["docs"]  # "tests",

[tool.ruff.lint]
extend-select = [
  "A",    # flake8-builtins
  "B",  # flake8-bugbear
  "C",  # flake8-comprehensions
  # "D",  # pydocstyle
  "E",  # pycodestyle errors
  "F",  # pyflakes
  "I",  # isort
  "ISC",  # flake8-implicit-str-concat
  "PLE", # pylint error
  "PYI", # flake8-pyi
  "PLR", # pylint refactor
  "PLW", # pylint warning
  "RUF", # ruff
  "T10",  # flake8-debugger
  "W",  # pycodestyle warnings
  "UP", # pyupgrade
]

# 2. Avoid enforcing line-length violations (`E501`)
ignore = ["E501", "D100",]

# 3. Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]


[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402", "ERA001", "PLR2004"]

[tool.ruff.format]
docstring-code-format = true


## Black

[tool.black]
# https://github.com/psf/black
line-length = 119
# multi_line_output = 3
# include_trailing_comma = true
# force_grid_wrap = 0
# use_parentheses = true
# ensure_newline_before_comments = true
target_version = ['py38', 'py39', 'py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.venv
  | tests/airflow-dags/
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort
# https://github.com/timothycrosley/isort/wiki/isort-Settings
profile = "black"
line_length = 120
indent = '    '
multi_line_output = 3
include_trailing_comma = true
#force_grid_wrap = 0
atomic = true
#lines_after_imports = 2
#lines_between_types = 1
skip_glob = ['__init__.py']
#src_paths=isort,test

# [mypy]
# python_version = 3.8
# #warn_return_any = True

[tool.pytest.ini_options]
# testpaths = "tests"
minversion = "2.0"
# timeout = 300
addopts = "-rfEX -p pytester --strict-markers"
python_files = ["*test_*.py", "*_test.py",]
norecursedirs = [
  "testing/example_scripts",
  ".*",
  "build",
  "dist",
]
xfail_strict = true
filterwarnings = [
    "ignore::DeprecationWarning:pyspark.*:"
#     "error",
#     "default:Using or importing the ABCs:DeprecationWarning:unittest2.*"
]
pythonpath = [
]
testpaths = [
    "tests"
]

[tool.mypy]
mypy_path = ["seedspark"]
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = true
ignore_missing_imports = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true

[tool.bandit]
exclude_dirs = ["tests", "airflow"]
exclude = ["seedspark/sparkapp.py"]
skips = ["B608"]
