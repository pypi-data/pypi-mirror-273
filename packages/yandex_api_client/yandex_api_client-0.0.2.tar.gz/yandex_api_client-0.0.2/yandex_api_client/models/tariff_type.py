# coding: utf-8

"""
    Партнерский API Маркета

    API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

    The version of the OpenAPI document: LATEST
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
import re  # noqa: F401
from enum import Enum



try:
    from typing import Self
except ImportError:
    from typing_extensions import Self


class TariffType(str, Enum):
    """
    Услуга Маркета, за которую начисляется тариф:  * `AGENCY_COMMISSION` — прием платежа покупателя.  * `PAYMENT_TRANSFER` — перевод платежа покупателя.  * `STORAGE` — хранение товара на складе Маркета в течение суток.  * `SURPLUS` — хранение излишков на складе Маркета.  * `WITHDRAW` — вывоз товара со склада Маркета.  * `FEE` — размещение товара на Маркете.  * `DELIVERY_TO_CUSTOMER` — доставка покупателю.  * `CROSSREGIONAL_DELIVERY` — доставка в федеральный округ, город или населенный пункт.  * `CROSSREGIONAL_DELIVERY_RETURN` — доставка невыкупов и возвратов.  * `DISPOSAL` — утилизация.  * `SORTING_CENTER_STORAGE` — хранение невыкупов и возвратов.  * `EXPRESS_DELIVERY` — экспресс-доставка покупателю.  * `FF_XDOC_SUPPLY_BOX` — поставка товара через транзитный склад (за короб).  * `FF_XDOC_SUPPLY_PALLET` — поставка товара через транзитный склад (за палету).  * `SORTING` — обработка заказа.  * `MIDDLE_MILE` — средняя миля.  * `RETURN_PROCESSING` — обработка невыкупов и возвратов.  * `EXPRESS_CANCELLED_BY_PARTNER` — отмена заказа с экспресс-доставкой.  * `DELIVERY_TO_CUSTOMER_RETURN` — возврат доставляемого товара на склад.  * `CROSSBORDER_DELIVERY` — доставка из-за рубежа.  * `INTAKE_SORTING_BULKY_CARGO` — сортировка заказов с крупногабаритными товарами, которые Маркет забрал со склада продавца.  * `INTAKE_SORTING_SMALL_GOODS` — сортировка заказов с малогабаритными товарами, которые Маркет забрал со склада продавца.  * `INTAKE_SORTING_DAILY` — организация забора заказов со склада продавца.  * `FF_STORAGE_BILLING` — хранения товаров на складе.  Подробнее об услугах Маркета читайте [в Справке для продавцов](https://yandex.ru/support/marketplace/introduction/rates/index.html). 
    """

    """
    allowed enum values
    """
    AGENCY_COMMISSION = 'AGENCY_COMMISSION'
    PAYMENT_TRANSFER = 'PAYMENT_TRANSFER'
    STORAGE = 'STORAGE'
    WITHDRAW = 'WITHDRAW'
    SURPLUS = 'SURPLUS'
    FEE = 'FEE'
    DELIVERY_TO_CUSTOMER = 'DELIVERY_TO_CUSTOMER'
    CROSSREGIONAL_DELIVERY = 'CROSSREGIONAL_DELIVERY'
    CROSSREGIONAL_DELIVERY_RETURN = 'CROSSREGIONAL_DELIVERY_RETURN'
    DISPOSAL = 'DISPOSAL'
    SORTING_CENTER_STORAGE = 'SORTING_CENTER_STORAGE'
    EXPRESS_DELIVERY = 'EXPRESS_DELIVERY'
    FF_XDOC_SUPPLY_BOX = 'FF_XDOC_SUPPLY_BOX'
    FF_XDOC_SUPPLY_PALLET = 'FF_XDOC_SUPPLY_PALLET'
    SORTING = 'SORTING'
    MIDDLE_MILE = 'MIDDLE_MILE'
    RETURN_PROCESSING = 'RETURN_PROCESSING'
    EXPRESS_CANCELLED_BY_PARTNER = 'EXPRESS_CANCELLED_BY_PARTNER'
    DELIVERY_TO_CUSTOMER_RETURN = 'DELIVERY_TO_CUSTOMER_RETURN'
    CROSSBORDER_DELIVERY = 'CROSSBORDER_DELIVERY'
    INTAKE_SORTING_BULKY_CARGO = 'INTAKE_SORTING_BULKY_CARGO'
    INTAKE_SORTING_SMALL_GOODS = 'INTAKE_SORTING_SMALL_GOODS'
    INTAKE_SORTING_DAILY = 'INTAKE_SORTING_DAILY'
    FF_STORAGE_BILLING = 'FF_STORAGE_BILLING'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of TariffType from a JSON string"""
        return cls(json.loads(json_str))


