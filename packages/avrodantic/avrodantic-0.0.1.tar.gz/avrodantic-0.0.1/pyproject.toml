[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "avrodantic"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Kevin Anker", email = "34544392+kevinanker@users.noreply.github.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "fastavro==1.*",
  "typer==0.*",
]

[project.urls]
Documentation = "https://github.com/kevinanker/avrodantic#readme"
Issues = "https://github.com/kevinanker/avrodantic/issues"
Source = "https://github.com/kevinanker/avrodantic"

[project.scripts]
avrodantic = "avrodantic.cli:app"

[tool.hatch.build.targets.sdist]
only-include = ["avrodantic"]

[tool.hatch.build.targets.wheel]
packages = ["src/avrodantic"]

[tool.hatch.version]
path = "src/avrodantic/__about__.py"

[tool.hatch.envs.default.scripts]
avrodantic = "python src/avrodantic/cli.py {args}"

[tool.hatch.envs.test]
dependencies = [
    "pydantic",
    "coverage[toml]>=6.2",
    "pytest",
    "pytest-cov",
    "hypothesis",
]

[tool.hatch.envs.test.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=src/avrodantic --cov=tests {args}"
no-cov = "cov --no-cov {args}"
debug =  "cov --no-cov -s --pdb --pdbcls=IPython.core.debugger:Pdb {args}"

[tool.hatch.envs.lint]
dependencies = [
    "ruff~=0.3.7",
]

[tool.hatch.envs.lint.scripts]
check = [
    "ruff check {args:.}",
    "ruff format --check {args:.}",
]
fix = [
    "ruff check --fix {args:.}",
    "ruff format {args:.}",
    "check",  # feedback on what is not fixable
]

[tool.coverage.run]
source_pkgs = ["avrodantic", "tests"]
branch = true
parallel = true
omit = [
  "src/avrodantic/__about__.py",
]

[tool.coverage.paths]
avrodantic = ["src/avrodantic", "*/avrodantic/src/avrodantic"]
tests = ["tests", "*/avrodantic/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
target-version = "py312"
line-length = 120
indent-width = 4
include = [
    "src/**/*.py",
    "src/**/*.pyi",
    "tests/**/*.py",
    "tests/**/*.pyi"
]

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "I"]
ignore = []

