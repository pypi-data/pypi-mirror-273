[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=60", "wheel", "build", "setuptools_scm[toml]>=7.1"]

[project]
authors = [
  {name = "DoPlayDo", email = "contact@doplaydo.com"}
]
classifiers = [
  "Programming Language :: Python :: 3.11",
  "Operating System :: OS Independent"
]
dependencies = [
  "psycopg2-binary",
  "pydantic>=2,<3",
  "pydantic-settings",
  "sqlmodel>=0.0.14"
]
description = "Core for DoData"
license = {file = "LICENSE"}
name = "dodata_core"
readme = "README.md"
requires-python = ">=3.11"
version = "0.5.1"

[project.optional-dependencies]
dev = [
  "ruff",
  "mypy",
  "pre-commit",
  "pytest",
  "towncrier",
  "tbump",
  "pytest_regressions",
  "pytest-cov"
]
maintainer = [
  "pylsp-mypy",
  "python-lsp-server[all]",
  "python-lsp-ruff"
]

[project.scripts]

[tool.codespell]
ignore-words-list = "euclidian,TE,TE/TM,te,ba,FPR,fpr_spacing,ro,nd,donot,schem"
skip = "pyproject.toml"

[tool.isort]
include_trailing_comma = true
line_length = 88
multi_line_output = 3
skip = ["doplaydo/dodata_core/__init__.py"]

[tool.mypy]
exclude = [
  "tests"
]
plugins = "pydantic.mypy"
python_version = "3.11"
strict = true

[[tool.mypy.overrides]]
implicit_reexport = true
module = "doplaydo"

[tool.pylsp-mypy]
enabled = true
live_mode = true
strict = true

[tool.pytest.ini_options]
addopts = '--tb=short'
norecursedirs = ["extra/*.py"]
testpaths = ["tests"]

[tool.ruff]
exclude = ["tests", "docs"]
indent-width = 4
line-length = 88
select = [
  "E",  # pycodestyle
  "F",  # pyflakes
  "UP",  # pyupgrade
  "D"  # pydocstyle
]
target-version = "py311"

[tool.ruff.format]
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

[tool.ruff.pydocstyle]
convention = "google"

[tool.setuptools.packages.find]
where = ["src"]

[tool.tbump]

[[tool.tbump.before_commit]]
cmd = "towncrier build --yes --version {new_version}"
name = "create & check changelog"

[[tool.tbump.before_commit]]
cmd = "git add CHANGELOG.md"
name = "create & check changelog"

[[tool.tbump.before_commit]]
cmd = "grep -q -F {new_version} CHANGELOG.md"
name = "create & check changelog"

# For each file to patch, add a [[file]] config
# section containing the path of the file, relative to the
# tbump.toml location.
[[tool.tbump.file]]
src = "README.md"

[[tool.tbump.file]]
search = 'version = "{current_version}"'
src = "pyproject.toml"

[[tool.tbump.file]]
search = 'current = "{current_version}"'
src = "pyproject.toml"

[[tool.tbump.file]]
src = "src/doplaydo/dodata_core/__init__.py"

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[tool.tbump.version]
current = "0.5.1"  # bump this
# Example of a semver regexp.
# Make sure this matches current_version before
# using tbump
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  '''

[tool.towncrier]
directory = ".changelog.d"
filename = "CHANGELOG.md"
issue_format = "[#{issue}](https://github.com/doplaydo/dodata_core/issues/{issue})"
start_string = "<!-- towncrier release notes start -->\n"
template = ".changelog.d/changelog_template.jinja"
title_format = "## [{version}](https://github.com/doplaydo/dodata_core/releases/v{version}) - {project_date}"
underlines = ["", "", ""]

[[tool.towncrier.type]]
directory = "security"
name = "Security"
showcontent = true

[[tool.towncrier.type]]
directory = "removed"
name = "Removed"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = "Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Fixed"
showcontent = true

[tool.yapf]
allow_multiline_lambdas = true
based_on_style = "google"
