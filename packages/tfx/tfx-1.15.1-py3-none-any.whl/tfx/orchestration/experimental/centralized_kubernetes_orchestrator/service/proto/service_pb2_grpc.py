# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from tfx.orchestration.experimental.centralized_kubernetes_orchestrator.service.proto import service_pb2 as tfx_dot_orchestration_dot_experimental_dot_centralized__kubernetes__orchestrator_dot_service_dot_proto_dot_service__pb2


class KubernetesOrchestratorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Echo = channel.unary_unary(
        '/tfx.orchestration.experimental.centralized_kubernetes_orchestrator.service.KubernetesOrchestrator/Echo',
        request_serializer=tfx_dot_orchestration_dot_experimental_dot_centralized__kubernetes__orchestrator_dot_service_dot_proto_dot_service__pb2.EchoRequest.SerializeToString,
        response_deserializer=tfx_dot_orchestration_dot_experimental_dot_centralized__kubernetes__orchestrator_dot_service_dot_proto_dot_service__pb2.EchoResponse.FromString,
        )
    self.StartPipeline = channel.unary_unary(
        '/tfx.orchestration.experimental.centralized_kubernetes_orchestrator.service.KubernetesOrchestrator/StartPipeline',
        request_serializer=tfx_dot_orchestration_dot_experimental_dot_centralized__kubernetes__orchestrator_dot_service_dot_proto_dot_service__pb2.StartPipelineRequest.SerializeToString,
        response_deserializer=tfx_dot_orchestration_dot_experimental_dot_centralized__kubernetes__orchestrator_dot_service_dot_proto_dot_service__pb2.StartPipelineResponse.FromString,
        )
    self.StopPipeline = channel.unary_unary(
        '/tfx.orchestration.experimental.centralized_kubernetes_orchestrator.service.KubernetesOrchestrator/StopPipeline',
        request_serializer=tfx_dot_orchestration_dot_experimental_dot_centralized__kubernetes__orchestrator_dot_service_dot_proto_dot_service__pb2.StopPipelineRequest.SerializeToString,
        response_deserializer=tfx_dot_orchestration_dot_experimental_dot_centralized__kubernetes__orchestrator_dot_service_dot_proto_dot_service__pb2.StopPipelineResponse.FromString,
        )


class KubernetesOrchestratorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Echo(self, request, context):
    """Response returns the same msg as request.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartPipeline(self, request, context):
    """Starts a pipeline. A pipeline will be started using the provided pipeline
    definition if there is no currently active pipeline having the same
    `pipeline_id`. Only a previously stopped or a new pipeline can be started.
    The RPC will fail otherwise.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopPipeline(self, request, context):
    """Stops a currently active pipeline.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_KubernetesOrchestratorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Echo': grpc.unary_unary_rpc_method_handler(
          servicer.Echo,
          request_deserializer=tfx_dot_orchestration_dot_experimental_dot_centralized__kubernetes__orchestrator_dot_service_dot_proto_dot_service__pb2.EchoRequest.FromString,
          response_serializer=tfx_dot_orchestration_dot_experimental_dot_centralized__kubernetes__orchestrator_dot_service_dot_proto_dot_service__pb2.EchoResponse.SerializeToString,
      ),
      'StartPipeline': grpc.unary_unary_rpc_method_handler(
          servicer.StartPipeline,
          request_deserializer=tfx_dot_orchestration_dot_experimental_dot_centralized__kubernetes__orchestrator_dot_service_dot_proto_dot_service__pb2.StartPipelineRequest.FromString,
          response_serializer=tfx_dot_orchestration_dot_experimental_dot_centralized__kubernetes__orchestrator_dot_service_dot_proto_dot_service__pb2.StartPipelineResponse.SerializeToString,
      ),
      'StopPipeline': grpc.unary_unary_rpc_method_handler(
          servicer.StopPipeline,
          request_deserializer=tfx_dot_orchestration_dot_experimental_dot_centralized__kubernetes__orchestrator_dot_service_dot_proto_dot_service__pb2.StopPipelineRequest.FromString,
          response_serializer=tfx_dot_orchestration_dot_experimental_dot_centralized__kubernetes__orchestrator_dot_service_dot_proto_dot_service__pb2.StopPipelineResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'tfx.orchestration.experimental.centralized_kubernetes_orchestrator.service.KubernetesOrchestrator', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
